<?xml version="1.0" encoding="utf-8"?>
<transfer default="chunk">
  <!-- TODO:
       *   De. Deres måte å sykle
         - Dei. Måten dei syklar
         + Dei. måten De syklar
       * Chunk ADV+ and verbs, so that we can avoid 
           visste hvor høy farten var => visste kor den høge farten var
  -->
  <section-def-cats>
    <!-- compound lhs's are never genitive: -->
    <def-cat n="n-ep">
      <cat-item tags="n.*.*.*.ep-s"/>
      <cat-item tags="n.*.*.*.ep-Ø"/>
    </def-cat>
    <def-cat n="nind">
      <cat-item tags="n.*.*.ind"/>
      <cat-item tags="n.*.*.ind.gen"/>
    </def-cat>
    <!-- n does not include compound lhs's: -->
    <def-cat n="n">
      <cat-item tags="n.*.*.*"/>
      <cat-item tags="n.*.*.*.gen"/>
    </def-cat>
    <!-- is this ever a compound-lhs? TODO -->
    <def-cat n="np">
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="nom">
      <cat-item tags="n.*.*.*"/>
      <cat-item tags="n.*.*.*.gen"/>
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="nacr">
      <cat-item tags="n.acr"/>
    </def-cat>
    <def-cat n="ndef">
      <cat-item tags="n.*.*.def"/>
      <cat-item tags="n.*.*.def.gen"/>
    </def-cat>
    <def-cat n="ngen">
      <cat-item tags="n.*.*.*.gen"/>
    </def-cat>
    <def-cat n="ngen_time_meas">
      <cat-item tags="n.m.sg.*.gen"   lemma="liter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="liter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="centimeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="centimeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="kilometer"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="kilometer"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="millimeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="millimeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="kubikkmeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="kubikkmeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="kvadratkilometer"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="kvadratkilometer"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="centiliter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="centiliter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="dekaliter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="dekaliter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="dekameter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="dekameter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="desiliter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="desiliter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="desimeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="desimeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="hektoliter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="hektoliter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="kilopondmeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="kilopondmeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="kubikkcentimeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="kubikkcentimeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="kubikkdesimeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="kubikkdesimeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="kvadratmeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="kvadratmeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="løpemeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="løpemeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="milliliter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="milliliter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="nanometer"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="nanometer"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="sekundmeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="sekundmeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="spaltemillimeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="spaltemillimeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="tonnkilometer"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="tonnkilometer"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="passasjerkilometer"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="passasjerkilometer"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="rutemeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="rutemeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="laupemeter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="laupemeter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="meter"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="meter"/>
      <cat-item tags="n.m.sg.*.gen"   lemma="kilometer"/>
      <cat-item tags="n.m.pl.ind.gen" lemma="kilometer"/>

      <cat-item tags="n.*.sg.*.gen"   lemma="mil"/>
      <cat-item tags="n.*.pl.ind.gen" lemma="mil"/>
      <cat-item tags="n.*.sg.*.gen"   lemma="sjømil"/>
      <cat-item tags="n.*.pl.ind.gen" lemma="sjømil"/>
      <cat-item tags="n.*.sg.*.gen"   lemma="kvartmil"/>
      <cat-item tags="n.*.pl.ind.gen" lemma="kvartmil"/>
      <cat-item tags="n.*.sg.*.gen"   lemma="halvmil"/>
      <cat-item tags="n.*.pl.ind.gen" lemma="halvmil"/>

      <cat-item tags="n.nt.sg.*.gen"   lemma="år"/>
      <cat-item tags="n.nt.pl.ind.gen" lemma="år"/>
      <cat-item tags="n.m.sg.*.gen"    lemma="dag"/>
      <cat-item tags="n.m.pl.ind.gen"  lemma="dag"/>
      <cat-item tags="n.*.sg.*.gen"    lemma="uke"/>
      <cat-item tags="n.*.pl.ind.gen"  lemma="uke"/>
    </def-cat>
    <def-cat n="det">
      <cat-item tags="det.*"/>
    </def-cat>
    <def-cat n="detpos">
      <cat-item tags="det.pos.*"/>
    </def-cat>
    <def-cat n="detnonpos">
      <cat-item tags="det.def.*"/>
      <cat-item tags="det.dem.*"/>
      <cat-item tags="det.emph.*"/>
      <cat-item tags="det.itg.*"/>
      <cat-item tags="det.qnt.*"/>
    </def-cat>
    <def-cat n="posgen">
      <cat-item tags="det.pos.*"/>
      <cat-item tags="n.*.*.*.gen"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj.*"/>
    </def-cat>
    <def-cat n="preadj-adv">
      <cat-item lemma="ikke" tags="adv"/>
      <cat-item lemma="for" tags="adv"/>
      <cat-item lemma="altfor" tags="adv"/>
      <cat-item lemma="forholdsvis" tags="adv"/>
      <cat-item lemma="forhåpentlig" tags="adv"/>
      <cat-item lemma="forholdsvis" tags="adv"/>
      <cat-item lemma="hvor" tags="adv"/>
      <cat-item lemma="kanon" tags="adv"/>
      <cat-item lemma="sørpe" tags="adv"/>
      <cat-item lemma="bom" tags="adv"/>
      <cat-item lemma="dønn" tags="adv"/>
      <cat-item lemma="eitrende" tags="adv"/>
      <cat-item lemma="forhakkende" tags="adv"/>
      <cat-item lemma="fullstendig" tags="adv"/>
      <cat-item lemma="delvis" tags="adv"/>
    </def-cat>
    <def-cat n="adjind">
      <cat-item tags="adj.*.*.*.ind"/>
      <cat-item tags="adj.*.pl"/>
      <cat-item tags="adj.comp"/>
      <cat-item tags="adj.pprs"/>                              <!--hvor truende-->
      <cat-item tags="adj.sup.ind"/>                           <!---->
    </def-cat>
    <def-cat n="adv">
      <cat-item tags="adv"/>
    </def-cat>
    <def-cat n="infm">
      <cat-item lemma="å" tags="part"/>
    </def-cat>
    <def-cat n="måte">
      <cat-item lemma="måte" tags="n.m.sg.ind"/>
    </def-cat>
    <def-cat n="vblex">
      <cat-item tags="vblex.*"/>
    </def-cat>
    <def-cat n="vblexinf">
      <cat-item tags="vblex.inf"/>
    </def-cat>
    <def-cat n="vblexinfpass">
      <cat-item tags="vblex.inf.pass"/>
    </def-cat>
    <def-cat n="vblexprespass">
      <cat-item tags="vblex.pres.pass"/>
      <cat-item tags="vblex.pstv.pres"/>
    </def-cat>
  </section-def-cats>
  <section-def-attrs>
    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="n.acr"/>
      <attr-item tags="np"/>
      <attr-item tags="np.top"/>
    </def-attr>
    <def-attr n="a_ep">
      <attr-item tags="ep-s"/>
      <attr-item tags="ep-e"/>
      <attr-item tags="ep-Ø"/>
    </def-attr>
    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.pp"/>
      <attr-item tags="adj.pprs"/>
      <attr-item tags="adj.posi"/>
      <attr-item tags="adj.comp"/>
      <attr-item tags="adj.sup"/>
      <attr-item tags="adj.ord.posi"/>
      <attr-item tags="adj.ord.comp"/>
      <attr-item tags="adj.ord.sup"/>
    </def-attr>
    <def-attr n="persona">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>
    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
      <attr-item tags="vblex.pstv"/>
    </def-attr>
    <def-attr n="temps">
      <attr-item tags="inf"/>
      <attr-item tags="imp"/>
      <attr-item tags="pres"/>
      <attr-item tags="pret"/>
      <attr-item tags="pp"/>
    </def-attr>
    <def-attr n="voice">
      <attr-item tags="pass"/>
    </def-attr>
    <def-attr n="a_det">
      <attr-item tags="det"/> 
      <attr-item tags="det.emph"/>
      <attr-item tags="det.dem"/>
      <attr-item tags="det.itg"/>
      <attr-item tags="det.qnt"/>
      <attr-item tags="det.qnt.neg"/>
      <attr-item tags="det.pos"/>
    </def-attr>
    <def-attr n="gen">
      <attr-item tags="m"/>
      <attr-item tags="mf"/>
      <attr-item tags="nt"/>
      <attr-item tags="f"/>
      <attr-item tags="GD"/>
    </def-attr>
    <def-attr n="nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
      <attr-item tags="ND"/>
    </def-attr>
    <def-attr n="cas">
      <attr-item tags="nom"/>
      <attr-item tags="gen"/>
      <attr-item tags="acc"/>
      <attr-item tags="CD"/>
    </def-attr>
    <def-attr n="art">
      <attr-item tags="def"/>
      <attr-item tags="ind"/>
    </def-attr>
  </section-def-attrs>

  <section-def-vars>
    <def-var n="gen-prep"/>
    <def-var n="caseFirstWord"/>
    <def-var n="chunkname"/>
    <def-var n="ntags"/>
    <def-var n="pass"/>
    <def-var n="ep"/>
    <def-var n="ep2"/>
  </section-def-vars>
  
  <section-def-lists>
    <!-- POSSESSED-DEPENDENT EXCEPTIONS TODO: omkretsen til verda,
         lengden på dokumentet, ryktet til styret, lukta av/etter
         kua... (although this could be coded in all the dictionaries,
         or added by CG, it's probably simpler and more compact to do
         it with def-list and macros) -->
    <def-list n="gen-i">
      <list-item v="verd"/>
      <list-item v="by"/>
      <list-item v="dal"/>
      <list-item v="luft"/>
      <list-item v="radio"/>
      <list-item v="hav"/>
      <list-item v="ryggmarg"/>
      <list-item v="styre"/>
      <list-item v="fylke"/>
      <list-item v="hus"/>
      <list-item v="ferie"/>
      <list-item v="sak"/>
      <list-item v="århundre"/>
      <list-item v="dokument"/>
    </def-list>
    <def-list n="gen-på">
      <list-item v="måndag"/>
      <list-item v="tysdag"/>
      <list-item v="onsdag"/>
      <list-item v="torsdag"/>
      <list-item v="fredag"/>
      <list-item v="laurdag"/>
      <list-item v="søndag"/>
      <list-item v="dag"/>
      <list-item v="øy"/>
      <list-item v="topp"/>
      <list-item v="kjøkken"/>
      <list-item v="skip"/>
    </def-list>
    
    <def-list n="det_indef">
      <!-- feels like these should have their own
           sub-pos... «<det><dem> som kan ha <ind> etter seg på
           bokmål» -->
      <list-item v="denne"/>
      <list-item v="disse"/>
      <list-item v="dette"/>
      <list-item v="den"/>
      <list-item v="de"/>
    </def-list>
  </section-def-lists>

  <section-def-macros>
    <def-macro n="set_ep" npar="1">
      <let><var n="ep"/><lit v=""/></let>
      <choose>
        <when><test><equal><clip pos="1" side="sl" part="a_ep"/><lit-tag v="ep-s"/></equal></test>
        <let><var n="ep"/><concat><lit v="^s"/><lit-tag v="ep-s"/><lit v="$"/></concat></let></when>
        <when><test><equal><clip pos="1" side="sl" part="a_ep"/><lit-tag v="ep-e"/></equal></test>
        <let><var n="ep"/><concat><lit v="^e"/><lit-tag v="ep-e"/><lit v="$"/></concat></let></when>
        <when><test><equal><clip pos="1" side="sl" part="a_ep"/><lit-tag v="ep-Ø"/></equal></test>
        <let><var n="ep"/><concat><lit v="^Ø"/><lit-tag v="ep-Ø"/><lit v="$"/></concat></let></when>
      </choose>
      <let><clip pos="1" side="tl" part="a_ep"/><lit v=""/></let>
    </def-macro>
    <def-macro n="set_ep2" npar="2">
      <call-macro n="set_ep"><with-param pos="2"/></call-macro>
      <let><var n="ep2"/><var n="ep"/></let>
      <call-macro n="set_ep"><with-param pos="1"/></call-macro>
    </def-macro>
    
    <def-macro n="stash_case_in_ntags" npar="1"
               c="arg.1: noun. Puts tags of noun in ntags (for use as chunk tags), removes case from the word.">
      <let><var n="ntags"/><clip pos="1" side="tl" part="tags"/></let>
      <let><clip pos="1" side="tl" part="cas"/><lit v=""/></let>
    </def-macro>

    <def-macro n="switch_cases" npar="2">
      <choose>
        <when>
          <test><not>
            <and>
              <equal><clip pos="2" side="tl" part="lemh"/><lit v="De"/></equal>
              <equal><clip pos="2" side="tl" part="a_det"/><lit-tag v="det.pos"/></equal>
              <equal><clip pos="2" side="tl" part="persona"/><lit-tag v="p2"/></equal>
            </and>
          </not></test>
          <let><var n="caseFirstWord"/><get-case-from pos="1"><clip pos="1" side="tl" part="lemh"/></get-case-from></let>
          <let><clip pos="1" side="tl" part="lemh"/><get-case-from pos="2"><clip pos="1" side="tl" part="lemh"/></get-case-from></let>
          <modify-case><clip pos="2" side="tl" part="lemh"/><var n="caseFirstWord"/></modify-case>
        </when>
      </choose>
    </def-macro>

    <def-macro n="set_caseFirstWord" npar="1">
      <let><var n="caseFirstWord"/><get-case-from pos="1"><lit v="aa"/></get-case-from></let>
      <modify-case><clip pos="1" side="tl" part="lemh"/><lit v="aa"/></modify-case>
    </def-macro>
    <def-macro n="set_caseFirstWord2" npar="2">
      <!-- arg.1: possessed noun. arg.2: det.pos, gives typographic case -->
      <choose>
        <when>
          <test><not>
            <and>
              <equal><clip pos="2" side="tl" part="lemh"/><lit v="De"/></equal>
              <equal><clip pos="2" side="tl" part="a_det"/><lit-tag v="det.pos"/></equal>
              <equal><clip pos="2" side="tl" part="persona"/><lit-tag v="p2"/></equal>
            </and>
          </not></test>
          <let><var n="caseFirstWord"/><get-case-from pos="2"><lit v="aa"/></get-case-from></let>
          <modify-case><clip pos="1" side="tl" part="lemh"/><lit v="aa"/></modify-case>
        </when>
      </choose>
    </def-macro>

    <!-- Macros which set concordance variables: -->    
    <def-macro n="set_gender1.adj" npar="1"
               c="arg.1: adj">
      <choose><when>
        <test><or>
          <equal><clip pos="1" side="tl" part="gen"/><lit-tag v="m"/></equal>
          <equal><clip pos="1" side="tl" part="gen"/><lit-tag v="GD"/></equal>
        </or></test>
        <let><clip pos="1" side="tl" part="gen"/><lit-tag v="mf"/></let>
      </when></choose>
    </def-macro>

    <def-macro n="set_gender2.n.adj" npar="2"
               c="arg.1: noun, arg.2: adjective
                  Only take noun gender if adj is GD (in which case we may have adj.f in nn.dix),
                  or if noun has changed gender (if not GD, don't allow adj.f as target).
                  (We want to allow 'helt.nt svart.mf katt.m', no gender change nor GD on 'helt',
                   but o/w make sure adj corresponds: 'helt.nt forfatterskap => heil.mf forfattarskap')">
      <choose><when>
        <test><or>
          <equal><clip pos="2" side="tl" part="gen"/><lit-tag v="GD"/></equal>
          <and>
            <not><equal><clip pos="1" side="sl" part="gen"/><clip pos="1" side="tl" part="gen"/></equal></not>
            <not><equal><clip pos="1" side="tl" part="gen"/><lit-tag v="f"/></equal></not>
          </and>
        </or></test>
        <let><clip pos="2" side="tl" part="gen"/><clip pos="1" side="tl" part="gen"/></let>
      </when></choose>
      <call-macro n="set_gender1.adj"><with-param pos="2"/></call-macro>
    </def-macro>

    <!-- Output macros: -->    
    <def-macro n="out_ndef" npar="2">
      <!-- arg.1: possessed noun. arg.2 gives typographic case
           
           Strip case, add definiteness.  -->
      <call-macro n="set_caseFirstWord2">
        <with-param pos="1"/>
        <with-param pos="2"/>
      </call-macro>
      <let><clip pos="1" side="tl" part="art"/><lit-tag v="def"/></let>
      <out>
        <chunk name="n" case="caseFirstWord">
          <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_nom"/>
            <clip pos="1" side="tl" part="gen"/>
            <clip pos="1" side="tl" part="nbr"/>
            <clip pos="1" side="tl" part="art"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </chunk>
      </out>
    </def-macro>
        
    <def-macro n="out_posgen_subj" npar="2">
      <!-- arg.1: possessor, either genitive noun or det.pos.
           arg.2: gives case
           Assumes no variables.
           Turns eg. "min" into "eg", "naboens" into "naboen".
           Strips case both from chunk and word.
      -->
      <choose>
        <when>
          <test><equal><clip pos="1" side="sl" part="a_det"/><lit-tag v="det.pos"/></equal></test>
          <call-macro n="set_caseFirstWord"><with-param pos="2"/></call-macro>
          <out>
            <chunk name="prn" case="caseFirstWord">
              <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
              <lu>
                <clip pos="1" side="tl" part="lemh"/>
                <lit-tag v="prn"/>
                <clip pos="1" side="tl" part="persona"/>
                <clip pos="1" side="tl" part="lemq"/>
              </lu>
            </chunk>
          </out>
        </when>
      <otherwise>
        <call-macro n="set_caseFirstWord"><with-param pos="2"/></call-macro>
        <let><clip pos="1" side="tl" part="cas"/><lit v=""/></let>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
            <lu>
              <get-case-from pos="2"><clip pos="1" side="tl" part="lemh"/></get-case-from>
              <clip pos="1" side="tl" part="tags"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </otherwise>
      </choose>  
    </def-macro>
    
    <def-macro n="out_gen-prep" npar="1"
               c="arg.1: noun. Only acts on genitives. Adds a space after.">
      <choose><when>
        <test><equal><clip pos="1" side="sl" part="cas"/><lit-tag v="gen"/></equal></test>
        <choose>
          <when><test><in><clip pos="1" side="tl" part="lemh"/><list n="gen-i"/></in></test>
          <let><var n="gen-prep"/><lit v="i"/></let></when>
          <when><test><in><clip pos="1" side="tl" part="lemh"/><list n="gen-på"/></in></test>
          <let><var n="gen-prep"/><lit v="på"/></let></when>
          <otherwise><let><var n="gen-prep"/><lit v="til"/></let></otherwise>
        </choose>
        <out>
          <chunk name="gen-prep">
            <tags><tag><lit-tag v="pr"/></tag></tags>
            <lu>
              <var n="gen-prep"/>
              <lit-tag v="pr"/>
            </lu>
          </chunk>
          <b/>
        </out>
      </when></choose>
    </def-macro>
  </section-def-macros>
  
  <section-rules>
    <!-- Verbs -->
    <rule comment="Å VBLEX.INF.PASS: å leses => å bli lest">
      <pattern>
        <pattern-item n="infm"/>
        <pattern-item n="vblexinfpass"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <choose><when>
          <test><equal>
            <clip pos="2" side="tl" part="a_verb"/><lit-tag v="vblex.pstv"/>
          </equal></test>
          <out>
            <chunk name="part_vblex" case="caseFirstWord">
              <tags><tag><clip pos="2" side="tl" part="tags"/></tag></tags>
              <lu><clip pos="1" side="tl" part="whole"/></lu>
              <b pos="1"/>
              <lu><clip pos="2" side="tl" part="whole"/></lu>
            </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk name="part_vblex_vblex" case="caseFirstWord">
              <tags><tag><clip pos="2" side="tl" part="tags"/></tag></tags>
              <lu><clip pos="1" side="tl" part="whole"/></lu>
              <b pos="1"/>
              <lu>
                <lit v="bli"/>	    
                <lit-tag v="vblex.inf"/>
              </lu>
              <b/>
              <lu>	    
                <clip pos="2" side="tl" part="lemh"/>
                <clip pos="2" side="tl" part="a_verb"/>
                <lit-tag v="pp"/>
                <clip pos="2" side="tl" part="lemq"/>
              </lu>
            </chunk>
          </out>
        </otherwise></choose>
      </action>
    </rule>
    <rule comment="Å ADV VBLEX.INF.PASS: å ofte leses => å ofte bli lest">
      <pattern>
        <pattern-item n="infm"/>
        <pattern-item n="adv"/>
        <pattern-item n="vblexinfpass"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <choose><when>
          <test><equal>
            <clip pos="3" side="tl" part="a_verb"/><lit-tag v="vblex.pstv"/>
          </equal></test>
          <out>
            <chunk name="part_adv_vblex" case="caseFirstWord">
              <tags><tag><clip pos="3" side="tl" part="tags"/></tag></tags>
              <lu><clip pos="1" side="tl" part="whole"/></lu>
              <b pos="1"/>
              <lu><clip pos="2" side="tl" part="whole"/></lu>
              <b pos="2"/>
              <lu><clip pos="3" side="tl" part="whole"/></lu>
            </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk name="part_adv_vblex_vblex" case="caseFirstWord">
              <tags><tag><clip pos="3" side="tl" part="tags"/></tag></tags>
              <lu><clip pos="1" side="tl" part="whole"/></lu>
              <b pos="1"/>
              <lu><clip pos="2" side="tl" part="whole"/></lu>
              <b pos="2"/>
              <lu>
                <lit v="bli"/>	    
                <lit-tag v="vblex.inf"/>
              </lu>
              <b/>
              <lu>	    
                <clip pos="3" side="tl" part="lemh"/>
                <clip pos="3" side="tl" part="a_verb"/>
                <lit-tag v="pp"/>
                <clip pos="3" side="tl" part="lemq"/>
              </lu>
            </chunk>
          </out>
        </otherwise></choose>
      </action>
    </rule>
    <rule comment="Å ADV ADV VBLEX.INF.PASS: å kanskje ofte leses => å kanskje ofte bli lest">
      <pattern>
        <pattern-item n="infm"/>
        <pattern-item n="adv"/>
        <pattern-item n="adv"/>
        <pattern-item n="vblexinfpass"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <choose><when>
          <test><equal>
            <clip pos="4" side="tl" part="a_verb"/><lit-tag v="vblex.pstv"/>
          </equal></test>
          <out>
            <chunk name="part_adv_adv_vblex" case="caseFirstWord">
              <tags><tag><clip pos="4" side="tl" part="tags"/></tag></tags>
              <lu><clip pos="1" side="tl" part="whole"/></lu>
              <b pos="1"/>
              <lu><clip pos="2" side="tl" part="whole"/></lu>
              <b pos="2"/>
              <lu><clip pos="3" side="tl" part="whole"/></lu>
              <b pos="3"/>
              <lu><clip pos="4" side="tl" part="whole"/></lu>
            </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk name="part_adv_adv_vblex_vblex" case="caseFirstWord">
              <tags><tag><clip pos="4" side="tl" part="tags"/></tag></tags>
              <lu><clip pos="1" side="tl" part="whole"/></lu>
              <b pos="1"/>
              <lu><clip pos="2" side="tl" part="whole"/></lu>
              <b pos="2"/>
              <lu><clip pos="3" side="tl" part="whole"/></lu>
              <b pos="3"/>
              <lu>
                <lit v="bli"/>	    
                <lit-tag v="vblex.inf"/>
              </lu>
              <b/>
              <lu>	    
                <clip pos="4" side="tl" part="lemh"/>
                <clip pos="4" side="tl" part="a_verb"/>
                <lit-tag v="pp"/>
                <clip pos="4" side="tl" part="lemq"/>
              </lu>
            </chunk>
          </out>
        </otherwise></choose>
      </action>
    </rule>

    <rule comment="VBLEX.INF.PASS: [kan] leses => [kan] lesast">
      <pattern>
        <pattern-item n="vblexinfpass"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <choose><when>
          <test><equal><clip pos="1" side="tl" part="a_verb"/><lit-tag v="vblex.pstv"/></equal></test>
          <let><var n="pass"/><lit v=""/></let>
          </when><otherwise>
          <let><var n="pass"/><lit-tag v="pst"/></let>
        </otherwise></choose>
        <out>
          <chunk name="vblex" case="caseFirstWord">
            <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="temps"/>
              <var n="pass"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="VBLEX.PRES.PASS: leses => blir lest
                   todo: verb probably should lose possible uppercasing,
                   although it's unlikely to find the passive verb in
                   the beginning of a sentence

If we translate into a pstv verb, don't change anything.">
      <pattern>
        <pattern-item n="vblexprespass"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <choose><when>
          <test><equal>
            <clip pos="1" side="tl" part="a_verb"/><lit-tag v="vblex.pstv"/>
          </equal></test>
          <out>
            <chunk name="vblex" case="caseFirstWord">
              <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
              <lu><clip pos="1" side="tl" part="whole"/></lu>
            </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk name="vblex_vblex" case="caseFirstWord">
              <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
              <lu>
                <get-case-from pos="1"><lit v="bli"/></get-case-from>	    
                <lit-tag v="vblex.pres"/>
              </lu>
              <b/>
              <lu>	    
                <clip pos="1" side="tl" part="lemh"/>
                <clip pos="1" side="tl" part="a_verb"/>
                <lit-tag v="pp"/>
                <clip pos="1" side="tl" part="lemq"/>
              </lu>
            </chunk>
          </out>
        </otherwise></choose>
      </action>
    </rule>
    <rule comment="VBLEX.PRES.PASS ADV: leses ikke => blir ikke lest
                   Based on the above rule.">
      <pattern>
        <pattern-item n="vblexprespass"/>
        <pattern-item n="adv"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <choose>
          <when>
            <test><equal>
              <clip pos="1" side="tl" part="a_verb"/><lit-tag v="vblex.pstv"/>
            </equal></test>
            <out>
              <chunk name="vblex_adv" case="caseFirstWord">
                <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
                <lu><clip pos="1" side="tl" part="whole"/></lu><b pos="1"/>
                <lu><clip pos="2" side="tl" part="whole"/></lu>
              </chunk>
            </out>
          </when>
          <otherwise>
            <out>
              <chunk name="vblex_adv_vblex" case="caseFirstWord">
                <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
                <lu>
                  <get-case-from pos="1"><lit v="bli"/></get-case-from>	    
                  <lit-tag v="vblex.pres"/>
                </lu>
                <b pos="1"/>
                <lu><clip pos="2" side="tl" part="whole"/></lu>
                <b/>
                <lu>	    
                  <clip pos="1" side="tl" part="lemh"/>
                  <clip pos="1" side="tl" part="a_verb"/>
                  <lit-tag v="pp"/>
                  <clip pos="1" side="tl" part="lemq"/>
                </lu>
              </chunk>
            </out>
        </otherwise></choose>
      </action>
    </rule>
    <rule comment="VBLEX.PRES.PASS ADV ADV: leses ikke alltid => blir ikke alltid lest
                   Based on the above rule.">
      <pattern>
        <pattern-item n="vblexprespass"/>
        <pattern-item n="adv"/>
        <pattern-item n="adv"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <choose><when>
          <test><equal>
            <clip pos="1" side="tl" part="a_verb"/><lit-tag v="vblex.pstv"/>
          </equal></test>
          <out>
            <chunk name="vblex_adv_adv" case="caseFirstWord">
              <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
              <lu><clip pos="1" side="tl" part="whole"/></lu><b pos="1"/>
              <lu><clip pos="2" side="tl" part="whole"/></lu><b pos="2"/>
              <lu><clip pos="3" side="tl" part="whole"/></lu>
            </chunk>
          </out>
        </when>
        <otherwise>
          <out>
            <chunk name="vblex_adv_adv_vblex" case="caseFirstWord">
              <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
              <lu>
                <get-case-from pos="1"><lit v="bli"/></get-case-from>	    
                <lit-tag v="vblex.pres"/>
              </lu>
              <b pos="1"/>
              <lu><clip pos="2" side="tl" part="whole"/></lu>
              <b pos="2"/>
              <lu><clip pos="3" side="tl" part="whole"/></lu>
              <b/>
              <lu>	    
                <clip pos="1" side="tl" part="lemh"/>
                <clip pos="1" side="tl" part="a_verb"/>
                <lit-tag v="pp"/>
                <clip pos="1" side="tl" part="lemq"/>
              </lu>
            </chunk>
          </out>
        </otherwise></choose>
      </action>
    </rule>

    <rule comment="VBLEX ADV ADV beholder heller ikke => held heller ikkje på
                   Requires each possible lemq (# på) to be in nn monodix, see
                   http://wiki.apertium.org/wiki/Multiwords#The_Nynorsk_hack">
      <pattern>
        <pattern-item n="vblex"/>
        <pattern-item n="adv"/>
        <pattern-item n="adv"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="vblex_adv_adv_lemq" case="caseFirstWord">
            <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="temps"/>
            </lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
            <b pos="2"/>
            <lu><clip pos="3" side="tl" part="whole"/></lu>
            <lu><clip pos="1" side="tl" part="lemq"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="VBLEX ADV beholder ikke => held ikkje på
                   Requires each possible lemq (# på) to be in nn monodix, see
                   http://wiki.apertium.org/wiki/Multiwords#The_Nynorsk_hack">
      <pattern>
        <pattern-item n="vblex"/>
        <pattern-item n="adv"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="vblex_adv_lemq" case="caseFirstWord">
            <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="temps"/>
            </lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
            <lu><clip pos="1" side="tl" part="lemq"/></lu>
          </chunk>
        </out>
      </action>
    </rule>    
    <rule comment="VBLEX
                   Just in case we have nn multiwords; which need lemq after the
                   inflected part (all lemq's should include their own initial space).
                   This has to be below the passive rules.">
      <pattern>
        <pattern-item n="vblex"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="vblex_adv_lemq" case="caseFirstWord">
            <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="temps"/>
            </lu>
            <lu><clip pos="1" side="tl" part="lemq"/></lu>
          </chunk>
        </out>
      </action>
    </rule>

    
    <!-- POSGEN måte å VBLEXINF -->
    <rule comment="POSGEN måte å VBLEXINF: hennes måte å sykle => måten ho syklar
                   bokens måte å leses => måten boka blir lest

Requires rather ugly RL prn lemmas in nn.dix, see personal_pronouns__prn pardef">
      <pattern>
        <pattern-item n="posgen"/>
        <pattern-item n="måte"/>
        <pattern-item n="infm"/>
        <pattern-item n="vblexinf"/>
      </pattern>
      <action>
        <call-macro n="switch_cases">          
	  <with-param pos="2"/>
	  <with-param pos="1"/>
        </call-macro>
        <call-macro n="out_ndef">
	  <with-param pos="2"/>
	  <with-param pos="1"/>
	</call-macro>
        <out><b pos="1"/></out>
        <call-macro n="out_posgen_subj">
          <with-param pos="1"/>
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="2"/></call-macro>
        <choose><when>
          <test><not><equal><b pos="2"/><lit v=" "/></equal></not></test>
          <out><b pos="2"/></out>
        </when></choose>
        <choose>
          <when>
            <test>
              <equal><clip pos="4" side="tl" part="voice"/><lit v="pass"/></equal>
            </test>
            <out>
              <chunk name="vblex" case="caseFirstWord">
                <tags><tag><clip pos="4" side="tl" part="tags"/></tag></tags>
                <lu>
                  <lit v="bli"/>
                  <lit-tag v="vblex.pres"/>
                </lu>
              </chunk>
              <b pos="3"/>
              <chunk name="vblex" case="caseFirstWord">
                <tags><tag><clip pos="4" side="tl" part="tags"/></tag></tags>
                <lu>	    
                  <clip pos="4" side="tl" part="lemh"/>
                  <clip pos="4" side="tl" part="a_verb"/>
                  <lit-tag v="pp"/>
                  <clip pos="4" side="tl" part="lemq"/>
                </lu>
              </chunk>
            </out>
          </when>
          <otherwise>
            <out>
              <b pos="3"/>
              <chunk name="vblex" case="caseFirstWord">
                <tags><tag><clip pos="4" side="tl" part="tags"/></tag></tags>
                <lu>	    
                  <clip pos="4" side="tl" part="lemh"/>
                  <clip pos="4" side="tl" part="a_verb"/>
                  <lit-tag v="pres"/>
                  <clip pos="4" side="tl" part="lemq"/>
                </lu>
              </chunk>
            </out>
          </otherwise>
        </choose>
      </action>
    </rule>

    <!-- Catch wrong bracketing:  -->
    <rule comment="preadj-ADV ADJIND
                   Ikkje: «altså kvinnelig [vektløfting]»">
      <pattern>
        <pattern-item n="preadj-adv"/>
        <pattern-item n="adjind"/>
      </pattern>
      <action>
        <call-macro n="set_gender1.adj">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="adv_adj" case="caseFirstWord">
            <tags><tag><clip pos="2" side="tl" part="tags"/></tag></tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    
    <!-- Nouns -->
    <rule comment="NGEN_TIME_MEAS: dagens => dagens">
      <pattern>
        <pattern-item n="ngen_time_meas"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="timemeas"/></tag>
              <tag><clip pos="1" side="tl" part="tags"/></tag>
            </tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="ADJ NGEN_TIME_MEAS: flere års => fleire års">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="ngen_time_meas"/>
      </pattern>
      <action>
        <call-macro n="set_gender2.n.adj">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="adj_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="timemeas"/></tag>
              <tag><clip pos="2" side="tl" part="tags"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    
    <!-- N+ -->
    <rule comment="N
                   Remove cas from lu, but put it in chunk">
      <pattern>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="1"/></call-macro>

        <call-macro n="stash_case_in_ntags"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag></tags>            
            <lu><clip pos="1" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="N-ep N: ytelse ytelse => ytingsyting
                   Remove the space that pretransfer added, turn ep-s into 's'">
      <pattern>
        <pattern-item n="n-ep"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_ep"><with-param pos="1"/></call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="2"/></call-macro>
        <call-macro n="stash_case_in_ntags"><with-param pos="2"/></call-macro>
        <out>
          <chunk name="n_n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag></tags>            
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <var n="ep"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="N-ep N-ep N: Falk lands krigen => Falklandskrigen">
      <pattern>
        <pattern-item n="n-ep"/>
        <pattern-item n="n-ep"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_ep2"><with-param pos="1"/><with-param pos="2"/></call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="3"/></call-macro>
        <call-macro n="stash_case_in_ntags"><with-param pos="3"/></call-macro>
        <out>
          <chunk name="n_n_n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag></tags>            
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <var n="ep"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
            <var n="ep2"/>
            <lu><clip pos="3" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <!-- ADJ N+ -->
    <rule comment="ADJ N">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_gender2.n.adj">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="2"/></call-macro>
        <call-macro n="stash_case_in_ntags"><with-param pos="2"/></call-macro>
        <out>
          <chunk name="adj_n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag>
            </tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="ADJ N-ep N">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="n-ep"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_ep"><with-param pos="2"/></call-macro>
        <call-macro n="set_gender2.n.adj"><with-param pos="3"/><with-param pos="1"/></call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="3"/></call-macro>
        <call-macro n="stash_case_in_ntags"><with-param pos="3"/></call-macro>
        <out>
          <chunk name="adj_n_n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag>
            </tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
            <var n="ep"/>
            <lu><clip pos="3" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="ADJ N-ep N-ep N">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="n-ep"/>
        <pattern-item n="n-ep"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_ep2"><with-param pos="2"/><with-param pos="3"/></call-macro>
        <call-macro n="set_gender2.n.adj"><with-param pos="4"/><with-param pos="1"/></call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="4"/></call-macro>
        <call-macro n="stash_case_in_ntags"><with-param pos="4"/></call-macro>
        <out>
          <chunk name="adj_n_n_n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag>
            </tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
            <var n="ep"/>
            <lu><clip pos="3" side="tl" part="whole"/></lu>
            <var n="ep2"/>
            <lu><clip pos="4" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <!-- ADJ ADJ N+ -->
    <rule comment="ADJ ADJ N">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_gender2.n.adj"><with-param pos="3"/><with-param pos="1"/></call-macro>
        <call-macro n="set_gender2.n.adj"><with-param pos="3"/><with-param pos="2"/></call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="3"/></call-macro>
        <call-macro n="stash_case_in_ntags"><with-param pos="3"/></call-macro>
        <out>
          <chunk name="adj_adj_n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag></tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
            <b pos="2"/>
            <lu><clip pos="3" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="ADJ ADJ N-ep N">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="n-ep"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_ep"><with-param pos="3"/></call-macro>
        <call-macro n="set_gender2.n.adj"><with-param pos="4"/><with-param pos="1"/></call-macro>
        <call-macro n="set_gender2.n.adj"><with-param pos="4"/><with-param pos="2"/></call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="4"/></call-macro>
        <call-macro n="stash_case_in_ntags"><with-param pos="4"/></call-macro>
        <out>
          <chunk name="adj_adj_n_n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag></tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
            <b pos="2"/>
            <lu><clip pos="3" side="tl" part="whole"/></lu>
            <var n="ep"/>
            <lu><clip pos="4" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="ADJ ADJ N-ep N-ep N">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="n-ep"/>
        <pattern-item n="n-ep"/>
        <pattern-item n="n"/>
      </pattern>
      <action>
        <call-macro n="set_ep2"><with-param pos="3"/><with-param pos="4"/></call-macro>
        <call-macro n="set_gender2.n.adj"><with-param pos="5"/><with-param pos="1"/></call-macro>
        <call-macro n="set_gender2.n.adj"><with-param pos="5"/><with-param pos="2"/></call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <call-macro n="out_gen-prep"><with-param pos="5"/></call-macro>
        <call-macro n="stash_case_in_ntags"><with-param pos="5"/></call-macro>
        <out>
          <chunk name="adj_adj_n_n_n" case="caseFirstWord">
            <tags><tag><var n="ntags"/></tag></tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
            <b pos="1"/>
            <lu><clip pos="2" side="tl" part="whole"/></lu>
            <b pos="2"/>
            <lu><clip pos="3" side="tl" part="whole"/></lu>
            <var n="ep"/>
            <lu><clip pos="4" side="tl" part="whole"/></lu>
            <var n="ep2"/>
            <lu><clip pos="5" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- ADJ, no noun -->
    <rule comment="ADJ">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="set_gender1.adj">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <out>
          <chunk name="adj" case="caseFirstWord">
            <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- Other classes -->
    <rule comment="DET">
      <pattern>
        <pattern-item n="det"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test><in caseless="yes"><clip pos="1" side="sl" part="lem"/><list n="det_indef"/></in></test>
            <let><var n="chunkname"/><lit v="detdd"/></let>
          </when>
          <otherwise><let><var n="chunkname"/><lit v="det"/></let></otherwise>
        </choose>
        <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro>
        <out>
          <chunk namefrom="chunkname" case="caseFirstWord">
            <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags>
            <lu><clip pos="1" side="tl" part="whole"/></lu>
          </chunk>
        </out>
      </action>
    </rule>
<!--     <rule comment="INFM: å => å"> -->
<!--       <pattern> -->
<!--         <pattern-item n="infm"/> -->
<!--       </pattern> -->
<!--       <action> -->
<!--         <call-macro n="set_caseFirstWord"><with-param pos="1"/></call-macro> -->
<!--         <out> -->
<!--           <chunk name="part" case="caseFirstWord"> -->
<!--             <tags><tag><clip pos="1" side="tl" part="tags"/></tag></tags> -->
<!--             <lu><clip pos="1" side="tl" part="whole"/></lu> -->
<!--           </chunk> -->
<!--         </out> -->
<!--       </action> -->
<!--     </rule> -->
    
  </section-rules>
</transfer>
