<?xml version="1.0" encoding="UTF-8"?>
<!-- -*- nxml -*- -->
<transfer>

  <section-def-cats>
    <def-cat n="nom">
      <cat-item tags="n.*"/>
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="nind">
      <cat-item tags="n.*.*.ind"/>
    </def-cat>
    <def-cat n="ngen">
      <cat-item tags="n.*.*.*.gen"/>
    </def-cat>
    <def-cat n="navn">					       
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="det">
      <cat-item tags="det.*"/>
    </def-cat>
    <def-cat n="detnonpos">
      <cat-item tags="det.def.*"/>
      <cat-item tags="det.dem.*"/>
      <cat-item tags="det.emph.*"/>
      <cat-item tags="det.itg.*"/>
      <cat-item tags="det.qnt.*"/>
    </def-cat>
    <def-cat n="detpos"> 
      <cat-item tags="det.pos.*"/>
    </def-cat>
    <def-cat n="posgen"> 
      <cat-item tags="det.pos.*"/>
      <cat-item tags="n.*.*.*.gen"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj.*"/>
    </def-cat>
    <def-cat n="vblexinfpass">
      <cat-item tags="vblex.inf.pass"/>
    </def-cat>
    <def-cat n="vblexprespass">
      <cat-item tags="vblex.pres.pass"/>
    </def-cat>
  </section-def-cats>

  
  <section-def-attrs>
    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="np"/>
      <attr-item tags="np.top"/>
    </def-attr>

    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.pp"/>
      <attr-item tags="adj.pprs"/>
      <attr-item tags="adj.posi"/>
      <attr-item tags="adj.comp"/>
      <attr-item tags="adj.sup"/>
      <attr-item tags="adj.ord.posi"/>
      <attr-item tags="adj.ord.comp"/>
      <attr-item tags="adj.ord.sup"/>
    </def-attr>

    <def-attr n="persona">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>

    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
    </def-attr>

    <def-attr n="temps">
      <attr-item tags="inf"/>
      <attr-item tags="pres"/>
      <attr-item tags="pret"/>
    </def-attr>
    <def-attr n="a_det">
      <attr-item tags="det"/> 
      <attr-item tags="det.emph"/>
      <attr-item tags="det.dem"/>
      <attr-item tags="det.itg"/>
      <attr-item tags="det.qnt"/>
      <attr-item tags="det.pos"/>
    </def-attr>
    <def-attr n="a_prn">
      <attr-item tags="prn.enc"/>
      <attr-item tags="prn.enc.ref"/>
    </def-attr>
    <def-attr n="gen">
      <attr-item tags="m"/>
      <attr-item tags="mf"/>
      <attr-item tags="nt"/>
      <attr-item tags="f"/>
      <attr-item tags="GD"/>
    </def-attr>
    <def-attr n="nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
      <attr-item tags="ND"/>
    </def-attr>
    <def-attr n="cas">
      <attr-item tags="nom"/>
      <attr-item tags="gen"/>
      <attr-item tags="acc"/>
    </def-attr>
    <def-attr n="art">
      <attr-item tags="def"/>
      <attr-item tags="ind"/>
    </def-attr>
  </section-def-attrs>


  <section-def-vars>
    <def-var n="gender"/>  
    <def-var n="adj_gender"/>  
    <def-var n="mf_or_gender"/>  
    <def-var n="number"/>
    <def-var n="case"/>
  </section-def-vars>


  <section-def-macros>

    <def-macro n="f_bcond" npar="1">
      <!--Per mirar si el blanc conté o no format awhatnow? -->
      <choose>
        <when>
          <test>
            <not>
              <equal><b pos="1"/><lit v=" "/></equal>
            </not>
          </test>
          <out><b pos="1"/></out>
        </when>
      </choose>
    </def-macro>

    <def-macro n="set_number" npar="1">
      <let><var n="number"/><clip pos="1" side="tl" part="nbr"/></let>
    </def-macro>

    <def-macro n="set_case" npar="1">
      <!-- keep only case for proper nouns -->
      <choose>
        <when>
	  <test>
            <or>
              <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="np"/></equal>
              <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="np.top"/></equal>
            </or>
	  </test>
	  <let><var n="case"/><lit-tag v="gen"/></let>
        </when>
	<otherwise>
	  <let><var n="case"/><lit v=""/></let>
	</otherwise>
      </choose>
    </def-macro>

    <def-macro n="set_gender1" npar="1">
      <!-- arg.1: determiner
	   - iff sg and GD, take a wild guess and go for m;
	   - plurals get no gender;
	   - o/w take gender of target determiner -->
      <call-macro n="set_number"> 
	<with-param pos="1" /> 
      </call-macro>
      <choose>
        <when>
	  <test>
	    <and>
	      <equal><var n="number"/><lit-tag v="sg"/></equal>
	      <equal><clip pos="1" side="tl" part="gen"/><lit-tag v="GD"/></equal>
	    </and>
	  </test>
	  <let><var n="gender"/><lit-tag v="m"/></let>
        </when>
	<when>
	  <test>
	    <equal><var n="number"/><lit-tag v="pl"/></equal>
	  </test>
	  <let><var n="gender"/><lit v=""/></let>
	</when>
	<otherwise>
	  <let><var n="gender"/><clip pos="1" side="tl" part="gen"/></let>
	</otherwise>
      </choose>
      <call-macro n="set_mf_or_gender">
      </call-macro>
    </def-macro>
    
    <def-macro n="set_gender2" npar="2">
      <!-- arg.1: noun, arg.2: determiner (or adjective)
	   - iff sg and GD or m, take gender of target noun
	   - plurals get no gender;
	   - o/w take gender of target determiner
          Masculine determiners in bokmål may be used with femininine gender nouns
	  without being marked as such in bidix...
      -->
      <call-macro n="set_number"> 
	<with-param pos="2" /> <!-- determiners are less ambiguous wrt. nbr -->
      </call-macro>
      <choose>
        <when>
	  <test>
	    <and>
	      <equal><var n="number"/><lit-tag v="sg"/></equal>
	      <or>
		<equal><clip pos="2" side="tl" part="gen"/><lit-tag v="GD"/></equal>
		<equal><clip pos="2" side="tl" part="gen"/><lit-tag v="m"/></equal>
	      </or>
	    </and>
	  </test>
	  <let><var n="gender"/><clip pos="1" side="tl" part="gen"/></let>
        </when>
	<when>
	  <test>
	    <equal><var n="number"/><lit-tag v="pl"/></equal>
	  </test>
	  <let><var n="gender"/><lit v=""/></let>
	</when>
	<otherwise>
	  <let><var n="gender"/><clip pos="2" side="tl" part="gen"/></let>
	</otherwise>
      </choose>
      <call-macro n="set_mf_or_gender">
      </call-macro>
    </def-macro>

    <def-macro n="set_mf_or_gender" npar="0">
      <!-- - if m or f or GD, use mf
  	     (we might have GD if set_gender 'failed')
           - o/w use what we're given. -->
      <choose>
	<when>
	  <test>
	      <or>
		<equal><var n="gender"/><lit-tag v="m"/></equal>
		<equal><var n="gender"/><lit-tag v="f"/></equal>
		<equal><var n="gender"/><lit-tag v="GD"/></equal>
	      </or>
	  </test>
	  <let><var n="mf_or_gender"/><lit-tag v="mf"/></let>
        </when>
	<otherwise>
	  <let><var n="mf_or_gender"/><var n="gender"/></let>
	</otherwise>
      </choose>
    </def-macro>

  </section-def-macros>




  <section-rules>
    
    <!-- Verbs -->
    <rule comment="VBLEX.INF.PASS - kan leses => kan lesast">
      <pattern>
	<pattern-item n="vblexinfpass"/>
      </pattern>
      <action>
        <out>
	  <lu>	    
            <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_verb"/>
	    <clip pos="1" side="tl" part="temps"/>
	    <lit-tag v="pst"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>

    <rule comment="VBLEX.INF.PRES.PASS - leses => blir lest">
      <pattern>
	<pattern-item n="vblexprespass"/>
      </pattern>
      <action>
        <out>
          <lu>
	    <lit v="bli"/>
	    <lit-tag v="vblex.pres"/>
          </lu>
	  <b/>
	  <lu>	    
            <clip pos="1" side="tl" part="lem"/>
            <clip pos="1" side="tl" part="a_verb"/>
	    <lit-tag v="pp"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>

    <!-- Possessive noun phrases -->
    <rule comment="POSGEN NIND: naboens bil => bilen til naboen
                                min mor => mora mi
                                ditt hus => huset ditt
                   nind makes sure we don't match 'min Per(np)' nor 'min bils(gen)'
                   Choose 'til (n)' unless we have a determiner. Only determiners
                   get gender from set_gender2. Third example shows how determiners
                   ..um..determine number.">
      <pattern>
        <pattern-item n="posgen"/>
        <pattern-item n="nind"/>
      </pattern>
      <action>
        <modify-case><clip pos="1" side="tl" part="lemh"/><clip pos="2" side="tl" part="lemh"/></modify-case>
	<call-macro n="set_gender2">
	  <with-param pos="2"/>
	  <with-param pos="1"/>
	</call-macro>
        <out>
          <lu>
            <get-case-from pos="1"><clip pos="2" side="tl" part="lemh"/></get-case-from>
            <clip pos="2" side="tl" part="a_nom"/>
            <clip pos="2" side="tl" part="gen"/>
            <var n="number"/>
            <lit-tag v="def"/>
	    <clip pos="2" side="tl" part="lemq"/>
          </lu>
          <b pos="1"/>
        </out>
        <choose><when>
          <test><equal><clip pos="1" side="sl" part="a_det"/><lit-tag v="det.pos"/></equal></test>
          <out>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_det"/>
              <var n="gender"/>
              <var n="number"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </out>
          </when><otherwise>
          <out>
            <lu>
              <lit v="til"/>
              <lit-tag v="pr"/>
            </lu>
            <b/>
            <lu>
              <get-case-from pos="2"><clip pos="1" side="tl" part="lemh"/></get-case-from>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="art"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </out>
        </otherwise>
        </choose>
      </action>
    </rule>

    <rule comment="POSGEN ADJ NIND: naboens lille bil => den vesle bilen til naboen
                                    mitt lille navn => det vesle namnet mitt
                   nind: vil ikkje ha 'det vesle #Noreg(def) mitt'
                   Choose 'til (n)' unless we have a determiner. Only determiners
                   get gender from set_gender2.">
      <pattern>
        <pattern-item n="posgen"/>
        <pattern-item n="adj"/>
        <pattern-item n="nind"/>
      </pattern>
      <action>
        <modify-case><clip pos="1" side="tl" part="lemh"/><clip pos="2" side="tl" part="lemh"/></modify-case>
	<call-macro n="set_gender2">
	  <with-param pos="3"/>
	  <with-param pos="1"/>
	</call-macro>
        <out>
          <lu>
            <get-case-from pos="1"><lit v="den"/></get-case-from>
            <lit-tag v="det.dem"/>
            <var n="gender"/>
            <var n="number"/>
          </lu>
          <b pos="1"/>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
	  <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <clip pos="3" side="tl" part="a_nom"/>
            <clip pos="3" side="tl" part="gen"/>
            <var n="number"/>
            <lit-tag v="def"/>
	    <clip pos="3" side="tl" part="lemq"/>
          </lu>
          <b/>
        </out>
        <choose><when>
          <test><equal><clip pos="1" side="sl" part="a_det"/><lit-tag v="det.pos"/></equal></test>
          <out>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_det"/>
              <var n="gender"/>
              <var n="number"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </out>
          </when><otherwise>
          <out>
            <lu>
              <lit v="til"/>
              <lit-tag v="pr"/>
            </lu>
            <b/>
            <lu>
              <get-case-from pos="2"><clip pos="1" side="tl" part="lemh"/></get-case-from>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="art"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </out>
        </otherwise>
        </choose>
      </action>
    </rule>
    

    <rule comment="DETPOS ADJ ADJ NOM: mitt gamle lille navn => det gamle vesle namnet mitt
		   todo: generalise to include ngen">
      <pattern>
        <pattern-item n="detpos"/>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="nind"/>
      </pattern>
      <action>
        <modify-case><clip pos="1" side="tl" part="lemh"/><clip pos="2" side="tl" part="lemh"/></modify-case>
	<call-macro n="set_gender2">
	  <with-param pos="4"/>
	  <with-param pos="1"/>
	</call-macro>
        <out>
          <lu>
	    <get-case-from pos="1"><lit v="den"/></get-case-from>
	    <lit-tag v="det.dem"/>
	    <var n="gender"/>
            <var n="number"/>
          </lu>
	  <b pos="1"/>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
	  <b pos="2"/>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
	  <b pos="3"/>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <clip pos="4" side="tl" part="a_nom"/>
            <clip pos="4" side="tl" part="gen"/>
            <var n="number"/>
      	    <lit-tag v="def"/>
	    <clip pos="4" side="tl" part="lemq"/>
          </lu>
	  <b/>
          <lu>
      	    <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_det"/>
	    <var n="gender"/>
            <var n="number"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>

    <rule comment="DETPOS NGEN NOM: min katts snute => snuten til katten min
                   (remove genitive from pos 2)
                   todo: generalise to POSGEN POSGEN NIND">
      <pattern>
	<pattern-item n="detpos"/>    
	<pattern-item n="ngen"/>
	<pattern-item n="nind"/>
      </pattern>
      <action>
        <modify-case><clip pos="1" side="tl" part="lemh"/><clip pos="3" side="tl" part="lemh"/></modify-case>
	<call-macro n="set_gender2">
	  <with-param pos="2"/>
	  <with-param pos="1"/>
	</call-macro>
        <out>
          <lu>
            <get-case-from pos="1"><clip pos="3" side="tl" part="lemh"/></get-case-from>
            <clip pos="3" side="tl" part="a_nom"/>
            <clip pos="3" side="tl" part="gen"/>
            <var n="number"/>
	    <lit-tag v="def"/>
	    <clip pos="3" side="tl" part="lemq"/>
          </lu>
          <b pos="1"/>
          <lu>
	    <lit v="til"/>
	    <lit-tag v="pr"/>
          </lu>
          <b/>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <clip pos="2" side="tl" part="a_nom"/>
            <clip pos="2" side="tl" part="gen"/>
            <clip pos="2" side="tl" part="nbr"/>
	    <lit-tag v="def"/>
	    <clip pos="2" side="tl" part="lemq"/>
          </lu>
          <b pos="2"/>
          <lu>
	    <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_det"/>
	    <var n="gender"/>
	    <var n="number"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>
    
    <rule comment="DETNONPOS NGEN NOM: en katts snute => snuten til en katt
                   (remove genitive from pos 2)">
      <pattern>
	<pattern-item n="detnonpos"/>    
	<pattern-item n="ngen"/>
	<pattern-item n="nom"/>
      </pattern>
      <action>
        <modify-case><clip pos="1" side="tl" part="lemh"/><clip pos="3" side="tl" part="lemh"/></modify-case>
	<call-macro n="set_gender2">
	  <with-param pos="2"/>
	  <with-param pos="1"/>
	</call-macro>
        <out>
          <lu>
            <get-case-from pos="1"><clip pos="3" side="tl" part="lemh"/></get-case-from>
            <clip pos="3" side="tl" part="a_nom"/>
            <clip pos="3" side="tl" part="gen"/>
            <var n="number"/>
	    <lit-tag v="def"/>
	    <clip pos="3" side="tl" part="lemq"/>
          </lu>
          <b pos="1"/>
          <lu>
	    <lit v="til"/>
	    <lit-tag v="pr"/>
          </lu>
          <b/>
          <lu>
	    <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_det"/>
	    <var n="gender"/>
	    <var n="number"/>
            <clip pos="1" side="tl" part="art"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
          <b pos="2"/>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <clip pos="2" side="tl" part="a_nom"/>
            <clip pos="2" side="tl" part="gen"/>
            <clip pos="2" side="tl" part="nbr"/>
            <clip pos="2" side="tl" part="art"/>
	    <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>

    <!-- Other determiner/noun phrases -->
    <rule comment="DET: en => ein
		   Frequency is on our side, but politically incorrect..hmm..">
      <pattern>
        <pattern-item n="det"/>
      </pattern>
      <action>
        <call-macro n="set_gender1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_det"/>
            <var n="gender"/>
            <var n="number"/>
            <clip pos="1" side="tl" part="art"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>

    <rule comment="DET NOM: en kvinne => ei kvinne
		            hvilken jente => kva for ei jente
			    egne hus => eigne hus
			    et Norge => eit Noreg
	           np får ikkje noko tal i den siste.">
      <pattern>
        <pattern-item n="det"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="set_gender2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
	<choose><when>
	  <test><or>
	    <equal><clip pos="2" side="tl" part="a_nom"/><lit-tag v="np"/></equal>
	    <equal><clip pos="2" side="tl" part="a_nom"/><lit-tag v="np.top"/></equal>
	  </or></test>
	  <let><var n="number"/><lit v=""/></let>
	</when></choose>	
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_det"/>
            <var n="gender"/>
            <clip pos="1" side="tl" part="nbr"/>
            <clip pos="1" side="tl" part="art"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
          <b pos="1"/>
          <lu>
	    <clip pos="2" side="tl" part="lemh"/>
            <clip pos="2" side="tl" part="a_nom"/>
            <clip pos="2" side="tl" part="gen"/>
	    <var n="number"/>
            <clip pos="2" side="tl" part="art"/>	
	    <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>

    <!-- Adjectives -->
    <rule comment="ADJ: åpne (hus) => opne (hus), liten(f) => lita">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="set_gender1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_adj"/>
            <var n="gender"/>
            <clip pos="1" side="tl" part="nbr"/>
            <clip pos="1" side="tl" part="art"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>

    <rule comment="ADJ NOM: liten bok => lita bok
		            hele Norge => heile Noreg
	           np får ikkje noko tal i den siste.
		   We let CG disambiguate art and nbr using the following noun,
		   o/w all info should be in the adjective wordform (eg. in the above
		   example, hus being ind should give plural).">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>	
        <call-macro n="set_gender2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
	<choose><when>
	  <test><or>
	    <equal><clip pos="2" side="tl" part="a_nom"/><lit-tag v="np"/></equal>
	    <equal><clip pos="2" side="tl" part="a_nom"/><lit-tag v="np.top"/></equal>
	  </or></test>
	  <let><var n="number"/><lit v=""/></let>
	</when></choose>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_adj"/>
            <var n="gender"/>
            <clip pos="1" side="tl" part="nbr"/>
            <clip pos="1" side="tl" part="art"/>
	    <!-- <clip pos="1" side="tl" part="cas"/> -->
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
          <b/>
	  <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <clip pos="2" side="tl" part="a_nom"/>
            <clip pos="2" side="tl" part="gen"/>
	    <var n="number"/>
      	    <clip pos="2" side="tl" part="art"/>
	    <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>
    
    <rule comment="DET ADJ: en liten(f) => ei lita ">
      <pattern>
        <pattern-item n="det"/>
        <pattern-item n="adj"/>
      </pattern>
      <action>	
        <call-macro n="set_gender2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_det"/>
            <var n="mf_or_gender"/>
            <var n="number"/>
            <clip pos="1" side="tl" part="art"/>
	    <!-- <clip pos="1" side="tl" part="cas"/> -->
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
          <b/>
	  <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <clip pos="2" side="tl" part="a_adj"/>
            <var n="mf_or_gender"/>
            <clip pos="2" side="tl" part="nbr"/>
      	    <clip pos="2" side="tl" part="art"/>
	    <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>

    <rule comment="DETNONPOS ADJ NOM: en(mf) viktig(mf) dag(m) => ein(m) viktig(mf) dag(m)
		   Note that the adjective might have different gender specificity from the
		   determiner; so we have an extra test to set adj_gender.">
      <pattern>
        <pattern-item n="detnonpos"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>	
        <call-macro n="set_gender2">
          <with-param pos="3"/>
          <with-param pos="1"/>
        </call-macro>
	<choose>					       
	  <when>
	    <test>
	      <and>
		<equal><clip pos="2" side="tl" part="nbr"/><lit-tag v="sg"/></equal>
		<equal><clip pos="2" side="tl" part="gen"/><lit-tag v="GD"/></equal>
	      </and>
	    </test>
	    <let><var n="adj_gender"/><var n="gender"/></let>
	  </when>
	  <otherwise>
	    <let><var n="adj_gender"/><clip pos="2" side="tl" part="gen"/></let>
	  </otherwise>
	</choose>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <clip pos="1" side="tl" part="a_det"/>
            <var n="gender"/>
            <var n="number"/>
            <clip pos="1" side="tl" part="art"/>
	    <clip pos="1" side="tl" part="lemq"/>
          </lu>
          <b/>
	  <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <clip pos="2" side="tl" part="a_adj"/>
            <var n="adj_gender"/>
            <var n="number"/>
      	    <clip pos="2" side="tl" part="art"/>
	    <clip pos="2" side="tl" part="lemq"/>
          </lu>
          <b/>
	  <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <clip pos="3" side="tl" part="a_nom"/>
            <clip pos="3" side="tl" part="gen"/>
            <clip pos="3" side="tl" part="nbr"/>
      	    <clip pos="3" side="tl" part="art"/>
	    <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
      </action>
    </rule>


    




  </section-rules>
</transfer>
