#DELIMITERS = "<$.>" "<$:>" "<$!>" "<$?>" "<$|>";
# (Only works without the $)

# Grammar

DELIMITERS = "<.>" "<:>" "<!>" "<?>" "<|>";
SOFT-DELIMITERS = "<,>" ;


SETS

LIST ikke-poss-det = "hei" ;
LIST replikk = "hei" ;
LIST int-setn-gr = "hei" ;
LIST s-gr/interj = "hei" ;
LIST s-gr = "hei" ;
LIST @adv = "hei" ;
LIST spoersmaal-t = "hei" ;
LIST s#periode-beg/clb-cnj = "hei"
 ;
LIST %aar% = "år"  ;
LIST %aldri% = "aldri"  ;
LIST %all% = "all"  ;
LIST %alle% = ("all" det pl)  ;
LIST %aller% = ("aller" adv)  ;
LIST %alt% = ("all" det nt)  ;
LIST %an% = ("an" adv)  ;
LIST %andre% = "andre"  ;
LIST %angripe/senke/osv% = "utklasse" "senke" "angripe"  ;
LIST %anledning% = "anledning"  ;
LIST %annen% = "annen"  ;
LIST %annen%-fl = ("annen" pl)  ;
LIST %annen%-grunnf = "annen"  ;
LIST %annen/samme%/qnt = ("annen") ("samme") (det qnt)  ;
LIST %annen/samme%/qnt-f = ("annen" f) ("samme") (det qnt)  ;
LIST %annen/samme%/qnt-m = ("annen" m) ("samme") (det qnt)  ;
LIST %annen/samme%/qnt-nt = ("annen" nt) ("samme") (det qnt)  ;
LIST %annet% = ("annen" det ntindsg)  ;
LIST %antas% = ("anta" pass)  ;
LIST %at% = "at"  ;
LIST %at%/infmerke = "at" inf-merke  ;
LIST %at/om% = "om" "at"  ;
LIST %at/om%/infmerke = "om" "at" inf-merke  ;
LIST %at/om/som% = "som" "om" "at"  ;
LIST %av% = "av"  ;
LIST %baade% = "både"  ;
LIST %bak% = ("bak" pr)  ;
LIST %bare% = ("bare" adv)  ;
LIST %begge/alle% = "begge" ("all" pl)  ;
LIST %begge/selve/alle% = "selve" "begge" ("all" det pl)  ;
LIST %best% = ("god" sup ind)  ;
LIST %beste% = ("god" adj sup def)  ;
LIST %bevegelsen/klubb/organisasjon% = ("bevegelse" def) ("klubb" be) ("organisasjon" be)  ;
LIST %bla% = "blant annet" "bl.a."  ;
LIST %blant% = "blant"  ;
LIST %brudeparet/paret% = "par" "brudepar"  ;
LIST %bruk% = "bruk"  ;
LIST %da% = "da"  ;
LIST %de% = ("de" det)  ;
LIST %de%-det = ("de" det)  ;
LIST %del/andel% = "del" "andel"  ;
LIST %den% = ("den" det)  ;
LIST %den/denne% = ("den" det) ("denne" det)  ;
LIST %den/det/de% = "det" "den" "de"  ;
LIST %den/det/de%-det = ("den" det) ("det" det) ("de" det)  ;
LIST %der% = "der"  ;
LIST %det% = ("det" det)  ;
LIST %det%-prn = ("det" prn)  ;
LIST %det/dette% = ("det" det) ("dette" det)  ;
LIST %det/dette%-prn = ("det" prn) ("dette" prn)  ;
LIST %ei% = ("en" f)  ;
LIST %eksklusiv/e% = "eksklusive" "eksklusiv"  ;
LIST %eller% = "eller"  ;
LIST %ellers%-vblex = ("elle" pres gen)  ;
LIST %en% = ("en" m)  ;
LIST %en%-det = ("en" det)  ;
LIST %en/den/denne% = "en" "denne" "den"  ;
LIST %en/ei% = ("en" m) ("en" f)  ;
LIST %en/ei/et% = ("en" m) ("en" f) ("en" nt)  ;
LIST %en/et% = ("en" m) ("en" nt)  ;
LIST %enda% = "enda"  ;
LIST %ene% = ("ene" det)  ;
LIST %ene/eneste% = "eneste" ("ene" det)  ;
LIST %enn% = "enn"  ;
LIST %enn%-pr = ("enn" pr)  ;
LIST %et% = ("en" det)  ;
LIST %etter% = "etter"  ;
LIST %etter/fram/opp% = ("etter" pr) ("fram" pr) ("frem" pr) ("opp" pr)  ;
LIST %faa% = "få"  ;
LIST %famn% = ("famn" n)  ;
LIST %fast% = ("fast" adj)  ;
LIST %fast%-vblex = "tjore" "surre" "sette" "klore" "brenne" "binde"  ;
LIST %fatte/kreve/ta% = ("fatte" vblex) ("kreve" vblex) ("ta" vblex)  ;
LIST %finne%-vblex = ("finne" vblex)  ;
LIST %fjaere% = "fjære"  ;
LIST %flere% = ("mange" adj comp)  ;
LIST %foelge% = "følge"  ;
LIST %foer% = "før"  ;
LIST %foer%-@adv/%etter%/%etterpaa% = "etterpå" "etter" ("før" @adv)  ;
LIST %foer%-adv/%etter%/%etterpaa% = "etterpå" "etter" ("før" adv) ("før" pr) ("før" sbu)  ;
LIST %foer/etter/rundt/igjennom%-pr = ("før" pr) ("etter" pr) ("rundt" pr) ("igjennom" pr)  ;
LIST %foere% = "føre"  ;
LIST %foerste% = ("første" adj)  ;
LIST %for% = "for"  ;
LIST %for%-pr = ("for" pr)  ;
LIST %for%-vblex = ("fare" vblex)  ;
LIST %for/altfor% = "for" "altfor"  ;
LIST %for/foer/naar% = "når" "før" "for"  ;
LIST %forrige/neste% = "neste" "forrige"  ;
LIST %fra% = "fra"  ;
LIST %fra/for/ut% = "ut" "fra" "for"  ;
LIST %framfrem% = ("fram" pr) ("frem" pr)  ;
LIST %fram/inn/opp% = ("fram" pr) ("frem" pr) ("inn" pr) ("opp" pr)  ;
LIST %fram/opp/paa% = ("på") ("fram" pr) ("frem" pr) ("opp" pr)  ;
LIST %fullt% = ("full" adj ntindsg)  ;
LIST %fullt/mange% = "mange" ("full" adj ntindsg)  ;
LIST %gaa% = "gå"  ;
LIST %gaa/ha% = "ha" "gå"  ;
LIST %gang% = "gang"  ;
LIST %ganger% = ("gange" pres)  ;
LIST %ganger/klokka% = ("gang" pl ind) ("klokke" sg def)  ;
LIST %gjelde% = "gjelde"  ;
LIST %gjengjeld% = "gjengjeld"  ;
LIST %gjoere% = "gjøre"  ;
LIST %grad% = ("grad" n sg)  ;
LIST %grader% = ("grad" n pl)  ;
LIST %gå% = "gå"  ;
LIST %ha% = "ha"  ;
LIST %ha%-pres/pret = ("ha" pres) ("ha" pret)  ;
LIST %ha/faa% = "ha" "få"  ;
LIST %halv%-mf = ("halv" adj mfindsg)  ;
LIST %halv/kvart%-mf = ("halv" adj mfindsg) ("kvart" n mindsg) ("kvart" n findsg)  ;
LIST %hele% = ("hel" adj def sg)  ;
LIST %helhet% = ("helhet")  ;
LIST %heller%-vblex = ("helle" pres)  ;
LIST %helst% = ("helst" adv)  ;
LIST %helt% = ("hel" adj nt)  ;
LIST %henne% = "henne"  ;
LIST %hilsen% = "hilsen"  ;
LIST %hoeyre/venstre% = "venstre" "høyre"  ;
LIST %hogge/sage/kappe/fyre% = ("hogge" vblex) ("sage" vblex) ("kappe" vblex) ("fyre" vblex)  ;
LIST %hundre/tusen% = "tusen" "hundre"  ;
LIST %hundre/tusen/osv% = "tusen" "par" "million" "milliard" "hundre"  ;
LIST %huset% = ("huse" adj <perf-part>)  ;
LIST %hva% = "hva"  ;
LIST %hvem% = "hvem"  ;
LIST %hvem/hva% = "hvem" "hva" 

 ;
LIST %hver% = "hver"  ;
LIST %hver%-f = ("hver" f)  ;
LIST %hver%-m = ("hver" m)  ;
LIST %hver%-nt = ("hver" nt)  ;
LIST %hverken/verken% = ("verken") ("verken")  ;
LIST %hvert% = "hver" (det qnt nt)  ;
LIST %hvilken% = "hvilken"  ;
LIST %hvor/hva% = "hvor" "hva"  ;
LIST %hvor/saa%-adv = ("hvor" adv) ("så" adv)  ;
LIST %hvorfor% = ("hvorfor" adv)  ;
LIST %i% = ("i" pr)  ;
LIST %i/aa% = ("I" prop) ("Å" prop)  ;
LIST %i/paa% = "på" ("i" pr)  ;
LIST %ifoelge% = "ifølge"  ;
LIST %ikke% = "ikke"  ;
LIST %ikke/aldri% = "ikke" "aldri"  ;
LIST %ikke/ingen% = "ingen" "ikke"  ;
LIST %ikke/ogsaa% = "også" "ikke"  ;
LIST %imot% = "imot"  ;
LIST %ingen% = "ingen"  ;
LIST %inn% = "inn"  ;
LIST %ja-nei% = "nei" "ja"  ;
LIST %ja-nei-aa% = "å" "nei" "ja"  ;
LIST %jeg% = "jeg"  ;
LIST %jesu/kristi/pauli% = ("Jesu" gen) ("Kristi" gen) ("Pauli" gen)  ;
LIST %kalle% = "kalle"  ;
LIST %kalle/doepe% = "kalle" "døpe"  ;
LIST %kamp/fot/tall% = "tall" "kamp" "fot"  ;
LIST %kjoepe% = "kjøpe"  ;
LIST %klokka% = ("klokke" sg def)  ;
LIST %klokke% = "klokke"  ;
LIST %klokke%-be-ent% = ("klokke" n def sg)  ;
LIST %korrespondent% = "korrespondent"  ;
LIST %kort/lang/paa% = "på" "lang" "kort"  ;
LIST %kvart% = n sgind ;
LIST %la% = "la"  ;
LIST %la%-vblex = ("la" vblex)  ;
LIST %lag% = "lag"  ;
LIST %langt% = ("lang" adj pos nt)  ;
LIST %latt% = ("la" perf-part)  ;
LIST %lenge% = ("lenge" adj)  ;
LIST %like% = "like"  ;
LIST %mange% = "mange"  ;
LIST %mange/mangt% = "mange" ("mang" nt)  ;
LIST %med% = "med"  ;
LIST %men% = "men"  ;
LIST %mest/minst% = ("mye" sup ind) ("liten" sup ub)  ;
LIST %meste% = ("mye" sup def)  ;
LIST %meste/minste% = ("mye" sup def) ("liten" sup be)  ;
LIST %minst% = ("liten" adj sup ind)  ;
LIST %minste% = ("liten" sup def)  ;
LIST %minutt%-ub = ("minutt" ind)  ;
LIST %moete%-mfl = "styremøte" "sameiemøte" "representantskapsmøte" "møte" "klubbmøte" "borettslagsmøte"  ;
LIST %mot% = ("mot" pr)  ;
LIST %motsatt% = "motsatt"  ;
LIST %mye% = "mye"  ;
LIST %mye/lite% = "mye" "litt" "lite"  ;
LIST %mye/lite/litt% = "mye" "litt" "lite"  ;
LIST %naa% = "nå"  ;
LIST %naa/da/her/der% = ("nå" adv) ("da" adv) ("her" pr) ("der" pr)  ;
LIST %naar% = "når"  ;
LIST %naerpaa% = "nærpå"  ;
LIST %neste% = "neste"  ;
LIST %noe% = "noe"  ;
LIST %noe/alt% = ("noen" nt) ("all" nt)  ;
LIST %noen% = "noen"  ;
LIST %noen%-nt = ("noen" nt)  ;
LIST %noen/ingen% = "noen" "ingen"  ;
LIST %noen/noe% = "noen" "noe"  ;
LIST %nok% = "nok"  ;
LIST %nok/til% = "til" "nok"  ;
LIST %oftest% = ("ofte" adj sup)  ;
LIST %og% = "og"  ;
LIST %og/eller% = "og" "eller"  ;
LIST %og/men% = "og" "men"  ;
LIST %ogsaa/ikke/derimot%-adv = "også" "ikke" "derimot" ("og" adv)  ;
LIST %om% = "om"  ;
LIST %om/enn/som/hvis% = "som" "om" "hvis" "enn"  ;
LIST %opp% = "opp"  ;
LIST %over% = "over"  ;
LIST %paa% = "på"  ;
LIST %paa/ned% = "på" "ned"  ;
LIST %paa/over% = "på" "over"  ;
LIST %peke% = "peke"  ;
LIST %presentere% = "presentere"  ;
LIST %re%-subst = ("re" n)  ;
LIST %redd% = ("redd" adj)  ;
LIST %regel% = "regel"  ;
LIST %rett% = ("rett" adj)  ;
LIST %rundt% = ("rund" adj pos ntindsg)  ;
LIST %saa% = "så"  ;
LIST %saa%-adv = ("så" adv)  ;
LIST %saa%-pret = ("se" vblex pret)  ;
LIST %saa/for% = "så" "for"  ;
LIST %saa/ganske% = "så" "ganske"  ;
LIST %saa/og/selv% = "så" "sjøl" "selv" "og"  ;
LIST %saann% = "sånn"  ;
LIST %saerlig% = "særlig"  ;
LIST %samme% = "samme"  ;
LIST %samme/neste/ene/eneste/forrige% = ("forrige" det) ("samme" det) ("neste" det) ("eneste" det) ("ene" det)  ;
LIST %samme/neste/ene/eneste/selve/forrige% = ("selve" det) ("forrige" det) ("samme" det) ("neste" det) ("eneste" det) ("ene" det)  ;
LIST %sammen% = "sammen"  ;
LIST %samtidig% = "samtidig"  ;
LIST %se/hoeres/kjennes% = "se" "kjennes" "høres"  ;
LIST %seg% = ("seg" prn)  ;
LIST %seg/meg% = "sige" "mige"  ;
LIST %selv% = "sjøl" "sjæl" "selv" 

 ;
LIST %selve% = "sjølve" "selve"  ;
LIST %seng% = "seng"  ;
LIST %sett% = ("se" perf-part)  ;
LIST %si% = ("sin" det pos f sg)  ;
LIST %si%-inf = ("si" inf)  ;
LIST %side% = "side"  ;
LIST %side%-be = ("side" def)  ;
LIST %siden% = "siden"  ;
LIST %sikt% = "sikt"  ;
LIST %sin% = ("sin" det pos m sg)  ;
LIST %sine% = ("sin" det pos pl)  ;
LIST %sist% = ("sist" adv)  ;
LIST %siste% = ("sist" pl)  ;
LIST %siste%/ordenstall = ("sist" def) ("sist" pl) <ordenstall>  ;
LIST %siste/foerste% = ("sist" def) ("sist" pl) ("første")  ;
LIST %sitt% = ("sin" det pos nt sg)  ;
LIST %sjelden% = "sjelden"  ;
LIST %skifte/bytte% = ("skifte" vblex) ("bytte" vblex)  ;
LIST %skritt% = "stykke" "steg" "skritt"  ;
LIST %slaa% = ("slå" vblex)  ;
LIST %slaa/forekomme% = "slå" "forekomme"  ;
LIST %slags% = "slags"  ;
LIST %slettes% = ("slette" pass)  ;
LIST %slik% = "slik"  ;
LIST %slik%-adv = ("slik" adv)  ;
LIST %slutt% = ("slutt" n m)  ;
LIST %som% = "som"  ;
LIST %som%-@s-pred = ("som" @s-pred)  ;
LIST %som%-pr = ("som" pr)  ;
LIST %som%-sbu = ("som" sbu)  ;
LIST %som/at% = "at" ("som" sbu)  ;
LIST %som/enn% = "som" "enn"  ;
LIST %som/om% = "som" "om"  ;
LIST %som/om/der% = "som" "om" "der"  ;
LIST %spoerre% = "spørre"  ;
LIST %stand% = "stand"  ;
LIST %sted/plass% = "sted" "plass"  ;
LIST %stein%-adv = ("stein" adv)  ;
LIST %stikk% = ("stikk" adv)  ;
LIST %synge% = "synge"  ;
LIST %syvende% = "syvende" "sjuende"  ;
LIST %ta% = "ta"  ;
LIST %taper/vinner% = "vinne" "tape" "score"  ;
LIST %tid% = ("tid" adj)  ;
LIST %tids% = ("tids" adj)  ;
LIST %til% = "til"  ;
LIST %tiltalte% = ("tiltale" adj <perf-part> def sg)  ;
LIST %to% = ("to" det)  ;
LIST %tross% = "tross"  ;
LIST %tvers% = "tvers"  ;
LIST %tvert% = ("tvert" adv)  ;
LIST %ut% = "ut"  ;
LIST %uten% = "uten"  ;
LIST %vaere% = "være"  ;
LIST %vaere%-inf = ("være" inf)  ;
LIST %vaere/bli% = "være" "bli"  ;
LIST %vaere/bli%-fin = ("være" <auxp> pres) ("være" <auxp> pret) ("bli" pres) ("bli" pret)  ;
LIST %vanlig% = ("vanlig" sg)  ;
LIST %var% = ("var" adj) ("være" pret)  ;
LIST %ve% = "ve"  ;
LIST %ved% = ("ved" pr)  ;
LIST %vel% = "vel"  ;
LIST %videre% = ("vid" adj comp)  ;
LIST %virke% = "virke"  ;
LIST %vise% = "vise"  ;
LIST %viss% = "viss"  ;
LIST %ytterligere% = "ytterligere"  ;
LIST <<< = <<<  ;
LIST <<</>>> = <<< >>>  ;
LIST <adj> = <adj>  ;
LIST <adv> = <adv>  ;
LIST <perf-part> = <perf-part>  ;
LIST <pres-part> = i1 i3 i4  ;
LIST >>> = >>>  ;
LIST ABJ#%AV% = "av"  ;
LIST ABJ#%AV/I% = "i" "av"  ;
LIST ABJ#%BO% = "bo"  ;
LIST ABJ#%BO/FØDE/OPPVOKST% = "oppvokst" "føde" "bo"  ;
LIST ABJ#%BO/KOMME/REISE% = "reise" "komme" "bo"  ;
LIST ABJ#%DEL% = "del"  ;
LIST ABJ#%DIREKTOER% = "direktør" "dir." "adm. dir."  ;
LIST ABJ#%FOR/HOS/MED/SOM/TIL% = "til" "som" "med" "hos" "for"  ;
LIST ABJ#%FRA/I% = "i" "fra"  ;
LIST ABJ#%FULL/AAPEN% = "åpen" "full"  ;
LIST ABJ#%GOD% = ("god" adj)  ;
LIST ABJ#%HETE% = "hete"  ;
LIST ABJ#%HETE/KALLES% = "hete" ("kalle" pass)  ;
LIST ABJ#%HOS% = "hos"  ;
LIST ABJ#%HOS/MED/SOM% = "som" "med" "hos"  ;
LIST ABJ#%HOS/MED/SOM/TIL% = "til" "som" "med" "hos"  ;
LIST ABJ#%HOS/VED%-PREP = ("ved" pr) ("hos" pr)  ;
LIST ABJ#%HOVEDSTAD% = "hovedstad"  ;
LIST ABJ#%I/PA/VED% = ("ved" pr) ("i" pr) ("på" pr)  ;
LIST ABJ#%I/VED% = ("ved" pr) ("i" pr)  ;
LIST ABJ#%KOMME% = "komme"  ;
LIST ABJ#%LESE% = "lese"  ;
LIST ABJ#%MED% = "med"  ;
LIST ABJ#%MED/MELLOM/MOT% = "mot" "mellom" "med"  ;
LIST ABJ#%MEDLEM% = "medlem"  ;
LIST ABJ#%MOETE% = ""  ;
LIST ABJ#%MOETES% = "møtes"  ;
LIST ABJ#%OM/VIA% = "via" "om"  ;
LIST ABJ#%PRESIDENT% = "visepresident" "president"  ;
LIST ABJ#%REISE% = "reise"  ;
LIST ABJ#%SELSKAP% = "selskap"  ;
LIST ABJ#%TIL/FRA% = "til" "fra"  ;
LIST ABJ#%TREFFES% = "treffes"  ;
LIST ABJ#%VEI% = "vei"  ;
LIST ABJ#<*SKOLE> = <*skole>  ;
LIST ABJ#ADJ-RETNING = "østlig" "vestlig" "sørøstlig" "sørvestlig" "sørlig" "nordøstlig" "nordvestlig" "nordlig"  ;
LIST ABJ#ADJ/ADV/DET/PREP/%VAERE% = "være" det adj adv pr  ;
LIST ABJ#ADJ/ADV/DET/PREP/KOMMA/%VAERE% = "være" det adj adv pr <komma>  ;
LIST ABJ#BILMERKER = "Volvo" "VW" "Toyota" "Think" "TVR" "Suzuki" "Subaru" "Ssangyong" "Smart" "Skoda" "Seat" "Saab" "Rover" "Renault" "Porsche" "Pontiac" "Peugeot" "Opel" "Nissan" "Morris" "Morgan" "Mitsubishi" "Mercedes" "McLaren" "Mazda" "Maserati" "MG" "Lotus" "Lexus" "Landrover" "Lancia" "Lamborghini" "Lada" "Kia" "Jeep" "Jaguar" "Isuzu" "Hyundai" "Hummer" "Honda" "Ford" "Fiat" "Ferrari" "Dodge" "DeLorean" "Daihatsu" "Daewoo" "Citroën" "Chrysler" "Chevrolet" "Cadillac" "Buick" "Bugatti" "BMW" "Audi" "Aston Martin" "Alfa Romeo"  ;
LIST ABJ#BYGNINGER = "teater" "svømmehall" "slott" "skole" "senter" "rettssal" "restaurant" "regjeringsbygg" "påbygg" "pub" "posthus" "politistasjon" "pensjonat" "opera" "museum" "motell" "lokale" "leir" "leilighet" "landsted" "lager" "kro" "kontor" "konsulat" "konsertsal" "klubb" "kjøpesenter" "kirke" "kiosk" "kino" "kantine" "kaffe" "kafeteria" "institusjon" "idrettshall" "hytte" "hus" "hotell" "hostell" "gamlehjem" "galleri" "foaje" "festlokale" "fengsel" "farm" "fabrikk" "etasje" "eldresenter" "eiendom" "drivhus" "domkirke" "diskotek" "departement" "daghjem" "bygning" "bygg" "butikk" "brannstasjon" "borg" "borettslag" "bolig" "bod" "blokk" "bibliotek" "bensinstasjon" "barnehage" "bank" "ambassade" <*kontor> <*hus> <*bolig> <*skole> 

 ;
LIST ABJ#IKKE-ADJ-ADV-DET-KONJ-PREP = "$," vblex prn sbu inf-merke interj n <ellipse>  ;
LIST ABJ#IKKE-ADJ-ADV-SUBST = vblex pr prn sbu inf-merke interj det (clb cnj) <anf> <ellipse> (cnj <adv>)  ;
LIST ABJ#IKKE-ADJ-ADV-SUBST-PREP = vblex prn sbu inf-merke interj det (clb cnj) <anf> <ellipse> (cnj <adv>)  ;
LIST ABJ#IKKE-ADV-ADJ-DET-PREP-KOMMA = "siden" "$-" <parentes-slutt> vblex prn sbu inf-merke n interj <ellipse> ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ABJ#IKKE-KVANT-PREP = "siden" vblex adj adv prn sbu cnj inf-merke n interj <ellipse> (det dem) (det pos) (det forst)  ;
LIST ABJ#IKKE-KVANT-PREP-VERB = "siden" adj adv prn sbu cnj inf-merke n interj <ellipse> (det dem) (det pos) (det forst)  ;
LIST ABJ#KOMMA/%VAERE% = "være" <komma>  ;
LIST ABJ#KOMMA/%VAERE/BLI% = "være" "bli" <komma>  ;
LIST ABJ#NASJONAL-TITTEL = "sultan" "stadsråd" "prinsesse" "prins" "monark" "kronprinsesse" "kronprins" "konsul" "konge" "kong" "keiser" "dronning" "diplomat" "attachè" <*minister>  ;
LIST ABJ#ORG = <org>  ;
LIST ABJ#ORG-INTERN-SUFFIKS = <*bevegelse> <*forbund> <*organisasjon> <*råd> <*parti> <*bedrift> <*foretak> <*selskap> <*gruppe> <*klubb> <*lag>  ;
LIST ABJ#ORG-PARTI-FORK = "V" "Sp" "SV" "RV" "KrF" "Kr. f." "H" "Frp" "Fr.p." "Ap" "A"  ;
LIST ABJ#ORGTYPE = "trio" "stiftelse" "selskap" "sekt" "råd" "parti" "orkester" "organisasjon" "lag" "kvintett" "kvartett" "kor" "konsern" "kompani" "klubb" "institusjon" "industrigigant" "gruppe" "gigant" "forvaltning" "forretning" "foretak" "forening" "forbund" "firma" "departement" "company" "bevegelse" "beskjeft" "bedrift" "avdeling" <*bevegelse> <*organisasjon> <*råd> <*parti> <*bedrift> <*foretak> <*selskap> <*forbund> <*gruppe> <*klubb>  ;
LIST ABJ#PERSON = <person>  ;
LIST ABJ#PN-ORG-REPRESENTANT = "visepresident" "toppsjef" "talsmann" "talskvinne" "styreformann" "styre" "sjef" "rådgiver" "represetant" "pressetalsmann" "pressetalskvinne" "president" "medlemskap" "medlem" "leder" "konsulent" "konsulent" "kommentator" "klubbformann" "forvalter" "formann" "dirigent" "direktør" "bestyrer" "analytiker" "aktør" "adm. dir." <*formann> <*sjef> <*leder>  ;
LIST ABJ#PREP-BEVEGELSESFORM = "via" "utfor" "utenfor" "til" "rundt" "over" "oppover" "oppi" "nedover" "mellom" "langs" "innover" "innom" "ifra" "gjennom" "fra"  ;
LIST ABJ#PREP-PLASSERING = "utenfor" "under" "over" "nedenfor" "inni" "innenfor" "forran" "bakenfor" "bak"  ;
LIST ABJ#PREP-RETNING = "østover" "øst" "vestover" "vest" "sørøst" "sørvest" "sørover" "sør" "oppover" "nordøst" "nordvest" "nordover" "nord" "nedover" "bortover"  ;
LIST ABJ#PREP-SPILL = "over" "mot" "for"  ;
LIST ABJ#PRON-REFL = prn refl  ;
LIST ABJ#RETNINGER = "øst" "vest" "sørøst" "sørvest" "sør" "nordøst" "nordvest" "nord"  ;
LIST ABJ#SPILL-SUBST = "oppgjør" "match" "lokaloppgjør" "lagkamp" "kamp" "finale" "duell" <*kamp>  ;
LIST ABJ#STED = <sted>  ;
LIST ABJ#STED-SUBST = "øy" "ørken" "ødemark" "ås" "åker" "vinmark" "villmark" "vik" "vidde" "vei" "veg" "vannspeil" "vannkant" "vannfall" "vann" "vadested" "urtehage" "urskog" "torv" "torg" "tomt" "tjern" "territorium" "terreng" "sydpol" "sydhavsøy" "sump" "strandkant" "strand" "steppe" "sted" "stat" "smug" "slott" "sletteland" "slette" "skogbunn" "skogbryn" "skog" "skjærgård" "skjær" "sjøbredd" "sjø" "seter" "savanne" "rydning" "rom" "revle" "rev" "regnskog" "region" "pynt" "prærie" "plen" "platå" "plass" "plantasje" "planet" "parsell" "park" "område" "odde" "oase" "myr" "morene" "marked" "mark" "løvskog" "løkke" "lysning" "li" "lavland" "land" "kyst" "kvarter" "kommune" "klippe" "kjøkkenhage" "kai" "jorde" "isbre" "innsjø" "høyslette" "hus" "hovedstad" "hei" "hede" "hav" "gård" "grense" "gate" "fylke" "foss" "flodbredd" "flod" "fjære" "fjord" "fjell" "fedreland" "fastland" "eng" "elv" "dal" "bøkeskog" "bygd" "by" "bre" "borg" "bekk" "barskog" <*øy> <*by> 

 ;
LIST ABJ#STED-SUBST-FARLIGE = "plass"  ;
LIST ABJ#STED-SUFFIKS = <*skole> <*hus> <*bolig> <*gate> <*vei> <*hjem> <*gate> <*hall> <*hav> <*torg> <*vann> <*vidde> <*ørken> <*hotell> <*elv> <*bukt> <*bre> <*fjell> <*fjord> <*foss> <*gate> <*hall> <*hjem> <*kirke> <*kommune> <*kyst> <*løkke> <*myr> <*park> <*plass> <*sjø> <*skog> <*skole> <*smug> <*strand> <*sund>  ;
LIST ABJ#SUBST-ANNET = "vin" "sykdom" "produkt" "ost" "medisin" "art"  ;
LIST ABJ#SUBST-ANNET-FARTOY = "ubåt" "traktor" "trailer" "tog" "sykkel" "skute" "skip" "seilbåt" "scooter" "rakett" "panservogn" "motorsykkel" "mc" "lastebil" "knallert" "kjøretøy" "helikopter" "fly" "ferge" "fartøy" "campingvogn" "båt" "bil" "MC"  ;
LIST ABJ#SUBST-APPELL-I-AVIS = "spalte" "replikk" "oppslag" "leserinnlegg" "leserbrev" "lederplass" "kronikkplass" "kronikk" "intervju" "innlegg" "artikkel" "annonse"  ;
LIST ABJ#SUBST-GEN/DET-POSS = (n gen) (det pos)  ;
LIST ABJ#SUBST-HENDELSE = "utstilling" "stevne" "orkan" "møte" "mesterskap" "messe" "krig" "konsert" "konferanse" "festival" "arrangement"  ;
LIST ABJ#SUBST-I-ORG = "styremøte" "styre" "stilling" "sentralstyre" "produksjon" "møte" "medlemskap" "medeier" "ledelse" "kontrakt" "komite" "internt" "generalforsamling" "avdeling" "ansettelse" "ansatt" "aksje"  ;
LIST ABJ#SUBST-PERSON = "unge" "ungdom" "tvillingsøster" "tvillingbror" "tvilling" "trilling" "tremenning" "tantebarn" "tante" "søster" "søskenbarn" "søsken" "sønnesønn" "sønn" "svoger" "svigersøster" "svigersønn" "svigermor" "svigerinne" "svigerfar" "svigerdatter" "svigerbror" "storesøster" "storebror" "stesønn" "stemor" "stefar" "stedatter" "stebarn" "stamfar" "slektning" "pårørende" "pappa" "onkel" "oldemor" "oldefar" "oldebarn" "niese" "nevø" "moster" "mormor" "morfar" "mor" "mann" "mamma" "lillesøster" "lillebror" "kvinne" "kusine" "kone" "kjerring" "kar" "jente" "gutt" "fostersønn" "fostermor" "fosterfar" "fosterdatter" "fjortis" "fetter" "faster" "farmor" "farfar" "farbror" "far" "familie" "datterdatter" "datter" "dame" "bror" "bestemor" "bestefar" "barnebarn" "barn"  ;
LIST ABJ#SUBST-PERSON-EGENSKAP = "øyenvitne" "åndemaner" "ving" "vikar" "veileder" "vegetarianer" "vagabond" "utøver" "utnytter" "utleier" "utbytter" "utbyder" "undertrykker" "tyv" "tyv" "tyrann" "turist" "tryllekunstner" "trollmann" "transvestitt" "teoretiker" "tennisspiller" "tenker" "taktiker" "særling" "svømmer" "svindler" "stråmann" "streber" "strateg" "stoffmisbruker" "stamkunde" "stamgjest" "sprøytenarkoman" "språkbruker" "sprinter" "spion" "spesialist" "spekulant" "speider" "slavinne" "slave" "skytter" "skrytepave" "skjøge" "skiløper" "skeptiker" "sjøhelt" "seiler" "sangfugl" "samler" "sadist" "røyker" "røver" "roer" "pyroman" "pusher" "profet" "profet" "predikant" "poet" "plattenslager" "plageånd" "pendler" "ornitolog" "orakel" "oppkjøper" "oppdretter" "idrettsmann" "husokkupant" "fyllik" "fantast" "eventyrer" "eneboligeier" "elskerinne" "elsker" "drømmer" "dranker" "debattant" "bodybuilder" "blotter" "bass" "baryton" "alkoholiker" "abonnent" 

 ;
LIST ABJ#SUBST-PROP-GEN = (n prop gen)  ;
LIST ABJ#SUBST-PROP/PRON-PERS = (n prop) (prn pers)  ;
LIST ABJ#SUBST-STED-GEOPOLITISK = "vertsland" "vennskapsby" "velferdsstat" "uland" "tusenårsrike" "tredjeland" "territorium" "syden" "storby" "stift" "stat" "stasjonsby" "stad" "sogn" "slumkvarter" "rike" "rettsstat" "republikk" "region" "provinsby" "prosti" "primærkommune" "nasjon" "nabokommune" "landsdel" "land" "kvarter" "kommune" "hjemstavn" "hjemland" "hjemby" "forbundsstat" "forbundsrepublikk" "egn" "distrikt" "by"  ;
LIST ABJ#SUBST/PRON-PERS = n (prn pers)  ;
LIST ABJ#VERB-AV-ANNET = "utvikling" "produksjon" "fabrikasjon" "distribusjon"  ;
LIST ABJ#VERB-BEVEGELSE-TIL/FRA-STED = "stikke" "sende" "seile" "returnere" "reise" "komme" "kjøre" "invitere" "grense" "føre" "fyke" "frakte" "flytte" "flykte" "fly" "dra" "bringe" "bile"  ;
LIST ABJ#VERB-MOETE-S = "treffes" "snakkes" "sees" "møtes" "høres"  ;
LIST ABJ#VERB-PLASSERING = "oppholde" "etablere" "bosette" "befinne"  ;
LIST ABJ#VERB-SPILL = "vinne" "tape" "spille" "slå" "knuse"  ;
LIST ABJ#VERB-VERK-BEHANDLING = "skumme" "skrive" "regisere" "redigere" "publisere" "lese" "lansere" "konstruere" "komponere" "fremføre" "forfatte" "filmatisere"  ;
LIST ABJ#VERK = <verk>  ;
LIST ABJ#VERK-AKTIV-VERB1 = "vise" "skrive" "selge" "se" "redigere" "publisere" "plassere" "lese" "leie" "lansere" "lage" "komponere" "kjøpe" "høre" "gi" "forfatte"  ;
LIST ABJ#VERK-AKTIV-VERB2 = "vise" "selge" "redigere" "publisere" "produsere" "lansere" "lage" "kjøpe" "gi"  ;
LIST ABJ#VERKTYPE = "verk" "tv-serie" "triller" "tidsskrift" "tegneserie" "teaterstykke" "symfony" "suite" "stykke" "sonate" "skulptur" "skive" "seriemester" "serie" "sang" "saga" "roman" "program" "plate" "opus" "oppslagsverk" "operette" "opera" "omslag" "novelle" "nettsiden" "maleri" "magasin" "låt" "lp" "limrik" "kunstverk" "komedie" "hjemmeside" "historie" "fortelling" "film" "fansine" "eventyr" "essay" "dramaserie" "drama" "dokumentar" "dokument" "dikt" "dagblad" "cover" "cd" "bok" "blad" "biografi" "avis" "artikkel" "album" <*lov> <*roman> <*film> <*bok> <*blad> <*program> <*serie> <*teorem>  ;
LIST ABJ#VERKTYPE-FARLIG = "tv-program" "seriemester" "program" "ordbok" "oppslagsverk" "lov" "historie" "forskningsprogram" "dokumentar" <*lov>  ;
LIST aci = "se" "merke" "la" "kjenne" "høre" "føle" "be"  ;
LIST adj = adj pos  ;
LIST adj-adv-subst-cnj = adv adj n cnj  ;
LIST adj-be = (adj def) (adj <pres-part>)  ;
LIST adj-ent = (adj sg) (adj <pres-part>)  ;
LIST adj-f = (adj f) (adj mf) (adj <pres-part>) (adj def)  ;
LIST adj-fl = (adj pl) (adj <pres-part>)  ;
LIST adj-gen = (adj gen)  ;
LIST adj-komp = (adj comp)  ;
LIST adj-m = (adj m) (adj mf) (adj <pres-part>) (adj def)  ;
LIST adj-m-f-be-sup = (adj m) (adj f) (adj mf) (adj sup def) (adj <pres-part>)  ;
LIST adj-m-f-be-sup/%som% = "som" (adj m) (adj f) (adj mf) (adj sup def) (adj <pres-part>)  ;
LIST adj-mf = (adj m) (adj f) (adj mf) (adj <pres-part>) (adj def)  ;
LIST adj-m/nt = (adj m) (adj mf) (adj nt) (adj <pres-part>) (adj def)  ;
LIST adj-nt = (adj nt) (adj def) (adj <pres-part>)  ;
LIST adj-nt-ub = (adj nt ind) (adj <pres-part>)  ;
LIST adj-pos = (adj pos)  ;
LIST adj-ren = adj  ;
LIST adj-subst-cnj = adj n cnj  ;
LIST adj-sup = (adj sup)  ;
LIST adj-sup-be = (adj sup def)  ;
LIST adj-sup-ub = (adj sup ind)  ;
LIST adj-ub = (adj ind) (adj <pres-part>)  ;
LIST adj-ub-ent = (adjindsg) (adj <pres-part>)  ;
LIST adj-ub-ent/%bare% = "bare" (adjindsg) (adj <pres-part>)  ;
LIST adj/adv = adj adv  ;
LIST adj/adv-iv = "så" "nå" "hele" "halve" "dette" ("vite" perf-part) ("fortsette" perf-part)  ;
LIST adj/adv/subst/anf = det adj adv n <anf>  ;
LIST adj/det = adj det  ;
LIST adj/nr2det = "sånn" "sådan" "slik" "samme" "neste" "hver" "halvannen" "eneste" "ene" "eigen" "egen" "annen" adj (det qnt pl)  ;
LIST adj/perf-part = adj perf-part  ;
LIST adj/subst = adj n  ;
LIST adjudet = "litt" "lite" ("mange" pos) ("mange" comp) ("mange" sup ind) ("få" pos) ("få" comp) ("få" sup ub) ("mye" pos) ("mye" comp) ("mye" sup ub) ("liten" pos) ("liten" comp) ("liten" sup ub) ("enkelt" pl)  ;
LIST adv = adv <adv>  ;
LIST adv-anslag = "omtrent" "min." "maks." "cirka" "ca." "ca"  ;
LIST adv-cnj = "verken" "hverken" "enten" "både" (cnj <adv>)  ;
LIST adv-mod = "tvert" "trill" "tjokkende" "søkkende" "særdeles" "såre" "såpass" "så pass" "så" "synderlig" "svinaktig" "stummende" "stikk" "steinsens" "splitter" "splinter" "spill" "spikende" "spenna" "sabla" "ruskende" "pukka" "pal" "overvettes" "overmåte" "nokså" "mukk" "midt" "meget" "luta" "likså" "like" "lagom" "kul" "knasende" "knapt" "kanon" "iltrende" "høyst" "hoppende" "hakkende" "gørr" "gullende" "ganske" "forholdsvis" "for" "fly" "flunkende" "enda" "dørgende" "dønn" "dorgende" "dess" "delvis" "dels" "bom" "blikk" "bitte" "bistrende" "bekende" "altfor" "aller" "aldeles"  ;
LIST adv/<adv> = adv <adv>  ;
LIST adv/<adv>/pr = adv <adv> pr  ;
LIST adv/adj-nt-ub = adv <adv> (adj nt ind)  ;
LIST adv/strek = adv <strek>  ;
LIST advblex = adv <adv> (adj nt ind) ("nær" sup def) ("noen" det nt)  ;
LIST advblex/komp = adv <adv> (adj nt ind) (adj comp) ("nær" sup def) ("noen" det nt)  ;
LIST advblex/komp/ub-sup = adv <adv> (adj nt ind) (adj comp) (adj sup ub) ("noen" det nt)  ;
LIST advblex/komp/ub-sup/pres-part = adv <adv> (adj nt ind) (adj comp) (adj sup ub) (adj <pres-part>)  ;
LIST advblexialsubst = "øyeblikk" "år" "vinter" "vei" "uke" "torsdag" "tonnkilometer" "tiår" "tirsdag" "time" "tiendelssekund" "tidelssekund" "tid" "søndag" "stykke" "stund" "steg" "sted" "sommer" "skritt" "sjømil" "september" "sekundmeter" "sekund" "påske" "pinse" "periode" "onsdag" "oktober" "november" "noengang" "natt" "nanosekund" "nanometer" "måned" "morgen" "minutt" "millisekund" "millimeter" "mil" "mikrometer" "meter" "mars" "mandag" "mai" "m." "lørdag" "kveld" "kvartmil" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "km" "klokke" "kilometer" "juni" "juli" "jul" "januar" "høst" "hverdag" "hundredelssekund" "helligdag" "helgedag" "halvår" "halvmil" "halvmeter" "gang" "fredag" "formiddag" "februar" "ettermiddag" "døgn" "desimeter" "desember" "dag" "centimeter" "august" "april" <dato> ("liv" sg def) ("vår" n)  ;
LIST advtype-cnj = (cnj <adv>)  ;
LIST agens-p = "av"  ;
LIST akk = akk  ;
LIST alt = "siden" adj adv vblex pr prn sbu inf-merke n interj det cnj <anf> <komma> <ellipse> <kolon> <parentes-beg> <parentes-slutt> <semi> <strek>  ;
LIST anf = <anf>  ;
LIST annet = <annet>  ;
LIST bare-adj = "vedkommende" "ugjort" "tilsvarende" "skrå" "nær" "ny" "middels" "kort" "iført" "halv" "fånyttes" "fri"  ;
LIST def = def  ;
LIST be-adj = (adj def) (adj <pres-part>)  ;
LIST be-adj/komp-adj = comp (adj def) (adj <pres-part>)  ;
LIST be-adj/subst = (adj def) (adj comp) (adj sup be) (adj <pres-part>) n  ;
LIST be-det = "hin" "dette" "det" "denne" "den"  ;
LIST be-det-ent = ("hin" sg) ("denne" sg) ("dette" sg) ("den" sg) ("det" sg) ("de" sg) (det def sg) (n gen)  ;
LIST be-det-ent/fl = "hin" "dette" "det" "denne" "den" "de" (det def)  ;
LIST be-ent = (be sg)  ;
LIST be-ent-adj = (adj def sg) (adj <pres-part>)  ;
LIST be-ent-adj/be-det/komp-be-sup-adj/ordenstall = <ordenstall> (adj def sg) (det def) (adj comp) (adj sup be) (adj <pres-part>)  ;
LIST be-ent-adj/det-dem/komp-be-sup-adj = (adj def sg) (det dem) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST be-ent-adj/ent-f-subst = (adj def sg) (adj comp) (adj sup def) (adj <pres-part>) (n f sg)  ;
LIST be-ent-adj/ent-m-subst = (adj def sg) (adj comp) (adj sup def) (adj <pres-part>) (n m sg)  ;
LIST be-ent-adj/ent-nt-subst = (adj def sg) (adj comp) (adj sup def) (adj <pres-part>) (n nt sg)  ;
LIST be-ent-adj/komp-be-sup-adj = (adj def sg) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST be-ent-f-adj = (adj def sg) (adj sup def) (adj <pres-part>)  ;
LIST be-ent-f-adj/komp/sup = (adj def sg) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST be-ent-f-subst = (n f sg def)  ;
LIST be-ent-f-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n f sg def) ("gang" pl)  ;
LIST be-ent-f-subst/tall-subst/maalsubst/tidssubst/prop/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n f sg def) ("gang" pl) prop  ;
LIST be-ent-m-adj = (adj def sg) (adj sup def) (adj <pres-part>)  ;
LIST be-ent-m-adj/komp/sup = (adj def sg) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST be-ent-m-subst = (n m sg def)  ;
LIST be-ent-m-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n m sg def) ("gang" pl)  ;
LIST be-ent-m-subst/tall-subst/maalsubst/tidssubst/prop/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n m sg def) ("gang" pl) prop  ;
LIST be-ent-mf-subst = (n m sg def) (n f sg be)  ;
LIST be-ent-nt-adj = (adj def sg) (adj sup def) (adj <pres-part>)  ;
LIST be-ent-nt-adj/komp/sup = (adj def sg) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST be-ent-nt-subst = (n nt sg def)  ;
LIST be-ent-nt-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n nt sg def) ("gang" pl)  ;
LIST be-ent-nt-subst/tall-subst/maalsubst/tidssubst/prop/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n nt sg def) ("gang" pl) prop  ;
LIST be-ent-subst = (n sg def)  ;
LIST be-ent-subst/be-ent-adj = (n sg def) (adj def sg) (adj <pres-part>)  ;
LIST be-f-det = (det pos f) ("hin" det f) ("denne" det f) ("den" det f)  ;
LIST be-fl-subst = (n pl def)  ;
LIST be-fl-subst/fl-adj = (n pl def) (adj pl) (adj <pres-part>)  ;
LIST be-m-det = (det pos m) ("hin" det m) ("denne" det m) ("den" det m)  ;
LIST be-nt-det = (det pos nt) ("hin" det nt) ("dette" det nt) ("det" det nt)  ;
LIST be-subst = (n def)  ;
LIST clb = clb  ;
LIST clb-komma = (clb <komma>)  ;
LIST clb-komma/clb-cnj = (clb <komma>) (clb cnj)  ;
LIST clb-komma/cnj = (clb <komma>) (clb cnj)  ;
LIST clb-cnj = (clb cnj)  ;
LIST clb/cnj-cnj = ("og" cnj) ("eller" cnj) ("men" cnj)  ;
LIST dato = <dato>  ;
LIST dem = dem  ;
LIST dem/%saa%-adv = dem ("så" adv)  ;
LIST dem/poss/gen = dem pos gen  ;
LIST det = det  ;
LIST det-dem = (det dem)  ;
LIST det-ent = (det sg)  ;
LIST det-ent-nt-halvt = "halv" (det nt sg) 

 ;
LIST det-ent/prn-ent = (det sg) (prn sg)  ;
LIST det-etterstilt = (det pos) ("selv" det forst) ("sjøl" det forst)  ;
LIST det-gen = det (n gen)  ;
LIST det-qnt = (det qnt)  ;
LIST det-m-ent = (det m sg)  ;
LIST det-m-fl = (det m pl)  ;
LIST det-mf = (det m) (det f)  ;
LIST det-mf/fl = (det m) (det f) (det pl)  ;
LIST det-nt-ent = (det nt sg)  ;
LIST det-nt-ent/poss/gen = (det nt sg) pos gen  ;
LIST det-pr = det pr  ;
LIST det-pr-infmerke-adjbe = "siden" det pr inf-merke (adj def) (adj <pres-part>)  ;
LIST det-subst = det n  ;
LIST det/adj = det adj  ;
LIST det/adj/adv/subst = det adj adv n  ;
LIST det/adj/adv/subst/infmerke = det adj adv n inf-merke  ;
LIST det/adj/gen/prop = det adj gen prop  ;
LIST det/adj/komma/cnj = "$," (adj m) (adj f) (adj mf) (adj pl) (adj <pres-part>) (adj def) det cnj  ;
LIST det/adj/tall-subst = "tusen" "trillion" "mrd." "million" "milliard" "mill." "kvadrillion" "hundre" "halvmillion" "billion" "billiard" det adj  ;
LIST det/adj/ub-ent-subst = det adj (n sg ind)  ;
LIST det/adv = det adv  ;
LIST det/be-adj = det (adj def) (adj <pres-part>)  ;
LIST det/subst-gen = det (n gen)  ;
LIST ditrans = d1 d2 d3 d6 d7 rl6 rl7 rl8  ;
LIST ditrans-pr = "mellom" "imellom"  ;
LIST ellipse = ("$--" <strek>) <ellipse>  ;
LIST sg = sg  ;
LIST sg-f-subst = (n f sg)  ;
LIST sg-f-subst/tall-subst/maalsubst/tidssubst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n f sg) ("gang" pl)  ;
LIST sg-f-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n f sg) ("gang" pl)  ;
LIST sg-f-subst/tall-subst/maalsubst/tidssubst/prop/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n f sg) ("gang" pl) prop  ;
LIST sg-m-subst = (n m sg)  ;
LIST sg-m-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n m sg) ("gang" pl) 

 ;
LIST sg-nt-subst = (n nt sg)  ;
LIST sg-nt-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n nt sg) ("gang" pl)  ;
LIST sg-nt-subst/tall-subst/maalsubst/tidssubst/prop/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n nt sg) ("gang" pl) prop  ;
LIST sg-subst = (n sg)  ;
LIST sg-subst/ent-prn = (n sg) (prn sg)  ;
LIST sg-subst/pos-adj/%det% = "det" (n sg) (adj pos)  ;
LIST sg-subst/ub-ent-nt-adj = (n sg) (adj ntindsg) (adj <pres-part>)  ;
LIST sg-subst/ub-ent-nt-adj/%det% = "det" (n sg) (adj ntindsg) (adj <pres-part>)  ;
LIST sg-ub = (ent ind)  ;
LIST etternavn = "United" "Times" "Idrettslag" "City" "Blad"  ;
LIST f-subj = ("det" prn)  ;
LIST farger = "turkis" "svart" "rød" "rosa" "oransje" "lilla" "indigo" "hvit" "gul" "grønn" "grå" "fiolett" "blå"  ;
LIST farlige-adj = "året" "vite" "vis" "var" "tids" "sige" "se" "mige" "live" "like" "lette" "lage" "helle" "før" "fore" "ete" "eie" "egen" "bar" "annen" "angående" "ale"  ;
LIST farlige-adj-subst = "venstre" "tunge" "skrå" "skarp" "rett" "ny" "like" "lik" "kvalm" "høy" "helt" "helt" "heller" "gode" "faren" (adj comp) ("visse" n) ("sivil" n) ("absolutt" n) ("konkret" n) ("sett" nt) ("halv" uboey) ("var" n ind) ("lit" sg def) ("middel" gen) ("al" pl be)  ;
LIST farlige-fl-subst = ("hjelp" pl ind) ("lede" m pl ub) ("led" m pl ub) ("falle" m pl ub) ("fall" m pl ub) ("snus" m pl ub) ("finn" pl ub) ("finne" pl ub) ("komme" pl ub) ("under" pl ub) ("får" pl) ("ønske" pl) ("slag" gen) ("jeg" pl) ("lo" pl) ("var" pl) ("nå" pl) ("sett" pl) ("al" pl def) ("mot" pl ub) ("men" pl ub) ("gir" pl ub)  ;
LIST farlige-forledd-vblex = ("kontre" pret) ("helle" pres) ("nå" pres) ("elle" pres) ("fø" pres) ("fare" pret) ("tro" adj) ("tiltale" pret)  ;
LIST farlige-imp = "vare" "så" "se" "nå" "neie" "mine" "mene" "hanse" "føre" "fore" "ete" "ene" "bedre"  ;
LIST farlige-inf = "tre" "så" "støtte" "skole" "pose" "nå" "nye" "norske" "neste" "lite" "like" "lekre" "hele" "friske" "fri" "fjerne" "finere" "disse" "dette" "bedre" ("slette" pass)  ;
LIST farlige-m-subst = "ville" "ved" "syke" "skrå" "like" "helt" "heller" "eldste" ("ho" sgindgen) ("å" sg ind) ("alt" sg ub) ("mens" sg ub) ("meget" sg ub) ("side" sg def) ("lit" sg be) ("middel" gen) ("gode" sg ub) ("al" pl be)  ;
LIST farlige-nt-subst = "vilt" "venstre" "var" "under" "tre" "skrå" "sett" "selv" "nå" "ny" "mot" "lik" "konkret" "jeg" "høyre" "godt" "gode" "folk" "bak" ("stikk" adv) ("alt" ind) ("fort" ub) ("slag" gen) ("lo" pl) ("al" pl def) ("middel" gen) ("men" sg ub) ("men" pl ub)  ;
LIST farlige-part = "vite" "via" "vekke" "svare" "stole" "spenne" "skjønne" "sale" "renne" "re" "pule" "prime" "ose" "oppta" "omvende" "nære" "nyte" "mige" "make" "lyse" "live" "lite" "lete" "leite" "kontre" "klare" "hete" "helle" "hele" "gråte" "gale" "fortsette" "fore" "ete" "desidere" "brune" "bre" "bene" "bare" "anstrenge" "ale" gen  ;
LIST farlige-vblex = ("ansette" vblex pret) ("kontre" pret) ("gange" pres) ("stede" pres) ("nå" pres) ("elle" pres) ("fø" pres) ("sige" pret) ("fare" pret) ("se" pret) ("helle" pres) ("mige" pret) ("dy" pres) ("dage" pres) ("grade" pres) ("tro" adj)  ;
LIST f = f mf (adj def)  ;
LIST f-be = (f def)  ;
LIST f-det = (det f)  ;
LIST f-ent = (f sg) (mf sg) (adj def) (f uboey) (n prop)  ;
LIST f-ent-ub = (f sg ind) (findsg) (mf sg) (adj def)  ;
LIST f-ub = (f ind) (mf ub)  ;
LIST f-uboey-fork-subst = (n f uboey) (fork n f)  ;
LIST fin-ind = pres pret  ;
LIST fin-vblex/%kalle% = "kalle" pres pret imp  ;
LIST pl = pl  ;
LIST pl-adj = (adj pl) (adj <pres-part>)  ;
LIST pl-adj-nr2det/komp-adj/ordenstall = "samme" "eneste" <ordenstall> (adj pl) (adj <pres-part>) ("hver" det qnt pl) ("neste" det) ("annen" dem pl) ("slik" dem pl) ("sånn" dem pl) ("sådan" dem pl) ("egen" forst pl) ("eigen" forst pl) (adj comp)  ;
LIST pl-adj/advblex = (adj pl) (adj nt ind) (adj <pres-part>) adv <adv>  ;
LIST pl-adj/be-det/tall/komp-be-sup-adj/ordenstall = <ordenstall> (adj pl) (adj <pres-part>) (det def) (det qnt pl) (adj comp) (adj sup be)  ;
LIST pl-adj/fl-det = (adj pl) (det pl) (adj <pres-part>)  ;
LIST pl-adj/fl-det/poss/gen = (adj pl) (det pl) (adj <pres-part>) pos gen  ;
LIST pl-adj/fl-subst = (adj pl) (adj comp) (adj sup def) (adj <pres-part>) (n pl)  ;
LIST pl-adj/komp-adj = (adj pl) (adj comp) (adj <pres-part>)  ;
LIST pl-adj/komp-adj/ordenstall = <ordenstall> (adj pl) (adj comp) (adj <pres-part>)  ;
LIST pl-adj/komp-be-sup-adj = (adj pl) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST pl-adj/ub-fl-subst = (adj pl) (adj <pres-part>) (n pl ind)  ;
LIST pl-be = (fl def)  ;
LIST pl-det = (det pl)  ;
LIST pl-det/fl-adj = (det pl) (adj pl) (adj <pres-part>)  ;
LIST pl-prn = (prn pl)  ;
LIST pl-subst = (n pl)  ;
LIST pl-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n pl) ("gang" pl)  ;
LIST pl-subst/tall-subst/maalsubst/tidssubst/prop/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n pl) ("gang" pl) prop  ;
LIST pl-ub = (fl ind)  ;
LIST fork = fork  ;
LIST fork/ukjent-ord = fork ukjent  ;
LIST fv = (vblex pres) (vblex pret) (vblex imp)  ;
LIST fv/infmerke = (vblex pres) (vblex pret) (vblex imp) inf-merke  ;
LIST gammel/lang = "lang" "gammel" "gammal"  ;
LIST gen = gen  ;
LIST gen-subst = (n gen)  ;
LIST gen/%slags% = "slags" gen  ;
LIST grads-adv = "stor" "mye" "liten" "ille" "god"  ;
LIST halv-f = ("halv" f)  ;
LIST halv-m = ("halv" m)  ;
LIST halv-nt = ("halv" nt)  ;
LIST hendelse = <hend>  ;
LIST hj-vblex = "være" "ville" "skulle" "måtte" "kunne" "ha" "få" "burde" "bli"  ;
LIST hj-vblex-ikke-passiv = "ville" "skulle" "måtte" "kunne" "ha" "få" "burde"  ;
LIST hj-vblex-iv = ("bli" inf) ("bli" perf-part) ("ha" inf) ("ha" perf-part) ("være" inf) ("være" perf-part) ("få" inf) ("få" perf-part) ("skulle" inf) ("skulle" perf-part) ("kunne" inf) ("kunne" perf-part) ("ville" inf) ("ville" perf-part) ("måtte" inf) ("måtte" perf-part) ("burde" inf) ("burde" perf-part)  ;
LIST hoeflig = hoeflig  ;
LIST høflig = "Deres" "Dem" "De" 

 ;
LIST ikke-adj = "siden" adv vblex pr prn sbu inf-merke n interj det (clb cnj) <anf> <ellipse> (cnj <adv>)  ;
LIST ikke-adj-adv = vblex pr prn sbu inf-merke n interj det (clb cnj) <anf> <ellipse> (cnj <adv>)  ;
LIST ikke-adj-det = adv vblex pr prn sbu inf-merke n interj <ellipse> <kolon> <semi> (cnj clb) (<komma> clb) (cnj <adv>)  ;
LIST ikke-adj-nr2det = adv vblex pr prn sbu inf-merke n interj <ellipse> <kolon> <semi> (cnj clb) (<komma> clb) (cnj <adv>) ("hin" det) ("denne" det) ("dette" det) ("den" det) ("det" det) ("en" det) ("noen" det) ("ingen" det)  ;
LIST ikke-adj-nr2det-be-det = adv vblex pr prn sbu inf-merke n interj <ellipse> <kolon> <semi> ("en" det) ("noen" det) ("ingen" det) (cnj clb) (<komma> clb) (cnj <adv>)  ;
LIST ikke-adj-subst = "siden" adv vblex pr prn sbu cnj inf-merke interj det <<< <ellipse>  ;
LIST ikke-adj-vblex = "siden" n adv pr prn sbu cnj inf-merke interj det <<< <ellipse>  ;
LIST ikke-adv = "siden" "$," vblex pr prn sbu cnj inf-merke interj n det <ellipse> (adj m) (adj f) (adj mf) (adj pl) (adj comp) (adj sup) (adj <pres-part>) (adj def)  ;
LIST ikke-adv-adj = "siden" "$:" vblex pr prn sbu inf-merke n interj det <ellipse> (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-det = "siden" "$:" vblex pr prn sbu inf-merke n interj <ellipse> (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-det-prn = "siden" "$:" vblex pr sbu inf-merke n interj <ellipse> (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-det-setn-gr = "siden" "$:" vblex pr prn sbu inf-merke n interj <ellipse> clb <<< >>> (cnj <adv>) (clb <komma>)  ;
LIST ikke-adv-adj-det-subst = "siden" "<$-->" "$:" "$-" "$," <parentes-beg> <parentes-slutt> vblex pr prn sbu cnj inf-merke interj <<< <ellipse>  ;
LIST ikke-adv-adj-det/%all%/%mang%/%mange% = "siden" "mange" "mang" "all" "$:" vblex pr prn sbu inf-merke n interj <ellipse> (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-det/clb-komma = "siden" "$:" vblex pr prn sbu inf-merke n interj <ellipse> (clb cnj) (clb <komma>) (cnj <adv>)  ;
LIST ikke-adv-adj-det2 = "siden" "$:" vblex pr prn sbu inf-merke n interj <ellipse>  ;
LIST ikke-adv-adj-fl-det = "siden" "$:" vblex pr prn sbu inf-merke n inter <ellipse> (det sg) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-komma = "siden" "$-" <parentes-slutt> vblex pr prn sbu inf-merke n interj det <ellipse> ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-cnj = "siden" "$:" vblex pr prn sbu inf-merke n interj det <ellipse>  ;
LIST ikke-adv-adj-qnt = "siden" vblex pr prn sbu cnj inf-merke n interj <ellipse> (det dem) (det pos) (det forst)  ;
LIST ikke-adv-adj-nr2det = vblex pr prn sbu inf-merke n interj <ellipse> <kolon> <semi> ("hin" det) ("denne" det) ("dette" det) ("den" det) ("det" det) ("en" det) ("noen" det m) ("noen" det f) ("noen" det pl) ("ingen" det) (cnj clb) (<komma> clb)  ;
LIST ikke-adv-adj-nr2det-be-det = vblex pr prn sbu inf-merke n interj <ellipse> <kolon> <semi> ("en" det) ("noen" det) ("ingen" det) (cnj clb) (<komma> clb) (cnj <adv>)  ;
LIST ikke-adv-adj-pr = "$," det vblex prn sbu cnj inf-merke interj n <ellipse>  ;
LIST ikke-adv-adj-pr-det = "$," vblex prn sbu cnj inf-merke interj n <ellipse>  ;
LIST ikke-adv-adj-subst = "siden" "<$-->" "$:" "$-" "$," <parentes-beg> <parentes-slutt> vblex pr prn sbu cnj inf-merke interj det <<< <ellipse>  ;
LIST ikke-adv-adj-subst-det-pr = "$-" "$," vblex prn sbu cnj inf-merke interj <<< <ellipse>  ;
LIST ikke-adv-adj-subst-prn-det = cnj pr sbu inf-merke interj <ellipse> (vblex pres) (vblex pret) (det dem) (n gen) ("$," clb)  ;
LIST ikke-adv-adj-subst-prn-cnj-det = "siden" pr sbu inf-merke interj <ellipse> (vblex pres) (vblex pret) (det dem) (n gen) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-subst-prn-cnj-det-sbu = "siden" pr inf-merke interj <ellipse> (vblex pres) (vblex pret) (det dem) (n gen) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-subst-prn-cnj-det-sbu2 = "siden" pr inf-merke interj <ellipse> (vblex pres) (vblex pret) (vblex inf) (vblex pass) (vblex perf-part) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-subst-prn-cnj-det2 = "siden" pr sbu inf-merke interj <ellipse> (vblex pres) (vblex pret) (vblex inf) (vblex pass) (vblex perf-part) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-subst-prn-cnj-det2-pr = sbu inf-merke interj <ellipse> (vblex pres) (vblex pret) (vblex inf) (vblex pass) (vblex perf-part) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-substmgen-cnj-detmdem-pr = prn sbu inf-merke interj <ellipse> (vblex pres) (vblex pret) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-substmgen-prn-detmdem-pr = sbu inf-merke interj cnj <ellipse> (vblex pres) (vblex pret) ("$," clb)  ;
LIST ikke-adv-adj-substmgen-prn-cnj-detmdem-pr = sbu inf-merke interj <ellipse> (vblex pres) (vblex pret) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-substmgen-prn-cnj-detmdem-pr2 = sbu inf-merke interj <ellipse> vblex ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-adj-u-cnj = vblex pr prn sbu inf-merke n interj det cnj <ellipse> <kolon> <semi> (<komma> clb) (cnj <adv>)  ;
LIST ikke-adv-be-adj = vblex pr prn sbu inf-merke n interj det <ellipse> <kolon> <semi> (adj ind) (adj <pres-part>) (cnj clb) (<komma> clb) (cnj <adv>)  ;
LIST ikke-adv-komp-ub-sup = "siden" "$," vblex pr prn sbu cnj inf-merke interj n det <ellipse> (adj m) (adj f) (adj mf) (adj pl) (adj sup def) (adj <pres-part>) (adj be)  ;
LIST ikke-adv-pr = "siden" "$," vblex prn sbu cnj inf-merke interj n det <ellipse> (adj m) (adj f) (adj mf) (adj pl) (adj comp) (adj sup) (adj <pres-part>) (adj def)  ;
LIST ikke-adv-subst-prn-cnj = "siden" det vblex pr sbu interj <ellipse> (det dem) (adj mf) (adj m) (adj f) (adj mf) (adj pl) (adj def) (adj <pres-part>) (n gen) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-subst-prn-cnj-det = "siden" vblex pr sbu interj <ellipse> (det dem) (adj <pres-part>) (adj mf) (adj m) (adj f) (adj mf) (adj pl) (adj def) (n gen) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-subst-prn-cnj-det-vblex = "siden" pr sbu interj <ellipse> (det dem) (adj mf) (adj m) (adj f) (adj mf) (adj pl) (adj def) (adj <pres-part>) (n gen) ("$," clb) (clb cnj) (cnj <adv>)  ;
LIST ikke-adv-vblex = "siden" "$," pr prn sbu cnj inf-merke interj n det <ellipse> (adj m) (adj f) (adj pl) (adj mf) (adj comp) (adj sup) (adj <pres-part>) (adj def)  ;
LIST ikke-annet = <hend> <org> <person> <sted> <verk>  ;
LIST ikke-denne-np = "siden" "$-" vblex pr prn sbu inf-merke det interj <<<  ;
LIST ikke-det = "siden" vblex pr prn sbu cnj inf-merke n interj adj adv  ;
LIST ikke-det-inkl-parentes-beg = vblex pr prn sbu cnj inf-merke n interj adj adv <parentes-beg>  ;
LIST ikke-det-pr = "siden" vblex pr prn sbu cnj inf-merke n interj adj adv  ;
LIST ikke-hend = <annet> <org> <person> <sted> <verk> 

 ;
LIST ikke-pr = sbu adv adj vblex prn inf-merke n interj det (clb cnj) <anf> <ellipse>  ;
LIST ikke-pr-sbu = adv adj vblex prn inf-merke n interj det (clb cnj) <anf> <ellipse>  ;
LIST ikke-pres-pret = "siden" det pr prn sbu cnj inf-merke n interj adj adv inf perf-part  ;
LIST ikke-refl = n n1 i1 i2 i3 i4 tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr11 tr12 tr12/til tr13 tr13/til tr14 tr15 tr16 tr17 tr18 tr19 tr20 tr20/til tr21 tr21/til tr22 tr22/til tr23 d1 d2 d3 d4 d5 d6 d7 d8 d9 pr1 pr2 pr3 pr4 pr5 pr6 pr7 pr8 pr9 pr10 pr11 pr12 pr13 pa pa/til pa1 pa1/til pa1refl4 pa2 pa2/til pa3 pa3/til pa4 pa4/til pa5 pa5 pa5/til pa6 pa7 a2 a6 a7 a8 a9 a10 a11 a13 a14 a15 a16 a17 <aux1/inf> <aux1/infinitiv> <aux1/perf_part> k1 k2  ;
LIST ikke-sanns-ditrans = "skrive" "kjøpe"  ;
LIST ikke-sbu = det pr prn cnj inf-merke n interj adj adv vblex  ;
LIST ikke-sted = <annet> <hend> <org> <person> <verk>  ;
LIST ikke-subst = "siden" "$-" "$," vblex pr prn sbu cnj inf-merke det interj adj adv  ;
LIST ikke-subst-adj-det-adv = "siden" "$-" "$," prn (n gen) vblex pr sbu cnj inf-merke interj  ;
LIST ikke-subst-adj-det-prn = "siden" "$-" "$," adv vblex pr sbu cnj inf-merke interj  ;
LIST ikke-subst-adj-det-prn-adv = "siden" "$-" "$," (n gen) vblex pr sbu cnj inf-merke interj  ;
LIST ikke-subst-f/m = "siden" vblex pr prn sbu cnj inf-merke det interj adj (n nt) adv  ;
LIST ikke-subst-nt = "siden" vblex pr prn sbu cnj inf-merke det interj adj (n m) (n f) adv 

 ;
LIST ikke-subst-prn = "siden" "$-" "$," vblex pr sbu cnj inf-merke det interj adj adv  ;
LIST ikke-subst-prop = "siden" "$-" "$," vblex pr prn sbu cnj inf-merke det interj adj adv (n appell)  ;
LIST ikke-subst-vblex = "siden" "$-" "$," pr prn sbu cnj inf-merke det interj adj adv  ;
LIST ikke-tall = "somme" "samtlige" "noen" "ingen" "hver" "enhver" "begge" "all"  ;
LIST ikke-tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus = tr2 tr3 tr11 tr12 tr12/til tr13 tr13/til tr15 tr16 tr17 tr18 tr19 tr20 tr20/til tr21 tr21/til tr22 tr22/til tr23 t n n1 i1 i2 i3 i4 pr2 pr11 pr12 pr13 a1 a3 a4 a5 a12 a15 a16 a17 pa pa/til pa1 pa1/til pa1 refl4 pa2 pa2/til pa3 pa3/til pa4 pa4/til pa5 pa5 pa5/til pa6 pa7 pa8 <aux1/inf> <aux1/infinitiv> <aux1/perf_part>  ;
LIST ikke-vblex = "siden" det pr prn sbu cnj inf-merke n interj adj adv  ;
LIST ikke-vblex-adj-adv = det pr prn sbu cnj inf-merke n interj  ;
LIST ikke-verk = <annet> <hend> <org> <person> <sted>  ;
LIST imp = imp  ;
LIST inf = inf  ;
LIST inf/perf-part = (vblex inf) (vblex perf-part)  ;
LIST inf/pres = (vblex inf pres)  ;
LIST infmerke = inf-merke 

 ;
LIST interj = interj  ;
LIST intrans = i1 i3 i4  ;
LIST iv = (vblex inf) (vblex perf-part)  ;
LIST KH#AFTENPOSTEN = "Aftenposten"  ;
LIST KH#BEVEGELSESVERB-PERSON = "vandre" "spurte" "sprinte" "rusle" "peke" "løpe" "jogge"  ;
LIST KH#EIEVERB-PERS/ORG = "selge" "kjøpe" "eie" "besitte"  ;
LIST KH#HJ-VERB/ADV = "være" "ville" "skulle" "måtte" "kunne" "ha" "få" "burde" "bli" adv  ;
LIST KH#HOLDNING-PERS/ORG = "utålmodig" "utilfreds" "uheldig" "tålmodig" "tilfreds" "stolt" "redd" "kritisk" "hensynsløs" "hensynsfull" "heldig" "flink" "flau" "enig" "dårlig"  ;
LIST KH#IKKE-@SUBJ/@OBJ/@I-OBJ = @fv @iv @s-pred @o-pred @adv @adv> @<adv @app @tittel @det> @<det @n> @<n @<p-utfyll @interj @adj> @kon @loes-np @<sbu @<sbu-rel @s-gr  ;
LIST KH#PRON-REFL = (prn refl)  ;
LIST KH#PROP-MASK/FEM = (n m prop) (n f prop)  ;
LIST KH#SINNSTILSTAND-PERSON = "utslitt" "usikker" "sur" "sliten" "sjalu" "sint" "sikker" "opplagt" "livlig" "glad" "blid"  ;
LIST KH#SITATVERB-PERS/ORG = "uttrykke" "understreke" "tro" "tilføye" "takke" "svare" "spørre" "si" "si" "replisere" "påpeke" "presisere" "presisere" "poengtere" "love" "kvittere" "konstatere" "kommentere" "innrømme" "innrømme" "håpe" "hevde" "gjenta" "fremholde" "framholde" "fortsette" "fortelle" "forsikre" "formulere" "forklare" "filosofere" "fastslå" "erkjenne" "bekjenne" "be" "avvise" "avslutte" "advare"  ;
LIST KH#SITATVERB-PERSON = "utbryte" "tenke" "sukke" "stønne" "snakke" "smile" "rope" "nikke" "mumle" "le" "kjefte" "hyle" "hviske" "humre" "glise" "gaule" "flire"  ;
LIST KH#SPISEVERB-PERSON = "spise" "mumse" "knaske" "gumle" "fortære" "ete"  ;
LIST KH#SUBST-FEM-PROP = (n f prop)  ;
LIST KH#SUBST-MASK-PROP = (n m prop)  ;
LIST KH#TILSTAND-PERS = "syk" "skjeggete" "seende" "rødmende" "levende" "hørende" "gravid" "frisk" "døv" "døende" "død" "blind" "blek" "barbert"  ;
LIST KH#TRANS-MED-NOM-U-DITRANS = tr1 tr4 tr5 tr6 tr7 tr8 tr9 tr10 
 ;
LIST klamme-trans = tr10 tr11 tr14 tr16 tr17 tr18 tr19 tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9  ;
LIST klokkeslett = "1" (det qnt pl) ("én" det qnt nt)  ;
LIST kolon = ("$:" clb)  ;
LIST komma = "$,"  ;
LIST komma-interj = "$," interj 

 ;
LIST komma/ellipse/kolon/semi = <komma> <ellipse> <kolon> <semi>  ;
LIST komma/ellipse/kolon/semi/cnj = <komma> <ellipse> <kolon> <semi> cnj  ;
LIST komma/ellipse/kolon/semi/cnj/adv = <komma> <ellipse> <kolon> <semi> cnj adv <adv>  ;
LIST komma/cnj = "$," cnj  ;
LIST komma/cnj/anf = <komma> cnj <anf>  ;
LIST komma/cnj/clb = <komma> cnj clb  ;
LIST komma/cnj/strek = "$," <strek> cnj  ;
LIST komma/koord-cnj = <komma> ("men" cnj) ("og" cnj) ("samt" cnj) ("eller" cnj)  ;
LIST komma/parentes-beg = <komma> <parentes-beg>  ;
LIST komma/setn-slutt = "$," <<<  ;
LIST komma/strek = "$," <strek>  ;
LIST komma/strek/parentes-beg = <komma> <strek> <parentes-beg>  ;
LIST comp = comp  ;
LIST comp/%saa% = comp ("så" adv)  ;
LIST cnj = cnj  ;
LIST cnj-<adv> = (cnj <adv>)  ;
LIST cnj/%bare% = "bare" cnj  ;
LIST cnj/prn = cnj (prn pers)  ;
LIST kop = "være" "virke" "synes" "hete" "bli" ("kalle" pass)  ;
LIST kop-fin = ("være" pres) ("være" pret) ("bli" pres) ("bli" pret) ("hete" pres) ("hete" pret) ("synes" pres) ("synes" pret) ("virke" pres) ("virke" pret) ("kalle" pres pass) ("kalle" pret pass)  ;
LIST kop-fv = ("være" pres) ("bli" pres) ("hete" pres) ("synes" pres) ("virke" pres) ("kalle" pres pass) ("være" pret) ("bli" pret) ("hete" pret) ("synes" pret) ("virke" pret) ("kalle" pret pass)  ;
LIST kop-inf = ("være" inf) ("bli" inf) ("hete" inf) ("synes" inf) ("virke" inf) ("kalle" inf pass)  ;
LIST kop-u-%synes% = "være" "virke" "hete" "bli" ("kalle" pass)  ;
LIST qnt = qnt  ;
LIST qnt-med-flere = "mange" "halv" "flere" (det qnt) ("adskillig" pl)  ;
LIST qnt/sp = qnt sp  ;
LIST M#%ANDRE% = ("annen" det pl)  ;
LIST M#%DET% = "det"  ;
LIST M#%ELLER% = ("eller" cnj)  ;
LIST M#%ET% = ("en" det qnt nt sg)  ;
LIST M#%MYE/LITE% = "mye" "lite"  ;
LIST M#%NOE% = ("noen" nt)  ;
LIST M#ADJ = adj  ;
LIST M#ADV = adv  ;
LIST M#BE-ENT-ADJ-NR2DET/KOMP-BE-SUP-ADJ/ORDENSTALL = "samme" "eneste" <ordenstall> (adj def sg) (adj comp) (adj sup def) (adj <pres-part>) ("hver" det qnt pl) ("neste" det) ("annen" dem pl) ("slik" dem pl) ("sånn" dem pl) ("sådan" dem pl) ("egen" forst pl) ("eigen" forst pl) (adj comp)  ;
LIST M#BE-FL-SUBST = (n pl def) (adj comp) (adj sup be)  ;
LIST M#FEM = f  ;
LIST M#IKKE-ADJ = adv vblex pr prn sbu inf-merke n interj det <ellipse> <kolon> <semi> (cnj clb) (<komma> clb)  ;
LIST M#IKKE-ADJ-SUBST = adv vblex pr prn sbu cnj inf-merke interj det >>>  ;
LIST M#IKKE-ADV = vblex pr prn sbu cnj inf-merke interj n det (adj m) (adj f) (adj mf) (adj pl) (adj <pres-part>) <komma> <ellipse>  ;
LIST M#IKKE-ADV-ADJ = vblex pr prn sbu inf-merke n interj det <ellipse> <kolon> <semi> (cnj clb) (<komma> clb)  ;
LIST M#IKKE-ADV-ADJ-DET = vblex pr prn sbu inf-merke n interj <ellipse> <kolon> <semi> (cnj clb) (<komma> clb) 

 ;
LIST M#IKKE-SUBST = vblex pr prn sbu cnj inf-merke det interj adj adv <komma> <strek>  ;
LIST M#IKKE-VERB = pr adj adv prn sbu inf-merke n interj det cnj  ;
LIST M#KOMMA = <komma>  ;
LIST M#KOMMA/KONJ = <komma> cnj  ;
LIST M#MASK = m  ;
LIST M#SBU = sbu 
 ;
LIST m-hj-vblex = ("få" vblex) ("skulle" vblex) ("kunne" vblex) ("ville" vblex) ("måtte" vblex) ("burde" vblex)  ;
LIST m-hj-vblex-fv = ("få" pres) ("skulle" pres) ("kunne" pres) ("ville" pres) ("måtte" pres) ("burde" pres) ("skulle" pret) ("kunne" pret) ("ville" pret) ("måtte" pret) ("burde" pret) ("få" pret)  ;
LIST m-hj-vblex-m/inf = "ville" "skulle" "måtte" "kunne" "burde"  ;
LIST m-hj-vblex-perfpart = ("skulle" perf-part) ("kunne" perf-part) ("ville" perf-part) ("måtte" perf-part) ("burde" perf-part) ("få" perf-part)  ;
LIST m-hj-vblex-pret = ("skulle" pret) ("kunne" pret) ("ville" pret) ("måtte" pret) ("burde" pret) ("få" pret)  ;
LIST maalsubst = "tonnkilometer" "snes" "sjømil" "sekundmeter" "prosent" "nanometer" "millimeter" "milliliter" "milligram" "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hektoliter" "hektogram" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "centimeter" "centiliter" "centigram" ("gang" pl)  ;
LIST maaned = "september" "oktober" "november" "mars" "mai" "juni" "juli" "januar" "februar" "desember" "august" "april"  ;
LIST maaned/hoeytid/aarstid = "vinter" "sommer" "september" "påske" "pinse" "oktober" "november" "mars" "mai" "juni" "juli" "jul" "januar" "høst" "februar" "desember" "august" "april" ("vår" n)  ;
LIST maaned/hoeytid/aarstid/tidssubst = "vinter" "sommer" "september" "påske" "pinse" "oktober" "november" "mars" "mai" "juni" "juli" "jul" "januar" "høst" "februar" "desember" "august" "april" ("vår" n) ("tid" sg def) ("tidsrom" sg be) ("periode" sg be)  ;
LIST mange-faa-pos-komp/enkelt-fl = ("mange" pos) ("mange" comp) ("få" pos) ("få" comp) ("enkelt" pl)  ;
LIST mange/faa/lang/lenge = "mange" "lenge" "lang" "få"  ;
LIST m = m mf (adj def)  ;
LIST m-adj-det = (adj m) (adj mf) (adj def) (adj <pres-part>) (det m)  ;
LIST m-be = (m def)  ;
LIST m-det = (det m)  ;
LIST m-ent = (m sg) (mf sg) (adj def) (m uboey) (n prop)  ;
LIST m-ent-ub = (m sg ind) (m uboey) (n prop) (m def gen)  ;
LIST m-ub = (m ind)  ;
LIST m-uboey-fork-subst = (n m uboey) (fork n m)  ;
LIST mf = m f mf (adj def) (adj <pres-part>)  ;
LIST mf-ent = (f sg) (m sg) (mf sg) (adj def sg)  ;
LIST mest-sanns-adj-istf-subst = "ville" "venstre" "stille" "snille" "myke" "mjuke" "klare" "høyre" "høgre" "flott"  ;
LIST mest-sanns-subst-istf-adj = "året" "skyld" "lo" "hull" "faren" ("skygg" def) ("folke" <perf-part>) ("live" <perf-part>) ("kute" adj <perf-part>)  ;
LIST mest-sanns-vblex-istf-subst = "temmer" "tapper" "suger" "strever" "strekker" "stiller" "stikker" "slukker" "koker" "hogger" "binder"  ;
LIST monotrans = tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr11 tr14 rl1 rl4 rl5 pr4 pa1 pa2 pa3 a6 a7 a8 a9  ;
LIST monotrans-u11 = tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr14 rl1 rl4 rl5 pr4 pa1 pa2 pa3 a6 a7 a8 a9  ;
LIST monotrans-u11/s-pred = tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr14 rl1 rl4 rl5 pr4 pa1 pa2 pa3 a6 a7 a8 a9 pr1 pr2  ;
LIST monotrans/s-pred = tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr11 rl1 rl4 rl5 pr4 pa1 pa2 pa3 a6 a7 a8 a9 pr1 pr2  ;
LIST neg-adv = "neppe" "ikke" "aldri"  ;
LIST nt = nt  ;
LIST nt-adj-det = (adj nt) (det nt) (adj def) (adj <pres-part>)  ;
LIST nt-be = (nt def)  ;
LIST nt-det = (det nt)  ;
LIST nt-ent = (nt sg) (adj bu) (nt uboey) (n prop)  ;
LIST nt-ent-adj = (adj nt sg) (adj def) (adj <pres-part>)  ;
LIST nt-ent-ub = (nt sg ind)  ;
LIST nt-ub = (nt ind)  ;
LIST nt-uboey-fork-subst = (n nt uboey) (fork n nt)  ;
LIST nom = (n) (adj) (prn) (det)  ;
LIST nom-ent = (n sg) ("all" sg) ("De" nom) ("han" nom) ("jeg" nom) ("hun" nom) ("du" nom) ("den" prn) ("denne" prn) ("det" prn) ("dette" prn) ("man" prn)  ;
LIST nom-f-ent = (n f sg) ("all" det f) ("jeg" nom) ("hun" nom) ("du" nom) ("den" prn) ("denne" prn)  ;
LIST nom-fl = "vi" "disse" "dere" "de" (n pl) ("all" det pl)  ;
LIST nom-m-ent = (n m sg) ("all" det m) ("De" nom) ("han" nom) ("jeg" nom) ("hun" nom) ("du" nom) ("man" prn) ("den" prn) ("denne" prn)  ;
LIST nom-nt-ent = (n nt sg) ("all" det nt) ("det" prn) ("dette" prn)  ;
LIST nom-sbu = n adj prn det sbu  ;
LIST nom-uten-det = (n) (adj) (prn)  ;
LIST nom-uten-prn = n adj det  ;
LIST nom/adv = n adj det prn adv  ;
LIST nom/akk-prn = "jeg" "han" "du" "dere"  ;
LIST nom/at = ("at" sbu) (n) (adj) (prn) (det)  ;
LIST nom/pr = (pr) (n) (adj) (prn) (det)  ;
LIST nom/som = ("som" sbu) (n) (adj) (prn) (det)  ;
LIST nominativ = nom  ;
LIST npu-vblex = "trenge" "orke" "klare" "gidde" "behøve"  ;
LIST nr2-det = "sånn" "sådan" "slik" "samme" "noe" "neste" "hver" "halvannen" "forrige" "eneste" "eigen" "egen" "annen" (det qnt pl) ("ene" det)  ;
LIST nr2-det-f-be = ("noe" f) ("ene" def) ("eneste" be) ("samme" be) ("forrige" be) ("neste" be) ("annen" be) ("egen" be) ("eigen" be)  ;
LIST nr2-det-f-ub = ("noe" f) ("annen" f ind) ("eneste" def) ("slik" f) ("sånn" f) ("sådan" f) ("egen" f ub) ("egen" mf ub) ("eigen" f ub) ("halvannen" f) ("hver" det f)  ;
LIST nr2-det-fl = (det qnt pl) ("eneste" def) ("samme" be) ("forrige" be) ("neste" be) ("annen" pl) ("slik" pl) ("sånn" pl) ("sådan" pl) ("egen" pl) ("eigen" pl)  ;
LIST nr2-det-m-be = ("noe" m) ("ene" def) ("eneste" be) ("samme" be) ("forrige" be) ("neste" be) ("annen" be) ("egen" be) ("eigen" be)  ;
LIST nr2-det-m-ub = ("noe" m) ("annen" m ind) ("eneste" def) ("slik" m) ("sånn" m) ("sådan" m) ("egen" mf ub) ("eigen" m ub) ("halvannen" m) ("hver" det m)  ;
LIST nr2-det-nt-be = ("noe" nt) ("ene" def) ("eneste" be) ("samme" be) ("forrige" be) ("neste" be) ("annen" be) ("egen" nt be) ("eigen" nt be)  ;
LIST nr2-det-nt-ub = ("noe" nt) ("annen" nt ind) ("eneste" def) ("slik" nt) ("sånn" nt) ("sådan" nt) ("egen" nt ub) ("eigen" nt ub) ("halvannen" nt) ("hver" det nt)  ;
LIST nr2-det-u-fl = "sånn" "sådan" "slik" "samme" "neste" "hver" "halvannen" "forrige" "eneste" "eigen" "egen" "annen" ("ene" det)  ;
LIST nr2det = "sånn" "sådan" "slik" "samme" "neste" "hver" "halvannen" "eneste" "ene" "eigen" "egen" "annen" (det qnt pl)  ;
LIST objpred-prn-vblex = "ønske" "spise" "snakke" "si" "se" "oppleve" "male" "lage" "kjenne" "kalle" "høre" "holde" "gjøre" "føle" "drikke"  ;
LIST objpred-vblex = "ønske" "male" "lage" "kalle" "holde" "gjøre"  ;
LIST ord-%andre%-ent/fl-subst = "halvår" "forsøk" "avsnitt"  ;
LIST orden = ("ene" det qnt) <ordenstall>  ;
LIST orden-pos = ("ene" det qnt) (<ordenstall> pos)  ;
LIST ordenstall = <ordenstall>  ;
LIST org-type = "selskap" "organisasjon" "lag" "klubb" "institusjon" "firma" "bedrift" "bank" "avdeling" <*organisasjon> <*selskap>  ;
LIST organisasjon = <org> <*råd> <*skole> <*lag> <*tilsyn> <*parti> <*aksjon> <*departement> <*forbund> <*forening> <*institutt> <*organisasjon> <*parti> <*råd>  ;
LIST overskrift = <overskrift>  ;
LIST p-hj-vblex = "være" "ha" "få" "bli"  ;
LIST p-hj-vblex-fv = ("bli" pres) ("ha" pres) ("bli" pret) ("ha" pret)  ;
LIST p-hj-vblex/pr = "være" "ha" "bli" pr  ;
LIST paa = "på"  ;
LIST parentes = <parentes-beg> <parentes-slutt>  ;
LIST parentes-beg = <parentes-beg>  ;
LIST parentes-beg/strek = <parentes-beg> <strek>  ;
LIST parentes-slutt = <parentes-slutt>  ;
LIST parentes-slutt/strek = <parentes-slutt> <strek>  ;
LIST pass = (vblex pass)  ;
LIST passiv = pass  ;
LIST perf-gen = (adj <perf-part> gen) (perf-part pass)  ;
LIST perf-part = (vblex perf-part)  ;
LIST perf-part/<perf-part> = perf-part <perf-part>  ;
LIST perf-part/inf = (vblex perf-part) (vblex inf)  ;
LIST periode-beg = >>> 

 ;
LIST periode-beg/clb = >>> clb  ;
LIST periode-beg/clb-cnj = >>> (cnj clb)  ;
LIST periode-beg/clb-cnj/fin-vblex = >>> pres pret (clb cnj)  ;
LIST periode-beg/clb-cnj/sbu/sp/infmerke = >>> sbu sp inf-merke (clb cnj)  ;
LIST periode-beg/clb-cnj/vblex = >>> vblex (clb cnj)  ;
LIST periode-beg/clb/strek = >>> clb <strek>  ;
LIST periode-beg/komma/cnj/strek = >>> <komma> cnj <strek>  ;
LIST periode-beg/cnj = >>> (cnj)  ;
LIST periode-beg/cnj-clb = >>> (clb cnj)  ;
LIST periode-beg/cnj-clb/komma-clb = >>> (clb cnj) (clb <komma>)  ;
LIST periode-beg/parentes-beg = >>> <parentes-beg>  ;
LIST periode-beg/sbu = >>> sbu  ;
LIST periode-beg/tegnsetting = >>> <komma> <ellipse> <kolon> <semi> <strek>  ;
LIST periode-gr/clb = >>> <<< clb  ;
LIST periode-slutt = <<<  ;
LIST periode-slutt/clb = <<< clb  ;
LIST periode-slutt/clb-cnj = <<< (clb cnj)  ;
LIST periode-slutt/clb-cnj/clb-tegnsetting = <<< (clb cnj) (clb <komma>) (clb <ellipse>) (clb <kolon>) (clb <semi>) (clb <strek>)  ;
LIST periode-slutt/cnj-clb = <<< (clb cnj)  ;
LIST periode-slutt/cnj-clb/komma-clb = <<< (clb cnj) (clb <komma>)  ;
LIST periode-slutt/parentes-slutt = <<< <parentes-slutt>  ;
LIST person = <person> <*son> <*sen>  ;
LIST person-suffiks = <*son> <*sen>  ;
LIST person-u-suffiks = <person>  ;
LIST pos-be-ent = (adj pos def sg)  ;
LIST pos-be-fl = (adj pos pl)  ;
LIST pos-ub-ent = (adj posindsg)  ;
LIST pos-ub-ent-mf = (adj pos mfindsg)  ;
LIST pos-ub-ent-nt = (adj pos ntindsg)  ;
LIST pos-ub-fl = (adj pos pl)  ;
LIST poss = pos  ;
LIST poss-det = (det pos)  ;
LIST poss-det-nt = (det pos nt)  ;
LIST poss/gen = pos gen  ;
LIST poss/gen/hvilken = "hvilken" pos gen  ;
LIST poss/selv-forst = pos ("selv" forst) ("sjøl" forst) ("sjæl" forst)  ;
LIST predik3/5-7 = pr3 pr5 pr6 pr7  ;
LIST premod-subst = "tonnkilometer" "tallerken" "snes" "slurk" "sjømil" "sekundmeter" "prosent" "porsjon" "neve" "nanometer" "millimeter" "milliliter" "milligram" "mil" "mikrometer" "meter" "mengde" "liter" "lass" "kvartmil" "kvartliter" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kopp" "klunk" "kilometer" "kilogram" "kilo" "håndfull" "hektoliter" "hektogram" "handfull" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "glass" "fåtall" "dusin" "desimeter" "desiliter" "desigram" "del" "dekaliter" "centimeter" "centiliter" "centigram" "bit" "anelse" ("gang" pl)  ;
LIST premod-subst/prop = "tonnkilometer" "tallerken" "snes" "slurk" "sjømil" "sekundmeter" "prosent" "porsjon" "neve" "nanometer" "millimeter" "milliliter" "milligram" "mil" "mikrometer" "meter" "mengde" "liter" "lass" "kvartmil" "kvartliter" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kopp" "klunk" "kilometer" "kilogram" "kilo" "håndfull" "hektoliter" "hektogram" "handfull" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "glass" "fåtall" "dusin" "desimeter" "desiliter" "desigram" "del" "dekaliter" "centimeter" "centiliter" "centigram" "bit" "anelse" prop ("gang" pl)  ;
LIST pr = pr  ;
LIST pr-intrans = "vekke" "utenfra" "underveis" "inne" "imot" "iblant" "iblandt" "hjemme" "hit" "herifra" "herfra" "her" "heime" "frem" "fram" "etterpå" "dit" "derifra" "derfra" "der"  ;
LIST pr-intrans/adv = "vekke" "utenfra" "underveis" "inne" "iblant" "iblandt" "hjemme" "hit" "herifra" "herfra" "her" "heime" "frem" "fram" "etterpå" "dit" "derifra" "derfra" "der" adv 

 ;
LIST pr-tall = "siden" pr (det qnt)  ;
LIST pr/%sammen% = "sammen" pr  ;
LIST pr/%som% = "som" pr  ;
LIST pr/@adv = @adv pr  ;
LIST pr/adv = "siden" pr adv (adj <adv>) (adj ntindsg)  ;
LIST pr/adv-u-adj = "siden" pr adv <adv>  ;
LIST pr/komma = pr ("$," <komma>)  ;
LIST pr/prn/%som% = "som" pr prn  ;
LIST pr/sbu = pr sbu  ;
LIST pr/vblex = "siden" pr (vblex pres) (vblex pret) (vblex perf-part)  ;
LIST pres = pres  ;
LIST pres-part = (adj <pres-part>)  ;
LIST pres/pret = (vblex pres) (vblex pret)  ;
LIST pres/pret/advblex = adv <adv> (vblex pres) (vblex pret) (adj nt ind) ("noen" det nt)  ;
LIST present-ub = "et" "en" "ei" (n ind)  ;
LIST present-vblex = "være" "stå" "ligge" "komme" "henge"  ;
LIST pret = pret  ;
LIST prn = prn  ;
LIST prn-akk = "seg" (prn pers akk)  ;
LIST prn-akk-fl = ("vi" akk) ("de" akk) ("dere" akk) ("disse" prn)  ;
LIST prn-akk-mf = ("De" akk) ("han" akk) ("jeg" akk) ("hun" akk) ("du" akk) ("den" prn) ("denne" prn)  ;
LIST prn-akk-mfn/fl = "seg" ("De" akk) ("han" akk) ("jeg" akk) ("hun" akk) ("du" akk) ("den" prn) ("denne" prn) ("vi" akk) ("de" akk) ("dere" akk) ("de" akk) ("disse" prn) ("det" prn) ("dette" prn)  ;
LIST prn-nt = ("det" prn) ("dette" prn)  ;
LIST prn-nom = (prn pers nom)  ;
LIST prn-nom/%seg% = (prn pers nom)  ;
LIST prn-pers = (prn pers)  ;
LIST prn-r = "seg" "hverandre" "hinannen"  ;
LIST prn/be-subst/prop = prn (n def) prop  ;
LIST prn/subst = prn n  ;
LIST prn/subst/det = prn n det  ;
LIST prop = prop 

 ;
LIST prop-det-ent = ("Det" n prop) ("Den" n prop) 
 ;
LIST prop/ub-eint-subst = prop (n sg ind) (n uboey)  ;
LIST prop/ub-ent-subst = prop (n sg ind) (n uboey)  ;
LIST prop/ub-ent-subst/%ganger%/%klokka% = prop (n sg ind) (n uboey) ("gang" pl ub) ("klokke" sg def)  ;
LIST refl = rl1 rl2 rl3 rl4 rl5 rl6 rl7 rl8 rl9 rl10 rl11 rl12 rl13 rl14 rl15 rl16 rl17 rl18 rl19 rl20  ;
LIST rel-prn = "som" 
 ;
LIST res/akk = res akk  ;
LIST res/refl = res refl  ;
LIST retning = "øst" "vest" "syd" "nord" "aust"  ;
LIST romertall = <romertall>  ;
LIST S#%BARE% = "bare"  ;
LIST S#%DET% = "det"  ;
LIST S#%DET/DETTE% = "dette" "det"  ;
LIST S#%ELLER% = ("eller" cnj)  ;
LIST S#%FINNE%-VERB = ("finne" vblex)  ;
LIST S#%HALV/KVART%-MASK/FEM = ("halv" adj mfindsg) ("kvart" n mfindsg)  ;
LIST S#%MYE/LITE% = "mye" "lite" 

 ;
LIST S#%SEG% = "seg"  ;
LIST S#%VAERE% = ("være" <auxp>)  ;
LIST S#%VAERE/BLI% = "bli" ("være" <auxp>)  ;
LIST S#ADJ = adj  ;
LIST S#IKKE-ADJ = adv vblex pr prn sbu inf-merke n interj det (clb cnj) <anf> <ellipse>  ;
LIST S#IKKE-PREP = adj adv vblex prn sbu inf-merke n interj det cnj <anf> <komma> <ellipse> <kolon> <parentes-beg> <parentes-slutt> <semi> <strek>  ;
LIST S#IKKE-SUBST = "$-" "$," vblex pr prn sbu cnj inf-merke det interj adj adv  ;
LIST S#IKKE-VERB = pr adj adv prn sbu inf-merke n interj det cnj  ;
LIST S#KOMMA = <komma>  ;
LIST S#KOMMA/KONJ = <komma> cnj  ;
LIST S#PERIODE-BEG/CLB-KONJ = >>> (clb cnj)  ;
LIST S#SBU = sbu  ;
LIST S#SETN-GR = "hvorfor" "hvordan" "hvor" "hva" sbu >>> <<< clb  ;
LIST S#SETN/INFKONSTR-GR = "hvorfor" "hvordan" "hvor" "hva" inf-merke sbu >>> <<< clb  ;
LIST S#TEGNSETTING = <komma> <ellipse> <kolon> <semi> <strek>  ;
LIST S#TEGNSETTING/KONJ = <komma> <ellipse> <kolon> <semi> <strek> cnj 


 ;
LIST s-vblex = <s-vblex>  ;
LIST samme/annen/egen = ("samme" det) ("annen" det) ("egen" det) ("eigen" det)  ;
LIST samset = samset  ;
LIST sanns-adv = "vel" "så" "selv" "meget" "like" "hvor" "for" "enda"  ;
LIST sansevblex = "se" "merke" "la" "kjenne" "høre" "føle" "be"  ;
LIST sbu = "hvor" "hva" sbu  ;
LIST sbu-ren = sbu  ;
LIST sbu/infmerke = sbu inf-merke  ;
LIST sbu/cnj = sbu cnj  ;
LIST sbu/sp = "hvorfor" "hvordan" "hvor" sbu  ;
LIST selv = "sjøl" "sjæl" "selv"  ;
LIST selv-adv = ("selv" adv) ("sjøl" adv) ("sjæl" adv)  ;
LIST selv-forst = ("selv" forst) ("sjøl" forst) ("sjæl" forst)  ;
LIST setn-gr = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" "$--" "$-" sbu >>> <<< ("$:" clb) ("$\\" clb) (clb cnj) (clb <komma>)  ;
LIST setn-gr-u-komma = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" "$--" "$-" sbu >>> <<< ("$:" clb) ("$\\" clb) (clb cnj)  ;
LIST setn-gr-u-sbu = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" "$--" "$-" >>> <<< ("$:" clb) ("$\\" clb) (clb cnj) (clb <komma>)  ;
LIST setn-gr-u-strek = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" sbu @sbu >>> <<< ("$:" clb) ("$\\" clb) (clb cnj) (clb <komma>)  ;
LIST setn-gr-infmerke = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" "$--" "$-" inf-merke sbu @sbu >>> <<< ("$:" clb) ("$\\" clb) (clb cnj) (clb <komma>)  ;
LIST setn-gr/cnj = ("hvorfor" "hvordan" "hvor" "hva" sbu >>> <<< clb cnj  ) ;
LIST setn-gr/parentes-beg = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" "$--" "$-" <parentes-beg> sbu @sbu >>> <<< ("$:" clb) ("$\\" clb) (clb cnj) (clb <komma>)  ;
LIST setn-gr/pr = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" "$--" "$-" pr sbu @sbu >>> <<< ("$:" clb) ("$\\" clb) (clb cnj) (clb <komma>)  ;
LIST setn-gr/vblex = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" "$--" "$-" vblex sbu @sbu >>> <<< ("$:" clb) ("$\\" clb) (clb cnj) (clb <komma>)  ;
LIST setn-slutt/fin-vblex = <<< clb (vblex pres) (vblex pret)  ;
LIST setn/infkonstr-gr = "hvorfor" "hvordan" "hvor" "hva" inf-merke sbu >>> <<< ("$-" clb) ("$\\" clb) (clb cnj) (clb <komma>) 

 ;
LIST setn/infkonstr-gr/vblex = ("hvorfor" "hvordan" "hvor" "hva" inf-merke sbu >>> <<< clb vblex  );
LIST setningsadv = "øyensynlig" "òg" "visstnok" "visselig" "ventelig" "vanligvis" "unektelig" "uheldigvis" "tydeligvis" "trolig" "tilfeldigvis" "sogar" "sluttelig" "simpelthen" "sannsynligvis" "sannelig" "saktens" "rimeligvis" "riktignok" "også" "ofte" "nødvendigvis" "nesten" "neppe" "nemlig" "naturligvis" "muligvis" "muligens" "lykkeligvis" "liksom" "klokelig" "kanskje" "jo" "jamvel" "jammen" "især" "imidlertid" "ikke" "heldigvis" "gudskjelov" "gledeligvis" "følgelig" "fortrinnsvis" "forresten" "fornuftigvis" "formodentlig" "formelig" "forhåpentligvis" "ellers" "eksempelvis" "dog" "dessverre" "dessuten" "beklageligvis" "bare" "antakelig" "antagelig" "altså" "alltid" "aldri" ("kan" adv) ("hende" adv) ("nok" adv) ("nå" adv) ("så" adv) ("da" adv)  ;
LIST sier-vblex = "tilføye" "tenke" "svare" "sukke" "spørre" "skrive" "si" "rope" "mumle" "mene" "hyle" "hviske" "fortsette" "fortelle" "anta" "advare"  ;
LIST sitatvblex = "utbryte" "understreke" "true" "tro" "tilføye" "tenke" "svare" "sukke" "smile" "skrive" "si" "rope" "replisere" "påpeke" "presisere" "presisere" "opplyse" "oppfordre" "mumle" "mene" "love" "le" "konkludere" "hyle" "hviske" "hevde" "glise" "gjenta" "gaule" "fremholde" "framholde" "fortsette" "fortelle" "forklare" "flire" "fastslå" "erkjenne" "bekjenne" "begynne" "be" "avslutte" "anta" "advare"  ;
LIST skipsmengde = "trosse" "tofte" "skip" "seil" "ror" "rekke" "ombord" "matros" "lugar" "livbåt" "lekter" "forut" "forut" "bøye" "båt" "baug" "babord"  ;
LIST slags/for-pr/%annet%/%mer% = "slags" ("for" pr) ("annen" nt) ("mye" comp)  ;
LIST slik-adv = ("slik" adv)  ;
LIST som-sbu = ("som" sbu)  ;
LIST som/komma/og = "$," ("og" cnj) ("som" sbu)  ;
LIST sp = sp  ;
LIST spoerreadv = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" 

 ;
LIST spoerreadv/sp = "hvorledes" "hvorfor" "hvordan" "hvor" "hva" sp  ;
LIST sportsorg = "lag" "klubb" <*klubb> <*lag>  ;
LIST spraak = "tysk" "svensk" "spansk" "portugisisk" "nynorsk" "norsk" "keltisk" "italiensk" "fransk" "finsk" "engelsk" "dansk" "bosnisk" "amerikansk"  ;
LIST sted = <sted>  ;
LIST sted-pr = "i"  ;
LIST sted/pers-suffiks = <*dal> <*seter> <*ås> <*berg> <*øy> <*nes> <*vik>  ;
LIST strek = <strek>  ;
LIST strek/parentes = <strek> <parentes-beg> <parentes-slutt>  ;
LIST strek/parentes-beg/anf = <strek> <parentes-beg> <anf>  ;
LIST subst = n  ;
LIST subst-appell = (n appell)  ;
LIST subst-ent/komma/cnj = (n sg) ("$,") cnj  ;
LIST subst-f = (n f)  ;
LIST subst-fl/komma/cnj = (n pl) ("$,") cnj  ;
LIST subst-gen = (n gen)  ;
LIST subst-m = (n m)  ;
LIST subst-m-fl = (n m pl)  ;
LIST subst-mf = (n m) (n f)  ;
LIST subst-mf-ent = (n m sg) (n f sg)  ;
LIST subst-mf-ent-ub = (n m sg ind) (n f sg ub)  ;
LIST subst-nt = (n nt)  ;
LIST subst-nt-ent = (n nt sg)  ;
LIST subst-prn/akk = n (prn pers akk)  ;
LIST subst-prop = (n prop)  ;
LIST subst-ub = (n ind)  ;
LIST subst-uboey = (n uboey)  ;
LIST subst/%det%/%dette% = "dette" "det" n  ;
LIST subst/adj = n adj  ;
LIST subst/adj-ent-be = (n sg def) (adj def sg) (adj <pres-part>)  ;
LIST subst/adj-fl = (n pl) (adj pl) (adj <pres-part>)  ;
LIST subst/adj-gen = (adj gen) (n gen)  ;
LIST subst/adj-pos = n (adj pos)  ;
LIST subst/adj/adv = n adj adv  ;
LIST subst/adj/det = n adj det  ;
LIST subst/adj/det-qnt-%av% = n adj ("av" pr) (det qnt)  ;
LIST subst/adj/nr2-det = "sånn" "sådan" "slik" "samme" "noe" "neste" "hver" "halvannen" "forrige" "eneste" "eigen" "egen" "annen" n adj (det qnt pl) ("ene" det)  ;
LIST subst/adj/prn/det = n adj prn det  ;
LIST subst/adj/prn/det/adv = adv n adj prn det  ;
LIST subst/adj/prn/det/cnj = n adj prn det cnj  ;
LIST subst/be-komp-adj = n (adj def) (adj comp) (adj <pres-part>)  ;
LIST subst/prn = n prn  ;
LIST subst/prn/%all% = n prn ("all" det qnt)  ;
LIST subst/prn/%all%/%mang%/%mange% = n prn ("all" det qnt) ("mang" det) ("mange" det)  ;
LIST subst/prn/fl-adj/%all%/%mang%/%mange% = n prn (adj pl) (adj <pres-part>) ("all" det qnt) ("mang" det) ("mange" adj)  ;
LIST subst/prn/pr = n prn pr  ;
LIST subst/sp-prn = n (prn sp)  ;
LIST subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) ("gang" pl) n  ;
LIST subst/ub-adj = n (adj ind) (adj <pres-part>)  ;
LIST sup = sup  ;
LIST tall = "1" (det qnt pl) ("en" det qnt) ("én" det qnt)  ;
LIST tall-fl = (det qnt pl)  ;
LIST tall-subst = "tusen" "trillion" "titusen" "mrd." "million" "milliard" "mill." "kvadrillion" "hundre" "halvmillion" "billion" "billiard"  ;
LIST tall/tall-subst = "tusen" "trillion" "mrd." "million" "milliard" "mill." "kvadrillion" "hundre" "halvmillion" "billion" "billiard" "1" (det qnt pl) ("en" det qnt) ("én" det qnt)  ;
LIST tegnsetting = <komma> <ellipse> <kolon> <parentes-beg> <parentes-slutt> <semi> <strek>  ;
LIST tegnsetting/cnj = <komma> <ellipse> <kolon> <parentes-beg> <parentes-slutt> <semi> <strek> cnj  ;
LIST tegnsetting/parentes = <komma> <ellipse> <kolon> <semi> <strek> <parentes-beg> <parentes-slutt>  ;
LIST tegnsetting/parentes/cnj = <komma> <ellipse> <kolon> <semi> <strek> <parentes-beg> <parentes-slutt> cnj  ;
LIST tegnsetting/setn-gr = "hvorfor" "hvordan" "hvor" "hva" <komma> <ellipse> <semi> <strek> sbu >>> <<< (clb cnj)  ;
LIST tegnsetting/setn/infkonstr-gr = "hvorfor" "hvordan" "hvor" "hva" <komma> <ellipse> <semi> <strek> inf-merke sbu >>> <<< (clb cnj)  ;
LIST tidsadv = "tidlig" "sen" "sein" "nå" "lenge" "igjen" "før" "etterpå" "da" ("snar" ntindsg)  ;
LIST tidsadvsubst-nr1 = "torsdag" "tirsdag" "søndag" "september" "onsdag" "oktober" "november" "mars" "mandag" "mai" "lørdag" "juni" "juli" "januar" "fredag" "februar" "desember" "august" "april"  ;
LIST tidsadvsubst-nr2 = "natt" "måned" "morgen" "kveld" "formiddag" "ettermiddag"  ;
LIST tidssubst = "år" "uke" "time" "tiendelssekund" "tidelssekund" "sekund" "nanosekund" "måned" "minutt" "millisekund" "hundredelssekund" "halvår" "døgn" "dag"  ;
LIST tittel = <tittel> @tittel  ;
LIST tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus = tr1 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr14 d1 d2 d3 d4 d5 d6 d7 d8 d9 rl1 rl2 rl3 rl4 rl5 rl6 rl7 rl8 rl9 rl10 rl11 rl12 rl13 rl14 rl15 rl16 rl17 rl18 rl19 rl20 pr1 pr3 pr4 pr5 pr6 pr7 pr8 pr9 pr10 a2 a6 a7 a8 a9 a10 a11 a13 a14 k1 k2  ;
LIST trans-med-nom = tr1 tr4 tr5 tr6 tr7 tr8 tr9 tr10 d1 d2 d3 d4  ;
LIST trans-u11 = tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr14 rl1 rl4 rl5 pr4 pa1 pa2 pa3 a6 a7 a8 a9 d1 d2 d3 rl6 rl7 rl8  ;
LIST trans-u11-upresent = tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr14 rl1 rl4 rl5 pr4 pa1 pa2 pa3 a6 a7 a8 a9 d1 d2 d3 rl6 rl7 rl8  ;
LIST trans-u11-upresent-upredik = tr1 tr2 tr3 tr4 tr5 tr6 tr7 tr8 tr9 tr10 tr14 rl1 rl4 rl5 pa1 pa2 pa3 a6 a7 a8 a9 d1 d2 d3 rl6 rl7 rl8  ;
LIST trans12/til = tr12/til  ;
LIST trans2 = tr2 tr18  ;
LIST tullemengde = n  ;
LIST ind = ind ;
LIST ub-adj = (adj ind) (adj <pres-part>)  ;
LIST ub-adj/<adv> = (adj ind) (adj <pres-part>) <adv>  ;
LIST ub-adj/subst = (adj pos ind) (adj comp) (adj <pres-part>) n  ;
LIST ub-det = ("en" det) ("noen" det) ("ingen" det)  ;
LIST ub-det-fl = ("noen" det pl) ("ingen" det pl)  ;
LIST ub-ent = (ub sg) (ent ind)  ;
LIST ub-ent-f = (f sg ind)  ;
LIST ub-ent-f-adj = (adj findsg) (adj mfindsg) (adj <pres-part>)  ;
LIST ub-ent-f-adj-nr2det/komp-adj/ordenstall = "samme" "eneste" <ordenstall> (adj findsg) (adj mfindsg) (adj <pres-part>) ("hver" det qnt f sg) ("neste" det) ("annen" dem findsg) ("slik" dem f sg) ("sånn" dem f sg) ("sådan" dem f sg) ("egen" forst findsg) ("eigen" forst findsg) ("halvannen" qnt f) (adj comp)  ;
LIST ub-ent-f-adj/advblex = (adj findsg) (adj mfindsg) (adjindnt) (adj <pres-part>) adv <adv>  ;
LIST ub-ent-f-adj/komp = (adj findsg) (adj mfindsg) (adj <pres-part>) (adj comp)  ;
LIST ub-ent-f-adj/komp-adj = (adj findsg) (adj mfindsg) (adj comp) (adj <pres-part>)  ;
LIST ub-ent-f-adj/komp-be-sup-adj = (adj findsg) (adj mfindsg) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST ub-ent-f-adj/ub-ent-f-subst = (adj findsg) (adj <pres-part>) (n f sg ind)  ;
LIST ub-ent-f-subst = (n f sg ind)  ;
LIST ub-ent-f-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n f sg ind) (n f uboey) ("gang" pl)  ;
LIST ub-ent-f-subst/tall-subst/maalsubst/tidssubst/prop/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n f sg ind) (n f uboey) ("gang" pl) prop  ;
LIST ub-ent-m = (m sg ind)  ;
LIST ub-ent-m-adj = (adj mindsg) (adj mfindsg) (adj <pres-part>)  ;
LIST ub-ent-m-adj-nr2det/komp-adj/ordenstall = "samme" "eneste" <ordenstall> (adj mindsg) (adj mfindsg) (adj <pres-part>) ("hver" det qnt m sg) ("neste" det) ("annen" dem mindsg) ("slik" dem m sg) ("sånn" dem m sg) ("sådan" dem m sg) ("egen" forst mindsg) ("eigen" forst mindsg) ("halvannen" qnt m) (adj comp)  ;
LIST ub-ent-m-adj/advblex = (adj mindsg) (adj mfindsg) (adjindnt) adv <adv> (adj <pres-part>)  ;
LIST ub-ent-m-adj/komp = (adj mindsg) (adj mfindsg) (adj <pres-part>) (adj comp)  ;
LIST ub-ent-m-adj/komp-adj = (adj mindsg) (adj mfindsg) (adj comp) (adj <pres-part>)  ;
LIST ub-ent-m-adj/komp-be-sup-adj = (adj mindsg) (adj mfindsg) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST ub-ent-m-adj/ub-ent-m-subst = (adj mindsg) (adj mfindsg) (adj <pres-part>) (n m sg ind)  ;
LIST ub-ent-m-subst = (n m sg ind)  ;
LIST ub-ent-m-subst/tall-subst/maalsubst/tidssubst/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n m sg ind) (n m uboey) ("gang" pl)  ;
LIST ub-ent-m-subst/tall-subst/maalsubst/tidssubst/prop/gen-subst = "år" "uke" "tusen" "trillion" "tonnkilometer" "time" "tiendelssekund" "tidelssekund" "snes" "sjømil" "sekundmeter" "sekund" "prosent" "nanosekund" "nanometer" "måned" "mrd." "minutt" "millisekund" "million" "millimeter" "milliliter" "milligram" "milliard" "mill." "mil" "mikrometer" "meter" "liter" "kvartmil" "kvartliter" "kvadrillion" "kvadratmillimeter" "kvadratmeter" "kvadratkilometer" "kvadratdesimeter" "kvadratcentimeter" "kubikkmillimeter" "kubikkmeter" "kubikkdesimeter" "kubikkcentimeter" "kilometer" "kilogram" "kilo" "hundredelssekund" "hundre" "hektoliter" "hektogram" "halvår" "halvmillion" "halvmil" "halvmeter" "halvliter" "halvkilo" "gram" "døgn" "dusin" "desimeter" "desiliter" "desigram" "dekaliter" "dag" "centimeter" "centiliter" "centigram" "billion" "billiard" (n gen) (n m sg ind) (n m uboey) ("gang" pl) prop  ;
LIST ub-ent-mf-adj = (adj m ind sg) (adj f ind sg) (adj mf ind sg) (adj <pres-part>)  ;
LIST ub-ent-mf-det = ("én" det m sg) ("en" det m sg) ("noen" det m sg) ("ingen" det m sg) ("en" det f sg) ("noen" det f sg) ("ingen" det f sg)  ;
LIST ub-ent-mf-subst = (n m sg ind) (n f sg ub) (n m sgindgen) (n f sgindgen)  ;
#LIST ub-ent-mf-adj = (adj mf ind sg) (adj <pres-part>)  ;
LIST ub-ent-mf-adj-nr2det/komp-adj/ordenstall = "samme" "eneste" <ordenstall> (adj mfindsg) (adj <pres-part>) ("hver" det qnt m sg) ("neste" det) ("annen" dem mindsg) ("slik" dem m sg) ("sånn" dem m sg) ("sådan" dem m sg) ("egen" forst mindsg) ("eigen" forst mindsg) ("halvannen" qnt m) (adj comp)  ;
LIST ub-ent-mf-adj/komp-adj = (adj mfindsg) (adj comp) (adj <pres-part>)  ;
LIST ub-ent-mf-adj/komp-be-sup-adj = (adj mfindsg) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST ub-ent-mf-adj/ub-ent-m-subst = (adj mfindsg) (adj <pres-part>) (n m sg ind)  ;
LIST ub-ent-nt = (ntindsg)  ;
LIST ub-ent-nt-adj = (adj ntindsg) (adj <pres-part>)  ;
LIST ub-ent-nt-adj-nr2det/komp-adj/ordenstall = "samme" "eneste" <ordenstall> (adj ntindsg) (adj <pres-part>) ("hver" det qnt nt sg) ("neste" det) ("annen" dem ntindsg) ("slik" dem nt sg) ("sånn" dem nt sg) ("sådan" dem nt sg) ("egen" forst ntindsg) ("eigen" forst ntindsg) ("halvannen" qnt nt) (adj comp)  ;
LIST ub-ent-nt-adj/komp = (adj ntindsg) (adj comp) (adj <pres-part>)  ;
LIST ub-ent-nt-adj/komp-adj = (adj ntindsg) (adj comp) (adj <pres-part>)  ;
LIST ub-ent-nt-adj/komp-be-sup-adj = (adj ntindsg) (adj comp) (adj sup def) (adj <pres-part>)  ;
LIST ub-ent-nt-adj/ub-ent-nt-subst = (adj ntindsg) (adj <pres-part>) (n nt sg ind)  ;
LIST ub-ent-nt-subst = (n nt sg ind)  ;
LIST ub-ent-nt/komp = (ntindsg) comp  ;
LIST ub-ent-nt/komp/ub-sup = (ntindsg) (sup ind) comp  ;

# KBU: was a typo? (substindsg)
LIST ub-ent-subst = (n ind sg)  ;

LIST ub-f-det = ("en" det f) ("noen" det f) ("ingen" det f)  ;
LIST ub-fl-nt-subst = (n nt pl ind)  ;
LIST ub-fl-subst = (n pl ind) 
 ;
LIST ub-m-det = ("én" det m) ("en" det m) ("noen" det m) ("ingen" det m)  ;
LIST ub-mf-det = ("én" det m) ("en" det m) ("noen" det m) ("ingen" det m) ("en" det f) ("noen" det f) ("ingen" det f)  ;
LIST ub-nt-det = ("en" det nt) ("noen" det nt) ("ingen" det nt)  ;
LIST ub-slektsterm = ("mor" sg ind) ("far" sg ub) ("syster" sg ub) ("søster" sg ub) ("bror" sg ub) ("datter" sg ub) ("bestemor" sg ub) ("bestefar" sg ub) ("farfar" sg ub) ("farmor" sg ub) ("mormor" sg ub) ("morfar" sg ub)  ;
LIST ub-subst = (n ind) 
 ;
LIST ub-subst/ub-adj = (n ind) (n uboey) (adj ub) (adj <pres-part>)  ;
LIST ub-sup = (sup ind)  ;
LIST uboey-fork-subst = (n uboey) (fork n)  ;
LIST ubslektsterm = "tippoldemor" "tippoldefar" "søster" "sønn" "oldemor" "oldefar" "mormor" "morfar" "mor" "mann" "kone" "farmor" "farfar" "far" "datter" "bror" "bestemor" "bestefar" "barnebarn"  ;
LIST umod-adv = "sånn" "slik" "nå" "igjen" "før" "etterpå" "da"  ;
LIST utfyll-/@advsubj = "siden" "når" "inntil" "hvorom" "hvormed" "før" "etter at" "der" "da"  ;
LIST utfyll-sbu = "siden" "når" "før" "der" "da"  ;
LIST utfyllingssubj = "hvori" "hvorfra" "enn"  ;
LIST utrop-t = "$!"  ;
LIST vanlig-pr-tittel = "verdensmester" "student" "skribent" "prosjektleder" "professor" "president" "norgesmester" "lærer" "lektor" "leder" "hovedfagsstudent" "førsteamauensis" "formann" "forfatter" "europamester" "direktør" "astronom" "amanuensis"  ;
LIST veldig-farlige-part = "nære" "nyte" "mige" "make" "lite" "hele" "gale" "fore" "ete" "brune" "bene" "bare" "ale" gen  ;
LIST veldig-farlige-vblex = ("stede" pres) ("dy" pres) ("grade" pres)  ;
LIST vblex = vblex  ;
LIST vblex-u-imp = (vblex pres) (vblex pret) (vblex perf-part) (vblex inf)  ;
LIST vblex/parentes-beg = vblex <parentes-beg>  ;
LIST vblex/parentes-slutt = vblex <parentes-slutt>  ;
LIST verk = <verk> ;


SECTION

# 3532
"<bak>" REMOVE (subst) IF
	(-1 adj-m/nt OR adj-ub)
	(NOT -2 %en/et%);


# 3533
"<bak>" REMOVE (subst) IF
	(NOT -1 adj-m/nt OR adj-ub);


# 3531
"<bare>" SELECT (adv) IF
	(1 inf);


# 3530
"<bare>" SELECT (adj def sg) IF
	(*-1C det-ent BARRIER ikke-adv-adj)
	(*1 sg-subst BARRIER ikke-adv-adj);


# 3529
"<bare>" SELECT (adj pl) IF
	(*-1C pl-det BARRIER ikke-adv-adj)
	(*1 pl-subst BARRIER ikke-adv-adj);


# 3526
"<bare>" REMOVE (sbu) IF
	(-1 sbu);


# 3527
"<bare>" REMOVE (sbu) IF
	(-1 periode-beg/cnj-clb)
	(*1 komma LINK NOT 1 fv);


# 3528
"<bare>" REMOVE (sbu) IF
	(-1 periode-beg/cnj-clb)
	(NOT *1 komma BARRIER setn-gr);


# 3525
"<bekjente>" SELECT (adj pl) IF
	(-1 %og%)
	(-2 ub-fl-subst);


# 3524
"<best>" SELECT (adj sup ind) IF
	(NOT -1 ub-nt-det);


# 3522
"<bredt>" SELECT (vblex perf-part) IF
	(1 %seg%)
	(*-1 %ha% BARRIER setn-gr);


# 3523
"<bredt>" SELECT (vblex perf-part) IF
	(1 %over%)
	(*-1 %ha% BARRIER setn-gr);


# 3520
"<bredt>" REMOVE (vblex perf-part) IF
	(NOT 1 %over% OR %seg%);


# 3521
"<bredt>" REMOVE (vblex perf-part) IF
	(*-1 setn-gr BARRIER %ha%);


# 3519
"<dager>" REMOVE (vblex pres) IF
	(0 subst);


# 3518
"<den>" SELECT (det) IF
	(-1 %hele%)
	(2 subst/adj OR mf);


# 3516
"<der>" SELECT (pr) IF
	(1 pres/pret)
	(-1 setn-gr)
	(NOT 2 pres/pret);


# 3517
"<der>" SELECT (pr) IF
	(NOT *1 subst/prn/fl-adj/%all%/%mang%/%mange% BARRIER setn-gr);


# 3515
"<der>" SELECT (pr) IF
	(*1 subst/prn/fl-adj/%all%/%mang%/%mange% LINK *-1 ikke-adv-adj-det);


# 3512
"<det>" SELECT (det) IF
	(-1 %hele%)
	(2 subst/adj OR nt);


# 3513
"<det>" SELECT (det) IF
	(1 %hele%)
	(NOT 2 subst/adj);


# 3514
"<det>" SELECT (det) IF
	(1 %stikk%)
	(2 %motsatt%);


# 3510
"<det>" SELECT (prn) IF
	(1 iv OR present-vblex)
	(-1 fv)
	(2 ind);


# 3511
"<det>" SELECT (prn) IF
	(-1 fv)
	(1C present-ub)
	(-1C present-vblex);


# 3507
"<egen>" REMOVE (adj mf) IF
	(*1 ub-ent-mf-subst BARRIER ikke-adv-adj)
	(*-1 poss-det LINK 0 mf LINK NOT *1 ikke-adv-adj);


# 3508
"<egen>" REMOVE (adj mf) IF
	(*1 ub-ent-mf-subst BARRIER ikke-adv-adj)
	(*-1 ub-mf-det LINK *1 ikke-adv-adj);


# 3509
"<egen>" REMOVE (adj mf) IF
	(NOT *-1 ub-mf-det BARRIER setn-gr)
	(*1 ub-ent-mf-subst BARRIER ikke-adv-adj);


# 3505
"<ei>" SELECT (det) IF
	(*1 %ei% LINK -1 adj-f LINK NOT *-1 ikke-adv-adj);


# 3506
"<ei>" SELECT (det) IF
	(-1 adj-f)
	(*-1 %ei% BARRIER ikke-adv-adj);


# 3501
"<ei>" REMOVE (adv) IF
	(NOT -1 fv);


# 3502
"<ei>" REMOVE (adv) IF
	(*1 nr2-det-f-ub BARRIER ikke-adv);


# 3503
"<ei>" REMOVE (adv) IF
	(*1 sg-f-subst/tall-subst/maalsubst/tidssubst LINK NOT 0 be-subst LINK *-1 ikke-adv-adj LINK 0 subst-gen LINK NOT *-1 ikke-adv-adj);


# 3504
"<ei>" REMOVE (adv) IF
	(*1 sg-f-subst/tall-subst/maalsubst/tidssubst LINK NOT 0 def LINK NOT *-1 ikke-adv-adj);


# 3499
"<eksklusiv>" SELECT (pr) IF
	(1 nom)
	(-1 subst);


# 3500
"<eksklusiv>" SELECT (pr) IF
	(1 nom)
	(-1 komma)
	(-2 subst);


# 3497
"<eksklusiv>" REMOVE (pr) IF
	(-1 subst)
	(NOT 1 nom);


# 3498
"<eksklusiv>" REMOVE (pr) IF
	(NOT -1 komma OR subst);


# 3495
"<eksklusive>" SELECT (pr) IF
	(1 nom)
	(-1 subst);


# 3496
"<eksklusive>" SELECT (pr) IF
	(1 nom)
	(-1 komma)
	(-2 subst);


# 3493
"<eksklusive>" REMOVE (pr) IF
	(-1 subst)
	(NOT 1 nom);


# 3494
"<eksklusive>" REMOVE (pr) IF
	(NOT -1 komma OR subst);


# 3492
"<eldste>" REMOVE (subst) IF
	(0 adj);


# 3491
"<eller>" REMOVE (clb) IF
	(1 %aldri%)
	(-1 %sjelden%);


# 3490
"<eller>" REMOVE (pres) IF
	(0 vblex);


# 3489
"<ellers>" SELECT (adv) IF
	(0 adv);


# 3484
"<en>" SELECT (det) IF
	(-1 %ganger%)
	(-2 tall);


# 3485
"<en>" SELECT (det) IF
	(1 %ganger%)
	(2 tall);


# 3486
"<en>" SELECT (det) IF
	(-1 %og%)
	(-2 %hver%);


# 3487
"<en>" SELECT (det) IF
	(*1 %en% LINK -1 adj-m LINK NOT *-1 ikke-adv-adj);


# 3488
"<en>" SELECT (det) IF
	(-1 adj-m)
	(*-1 %en% BARRIER ikke-adv-adj);


# 3483
"<en>" REMOVE (adv) IF
	(0 adv);


# 3482
"<enda>" SELECT (adv) IF
	(1 adj-komp);


# 3481
"<ene>" SELECT (det qnt) IF
	(-1 be-det);


# 3478
"<enn>" SELECT (adv) IF
	(1 pres/pret)
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT *1 ikke-poss-det);


# 3479
"<enn>" SELECT (adv) IF
	(1C pres/pret)
	(NOT 1 prn);


# 3480
"<enn>" SELECT (adv) IF
	(1 adj-komp);


# 3477
"<enn>" SELECT (pr) IF
	(1 pr);


# 3476
"<enn>" REMOVE (adv) IF
	(NOT 1 adj-komp OR pres/pret);


# 3474
"<et>" SELECT (det) IF
	(*1 %et% LINK -1 adj-nt LINK NOT *-1 ikke-adv-adj);


# 3475
"<et>" SELECT (det) IF
	(-1 adj-nt)
	(*-1 %et% BARRIER ikke-adv-adj);


# 3471
"<faen>" SELECT (interj) IF
	(*-1 det LINK *1 ikke-adv-adj-det);


# 3472
"<faen>" SELECT (interj) IF
	(*-1 pr LINK *1 ikke-adv-adj-det);


# 3473
"<faen>" SELECT (interj) IF
	(NOT *-1 pr OR det);


# 3469
"<faen>" SELECT (subst) IF
	(*-1 det BARRIER ikke-adv-adj-det);


# 3470
"<faen>" SELECT (subst) IF
	(*-1 pr BARRIER ikke-adv-adj-det);


# 3468
"<far>" REMOVE (subst nt) IF
	(1 poss-det);


# 3465
"<fast>" SELECT (adj pl) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 %seg% BARRIER ikke-adv)
	(*-1 %seg% LINK -1C %fast%-vblex LINK *-1 nom LINK 0 nom-fl);


# 3466
"<fast>" SELECT (adj pl) IF
	(NOT 0 farlige-adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 prn-akk-fl BARRIER ikke-adv)
	(*-1 prn-akk-fl LINK -1C %fast%-vblex LINK NOT -1 clb);


# 3467
"<fast>" SELECT (adj pl) IF
	(NOT 0 farlige-adj)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 be-fl-subst BARRIER ikke-adv)
	(*-1 be-fl-subst LINK *-1C %fast%-vblex LINK NOT -1 clb)
	(*-1 %fast%-vblex BARRIER ikke-adv-adj-det-subst);


# 3463
"<fast>" SELECT (adj ntindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 prn-nt BARRIER ikke-adv)
	(*-1 prn-nt LINK -1C %fast%-vblex LINK NOT -1 clb);


# 3464
"<fast>" SELECT (adj ntindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 be-ent-nt-subst BARRIER ikke-adv)
	(*-1 be-ent-nt-subst LINK *-1C %fast%-vblex LINK NOT -1 clb)
	(*-1 %fast%-vblex BARRIER ikke-adv-adj-det-subst);


# 3459
"<fast>" SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 %seg% BARRIER ikke-adv)
	(*-1 %seg% LINK -1C %fast%-vblex)
	(*-1 %seg% LINK -1 inf);


# 3460
"<fast>" SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 %seg% BARRIER ikke-adv)
	(*-1 %seg% LINK -1C %fast%-vblex LINK *-1 nom LINK 0 nom-ent);


# 3461
"<fast>" SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 prn-akk-mf BARRIER ikke-adv)
	(*-1 prn-akk-mf LINK -1 %fast%-vblex LINK NOT -1 clb);


# 3462
"<fast>" SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 be-ent-mf-subst BARRIER ikke-adv)
	(*-1 be-ent-mf-subst LINK *-1C %fast%-vblex LINK NOT -1 clb)
	(*-1 %fast%-vblex BARRIER ikke-adv-adj-det-subst);


# 3458
"<felles>" SELECT (subst) IF
	(-1 %til%);


# 3456
"<felt>" REMOVE (subst sg) IF
	(NOT -1 %som%-pr)
	(*-1 ub-nt-det LINK *1 ikke-adv-adj)
	(*-1 periode-beg/cnj-clb LINK *1 hj-vblex);


# 3457
"<felt>" REMOVE (subst sg) IF
	(NOT -1 %som%-pr)
	(NOT *-1 ub-nt-det BARRIER setn-gr)
	(*-1 periode-beg/cnj-clb LINK *1 hj-vblex);


# 3455
"<fly>" REMOVE (subst m) IF
	(0 subst);


# 3454
"<fly>" REMOVE (subst f) IF
	(0 subst);


# 3452
"<folk>" SELECT (subst sg) IF
	(-1C det-nt-ent);


# 3453
"<folk>" SELECT (subst sg) IF
	(-1C adj-nt);


# 3451
"<folk>" SELECT (subst) IF
	(-1C subst-gen);


# 3449
"<folk>" REMOVE (subst sg) IF
	(NOT -1 adj-nt OR subst-gen)
	(*-1 det-nt-ent LINK *1 ikke-adv-adj-det);


# 3450
"<folk>" REMOVE (subst sg) IF
	(NOT *-1 det-nt-ent BARRIER setn-gr)
	(NOT -1 adj-nt OR subst-gen);


# 3448
"<folket>" REMOVE (vblex) IF
	(NOT 1 %seg%);


# 3446
"<for>" SELECT (adv) IF
	(1 %mye/lite% OR adj-pos);


# 3447
"<for>" SELECT (adv) IF
	(NOT 1 %fullt/mange% OR setn-gr)
	(NOT 2 subst/adj/prn/det/cnj);


# 3439
"<for>" SELECT (clb cnj) IF
	(-1 setn-gr)
	(1C %det%-prn)
	(2 pres/pret);


# 3440
"<for>" SELECT (clb cnj) IF
	(-1 setn-gr)
	(1C prn-nom)
	(NOT 2 %som% OR pr)
	(*1 pres/pret BARRIER setn-gr);


# 3441
"<for>" SELECT (clb cnj) IF
	(-1 setn-gr)
	(1C pres/pret);


# 3442
"<for>" SELECT (clb cnj) IF
	(1 pr)
	(-1 setn-gr)
	(NOT 1 %henne%)
	(*1 pres/pret BARRIER setn-gr);


# 3443
"<for>" SELECT (clb cnj) IF
	(1 sbu)
	(-1 setn-gr)
	(NOT 1 %at%);


# 3444
"<for>" SELECT (clb cnj) IF
	(1 adv)
	(-1 setn-gr)
	(NOT 1 %en%)
	(2 pres/pret);


# 3445
"<for>" SELECT (clb cnj) IF
	(1 %selv%)
	(-1 >>>)
	(2 %om%);


# 3430
"<for>" SELECT (pr) IF
	(*1C setn-gr LINK *-1 %siden% LINK NOT 0 subst);


# 3431
"<for>" SELECT (pr) IF
	(-1 %redd%);


# 3432
"<for>" SELECT (pr) IF
	(1 infmerke);


# 3433
"<for>" SELECT (pr) IF
	(1 %det%)
	(-1 setn-gr)
	(2 orden)


;


# 3434
"<for>" SELECT (pr) IF
	(-1 nom)
	(*1C setn-gr BARRIER subst/prn)
	(*-2 ikke-adv-adj-det LINK 0 nom LINK *-1 ikke-adv-adj-det LINK 0 vblex LINK NOT 0 kop);


# 3435
"<for>" SELECT (pr) IF
	(-1 nom)
	(*1C setn-gr BARRIER subst/prn)
	(*-2 ikke-adv-adj-det LINK 0 vblex LINK NOT 0 kop);


# 3436
"<for>" SELECT (pr) IF
	(1 %at%);


# 3437
"<for>" SELECT (pr) IF
	(NOT 0 pret)
	(-1 subst)
	(NOT 1 adj)
	(*-2 setn-gr BARRIER pres/pret);


# 3438
"<for>" SELECT (pr) IF
	(-1 subst)
	(*-2 ikke-adv-adj-det LINK 0 cnj LINK -1 komma);


# 3428
"<for>" SELECT (vblex) IF
	(1 subst/adj/prn/det)
	(-1 %det%-prn)
	(NOT 1 %at%)
	(*-1C setn-gr BARRIER fv)
	(*1C setn-gr BARRIER fv);


# 3429
"<for>" SELECT (vblex) IF
	(-1 subst/prn)
	(1C pr)
	(*-1 setn-gr BARRIER fv)
	(*1 setn-gr BARRIER fv);


# 3423
"<for>" REMOVE (adv) IF
	(1 adj)
	(NOT 1 %mye/lite%)
	(*2C subst BARRIER ikke-adv-adj);


# 3424
"<for>" REMOVE (adv) IF
	(1C ub-ent-nt-adj)
	(2 adj);


# 3425
"<for>" REMOVE (adv) IF
	(1 det/adv);


# 3426
"<for>" REMOVE (adv) IF
	(1 <perf-part>)
	(NOT 1 adv OR adj-pos);


# 3427
"<for>" REMOVE (adv) IF
	(NOT 1 adj-pos);


# 3422
"<for>" REMOVE (vblex) IF
	(1 subst/adj/prn/det)
	(-1 subst/prn)
	(NOT -1 %det%-prn);


# 3414
"<for>" REMOVE (clb cnj) IF
	(*1C pres/pret LINK -1C subst LINK *-1 subst/prn LINK NOT 0 subst-prop)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret BARRIER komma/cnj)
	(*1C pres/pret BARRIER pr);


# 3415
"<for>" REMOVE (clb cnj) IF
	(*1C pres/pret LINK -1C prn LINK *-1 subst/prn LINK NOT 0 subst-prop)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret BARRIER komma/cnj)
	(*1C pres/pret BARRIER pr);


# 3416
"<for>" REMOVE (clb cnj) IF
	(1C akk);


# 3417
"<for>" REMOVE (clb cnj) IF
	(-1 sbu);


# 3418
"<for>" REMOVE (clb cnj) IF
	(*1 sbu BARRIER pres/pret);


# 3419
"<for>" REMOVE (clb cnj) IF
	(1C fv);


# 3420
"<for>" REMOVE (clb cnj) IF
	(1 fv)
	(*2 pres/pret LINK *-1 setn-gr);


# 3421
"<for>" REMOVE (clb cnj) IF
	(*2C setn-gr BARRIER pres/pret);


# 3413
"<for>" REMOVE (vblex) IF
	(0 pret);


# 3410
"<fort>" REMOVE (subst) IF
	(1 ub-ent-nt-subst)
	(*-1 ub-nt-det BARRIER ikke-adv-adj);


# 3411
"<fort>" REMOVE (subst) IF
	(*-1 ub-nt-det LINK *1 ikke-adv-adj);


# 3412
"<fort>" REMOVE (subst) IF
	(NOT *-1 ub-nt-det BARRIER setn-gr)
	(NOT -1 adj-fl);


# 3408
"<før>" SELECT (vblex pres) IF
	(1 nom)
	(-1 nom)
	(NOT *1 overskrift BARRIER setn-gr)
	(*-1C setn-gr BARRIER fv)
	(*1C setn-gr BARRIER fv);


# 3409
"<før>" SELECT (vblex pres) IF
	(1 %fram/opp/paa%)
	(NOT *1 overskrift BARRIER setn-gr)
	(*-1C setn-gr BARRIER fv)
	(*1C setn-gr BARRIER fv);


# 3406
"<før>" REMOVE (adjindsg) IF
	(-1C clb-cnj);


# 3407
"<før>" REMOVE (adjindsg) IF
	(NOT *-1 ub-ent-mf-det BARRIER setn-gr)
	(NOT -1 cnj OR kop);


# 3405
"<før>" REMOVE (adv) IF
	(0 adv);


# 3400
"<før>" REMOVE (vblex pres) IF
	(*1 fv BARRIER setn-gr);


# 3401
"<før>" REMOVE (vblex pres) IF
	(*-1 fv BARRIER setn-gr);


# 3402
"<før>" REMOVE (vblex pres) IF
	(1 %fram/opp/paa%)
	(NOT -1 nom);


# 3403
"<før>" REMOVE (vblex pres) IF
	(1 nom)
	(NOT -1 nom);


# 3404
"<før>" REMOVE (vblex pres) IF
	(NOT 1 nom OR %fram/opp/paa%);


# 3399
"<før>" REMOVE (adjindsg) IF
	(*-1 ub-ent-mf-det LINK *1 ikke-adv-adj);


# 3398
"<føre>" SELECT (pr) IF
	(1 %var%)
	(-1 %vaere%);


# 3396
"<føre>" SELECT (subst nt sg) IF
	(-1 adj-nt-ub)
	(*-1 setn-gr LINK *1 m-hj-vblex LINK *1C inf);


# 3397
"<føre>" SELECT (subst nt sg) IF
	(-1 adj-nt-ub)
	(*-1 setn-gr BARRIER m-hj-vblex);


# 3394
"<føre>" SELECT (vblex inf) IF
	(1 prn-akk)
	(*-1 m-hj-vblex BARRIER setn-gr)
	(*-1 m-hj-vblex BARRIER inf);


# 3395
"<føre>" SELECT (vblex inf) IF
	(1 %til%)
	(*-1 m-hj-vblex BARRIER setn-gr)
	(*-1 m-hj-vblex BARRIER inf);


# 3393
"<føre>" REMOVE (adj pl) IF
	(NOT *-1 pl-det BARRIER setn-gr)
	(NOT -1 cnj OR kop);


# 3392
"<føre>" REMOVE (pr) IF
	(NOT 1 %var%)
	(NOT -1 %vaere%);


# 3391
"<galt>" SELECT (subst) IF
	(NOT 1 subst/adj)
	(*-1 %en% BARRIER ikke-adv-adj);


# 3390
"<ganger>" SELECT (vblex pres) IF
	(1 tall)
	(-1 tall);


# 3387
"<ganger>" REMOVE (vblex pres) IF
	(*-1 setn-gr LINK *1 tall LINK 0 ikke-tall)
	(*1 setn-gr BARRIER tall);


# 3388
"<ganger>" REMOVE (vblex pres) IF
	(NOT 1 tall);


# 3389
"<ganger>" REMOVE (vblex pres) IF
	(NOT -1 tall);


# 3386
"<gode>" SELECT (subst) IF
	(-1 %til%)
	(NOT 1 subst);


# 3384
"<gode>" REMOVE (subst) IF
	(*-1 ub-nt-det LINK *1 ikke-adv-adj);


# 3385
"<gode>" REMOVE (subst) IF
	(NOT *-1 ub-nt-det BARRIER setn-gr)
	(NOT -1 %til%);


# 3383
"<godt>" REMOVE (subst) IF
	(0 adj);


# 3382
"<godt>" REMOVE (vblex imp) IF
	(NOT 1 prn-akk);


# 3381
"<godta>" REMOVE (vblex perf-part) IF
	(NOT 1 prn-akk);


# 3380
"<godta>" REMOVE (vblex pret) IF
	(NOT 1 prn-akk);


# 3379
"<grunn>" SELECT (subst) IF
	(NOT 0 %for/altfor%)
	(1 %til%);


# 3377
"<grunnet>" SELECT (pr) IF
	(1 nom)
	(-1 subst);


# 3378
"<grunnet>" SELECT (pr) IF
	(1 nom)
	(-1 komma)
	(-2 subst);


# 3375
"<grunnet>" REMOVE (pr) IF
	(-1 subst)
	(NOT 1 nom);


# 3376
"<grunnet>" REMOVE (pr) IF
	(NOT -1 komma OR subst);


# 3374
"<grått>" SELECT (vblex perf-part) IF
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 %ha% BARRIER fv)
	(*-1 %ha% BARRIER perf-part)
	(*-1 %ha% BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 3373
"<grått>" REMOVE (vblex perf-part) IF
	(*-1 setn-gr BARRIER %ha%);


# 3372
"<ha>" REMOVE (symb) IF
	(0 vblex);


# 3370
"<ham>" REMOVE (subst) IF
	(*-1 m-det LINK *1 ikke-adv-adj);


# 3371
"<ham>" REMOVE (subst) IF
	(NOT *-1 m-det BARRIER setn-gr)
	(NOT -1 %skifte/bytte%);


# 3369
"<handler>" REMOVE (subst m sg) IF
	(*-1 ikke-adv-adj LINK NOT 0 det-m-ent);


# 3368
"<handler>" REMOVE (subst) IF
	(*1 %seg% BARRIER setn-gr);


# 3367
"<heim>" REMOVE (pr) IF
	(-1 m-det)
	(NOT -1 ikke-det);


# 3366
"<heim>" REMOVE (subst) IF
	(NOT -1 subst-gen OR %og%);


# 3365
"<heime>" REMOVE (inf) IF
	(NOT -1 infmerke);


# 3362
"<hele>" SELECT (adj def sg) IF
	(1 poss-det);


# 3363
"<hele>" SELECT (adj def sg) IF
	(1 be-det);


# 3364
"<hele>" SELECT (adj def sg) IF
	(-1 %det%);


# 3361
"<hele>" SELECT (adj pl) IF
	(1 pl-det);


# 3360
"<hele>" SELECT (subst) IF
	(*-1 %et% BARRIER ikke-adv-adj);


# 3358
"<hele>" REMOVE (subst) IF
	(NOT *-1 %et% BARRIER setn-gr);


# 3359
"<hele>" REMOVE (subst) IF
	(*-1 %et% LINK *1 ikke-adv-adj);


# 3357
"<hele>" SELECT (adj sg) IF
	(1 be-ent-subst/be-ent-adj);


# 3356
"<hele>" SELECT (adj pl) IF
	(1 be-fl-subst/fl-adj);


# 3355
"<heller>" SELECT (adv) IF
	(*1 %enn% BARRIER setn-gr);


# 3353
"<heller>" SELECT (vblex pres) IF
	(1 advblex)
	(-1C subst/prn)
	(2C nom/pr)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 3354
"<heller>" SELECT (vblex pres) IF
	(1C nom/pr)
	(-1C subst/prn)
	(NOT 1 advblex)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 3351
"<heller>" REMOVE (subst sg) IF
	(*-1 %en% LINK *1 ikke-adv-adj);


# 3352
"<heller>" REMOVE (subst sg) IF
	(NOT *-1 %en% BARRIER setn-gr);


# 3350
"<heller>" REMOVE (subst pl) IF
	(0 adv);


# 3348
"<heller>" REMOVE (vblex pres) IF
	(*-1C fv BARRIER setn-gr);


# 3349
"<heller>" REMOVE (vblex pres) IF
	(NOT 1 nom OR advblex);


# 3344
"<helt>" SELECT (adj nt) IF
	(1C pr);


# 3345
"<helt>" SELECT (adj nt) IF
	(1 nr2-det);


# 3346
"<helt>" SELECT (adj nt) IF
	(1 ub-ent-nt-subst)
	(-1 nt-det);


# 3347
"<helt>" SELECT (adj nt) IF
	(1 adj);


# 3343
"<helt>" SELECT (subst m) IF
	(-1 ub-m-det)
	(NOT 1 adj OR nr2-det);


# 3342
"<helt>" REMOVE (subst) IF
	(-1 advblex)
	(1C vblex);


# 3341
"<henne>" SELECT (prn) IF
	(0 pr);


# 3340
"<hennes>" REMOVE (pr gen) IF
	(0 det);


# 3339
"<hisset>" REMOVE (pr) IF
	(0 vblex);


# 3338
"<hit>" REMOVE (subst m) IF
	(NOT -1 m-det OR adj-m);


# 3337
"<hit>" REMOVE (subst f) IF
	(0 pr);


# 3336
"<hjem>" REMOVE (pr) IF
	(-1 nt-det)
	(NOT -1 ikke-det);


# 3334
"<hjem>" REMOVE (subst) IF
	(-1 adj-nt)
	(NOT -2 nt-det)


;


# 3335
"<hjem>" REMOVE (subst) IF
	(NOT -1 subst-gen OR %og%);


# 3333
"<holder>" REMOVE (subst m sg) IF
	(*-1 ikke-adv-adj LINK NOT 0 det-m-ent);


# 3332
"<hos>" SELECT (pr) IF
	(0 pr);


# 3330
"<hun>" SELECT (prn pers) IF
	(*-1 ub-m-det LINK *1 ikke-adv-adj);


# 3331
"<hun>" SELECT (prn pers) IF
	(NOT *-1 ub-m-det BARRIER setn-gr);


# 3329
"<hun>" REMOVE (prn pers) IF
	(*-1 ub-m-det BARRIER ikke-adv-adj);


# 3327
"<hundre>" SELECT (det pl) IF
	(*-1 qnt-med-flere LINK *1 ikke-adv-adj);


# 3328
"<hundre>" SELECT (det pl) IF
	(NOT *-1 qnt-med-flere BARRIER setn-gr);


# 3326
"<hundre>" SELECT (subst nt sg) IF
	(*-1 det-ent-nt-halvt BARRIER ikke-adv-adj);


# 3325
"<hundre>" SELECT (subst nt pl) IF
	(*-1 qnt-med-flere LINK NOT 0 det-ent-nt-halvt LINK NOT *1 ikke-adv-adj);


# 3324
"<huset>" REMOVE (vblex perf-part) IF
	(*-1C setn-gr LINK *1C fv LINK NOT 0 hj-vblex);


# 3323
"<huset>" REMOVE (vblex pret) IF
	(*-1C fv BARRIER setn-gr);


# 3322
"<hver>" SELECT (det m) IF
	(1 %sin%)
	(*2 ub-ent-m-subst BARRIER ikke-adv-adj-det);


# 3321
"<hver>" SELECT (det f) IF
	(1 %si%)
	(*2 ub-ent-f-subst BARRIER ikke-adv-adj-det);


# 3320
"<hver>" SELECT (det) IF
	(1 %sine%)
	(*2 ub-fl-subst BARRIER ikke-adv-adj-det);


#
;


# 3317
"<hvis>" SELECT (prn sp) IF
	(1C subst-ub)
	(2C subst/prn);


# 3318
"<hvis>" SELECT (prn sp) IF
	(-1C subst/prn)
	(*1C subst-ub BARRIER ikke-adv-adj)
	(*1 ub-subst LINK 1 advblex/komp/ub-sup LINK 1 fv);


# 3319
"<hvis>" SELECT (prn sp) IF
	(-1C subst/prn)
	(*1C subst-ub BARRIER ikke-adv-adj)
	(*1 ub-subst LINK 1 fv);


# 3316
"<hvis>" REMOVE (prn sp) IF
	(0 sbu);


# 3315
"<ille>" SELECT (adv) IF
	(0 adj);


# 3314
"<ingenting>" REMOVE (subst uboey) IF
	(0 prn);


# 3312
"<intet>" SELECT (det nt) IF
	(*-1 setn-gr LINK *1 nt-det LINK *1 ikke-adv-adj);


# 3313
"<intet>" SELECT (det nt) IF
	(*-1 setn-gr BARRIER nt-det);


# 3311
"<intet>" REMOVE (det nt) IF
	(*-1 nt-det BARRIER ikke-adv-adj);


# 3308
"<jeg>" SELECT (prn pers) IF
	(*-1 poss-det-nt LINK *1 ikke-adv-adj);


# 3309
"<jeg>" SELECT (prn pers) IF
	(*-1 %et% LINK *1 ikke-adv-adj);


# 3310
"<jeg>" SELECT (prn pers) IF
	(NOT *-1 %et% BARRIER setn-gr)
	(NOT -1 poss-det-nt);


# 3306
"<jeg>" REMOVE (prn pers) IF
	(*-1 poss-det-nt BARRIER ikke-adv-adj);


# 3307
"<jeg>" REMOVE (prn pers) IF
	(*-1 %et% BARRIER ikke-adv-adj);


# 3305
"<klart>" SELECT (vblex perf-part) IF
	(NOT 1 %for%)
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 %ha% BARRIER fv)
	(*-1 %ha% BARRIER perf-part)
	(*-1 %ha% BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 3303
"<klart>" REMOVE (vblex perf-part) IF
	(1 %for%)
	(2 prn-akk)
	(*-1 %ha% BARRIER setn-gr);


# 3304
"<klart>" REMOVE (vblex perf-part) IF
	(*-1 setn-gr BARRIER %ha%);


# 3300
"<kontra>" SELECT (pr) IF
	(*-1 vblex LINK 0 %slaa%);


# 3301
"<kontra>" SELECT (pr) IF
	(1 nom)
	(-1 nom)
	(*-2 ikke-adv-adj-det-subst LINK NOT 0 pr)
	(*1 subst LINK NOT 0 advblexialsubst);


# 3302
"<kontra>" SELECT (pr) IF
	(1 nom)
	(-1 nom)
	(NOT *-2 ikke-adv-adj-det-subst BARRIER setn-gr)
	(*1 subst LINK NOT 0 advblexialsubst);


# 3299
"<kontra>" SELECT (vblex perf-part) IF
	(-1 %ha%);


# 3297
"<kontra>" REMOVE (adj) IF
	(0 vblex);


# 3298
"<kontra>" REMOVE (adj) IF
	(0 pr);


# 3296
"<kontra>" REMOVE (pret) IF
	(*-1C fv BARRIER setn-gr);


# 3295
"<kontra>" REMOVE (vblex perf-part) IF
	(*-1C setn-gr BARRIER %ha%);


# 3294
"<la>" REMOVE (subst m) IF
	(NOT *1 %re%-subst BARRIER setn-gr)
	(NOT *-1 %re%-subst BARRIER setn-gr);


# 3293
"<lange>" REMOVE (subst) IF
	(0 adj);


# 3291
"<lett>" SELECT (vblex perf-part) IF
	(1 prn-akk)
	(2 %etter/fram/opp%)
	(*-1 %ha% BARRIER setn-gr);


# 3292
"<lett>" SELECT (vblex perf-part) IF
	(1 %etter/fram/opp%)
	(*-1 %ha% BARRIER setn-gr);


# 3289
"<lett>" REMOVE (vblex perf-part) IF
	(NOT 1 %etter/fram/opp% OR prn-akk);


# 3290
"<lett>" REMOVE (vblex perf-part) IF
	(*-1 setn-gr BARRIER %ha%);


# 3287
"<lettere>" REMOVE (subst m pl) IF
	(*-1 det-m-fl LINK *1 ikke-adv-adj);


# 3288
"<lettere>" REMOVE (subst m pl) IF
	(NOT *-1 det-m-fl BARRIER setn-gr);


# 3284
"<like>" SELECT (adv) IF
	(1 %ut%)
	(NOT -1 %uten%)
	(*-1 vblex BARRIER %se/hoeres/kjennes%);


# 3285
"<like>" SELECT (adv) IF
	(1 pr)
	(*-1 setn-gr BARRIER kop);


# 3286
"<like>" SELECT (adv) IF
	(1 adj);


# 3282
"<like>" SELECT (subst) IF
	(1 komma/cnj)
	(-1 %uten%)
	(NOT 2 subst/adj/adv);


# 3283
"<like>" SELECT (subst) IF
	(-1 %uten%)
	(NOT 1 subst/adj OR komma/cnj);


# 3276
"<like>" REMOVE (adj) IF
	(-1 %for%)
	(NOT 1 %kamp/fot/tall%)
	(NOT -2 %like%)
	(*-1 vblex LINK NOT 0 %se/hoeres/kjennes% LINK NOT 0 kop);


# 3277
"<like>" REMOVE (adj) IF
	(-1 %for%)
	(NOT 1 %ut% OR %kamp/fot/tall%)
	(NOT -2 %like%)
	(*-1 vblex LINK NOT 0 kop);


# 3278
"<like>" REMOVE (adj) IF
	(-1 %for%)
	(NOT 1 %kamp/fot/tall%)
	(NOT *-1 vblex BARRIER setn-gr)
	(NOT -2 %like%);


# 3279
"<like>" REMOVE (adj) IF
	(NOT 1 %kamp/fot/tall% OR ub-fl-subst)
	(NOT -1 %for%)
	(NOT *-1 vblex BARRIER setn-gr);


# 3280
"<like>" REMOVE (adj) IF
	(NOT 1 %kamp/fot/tall% OR ub-fl-subst)
	(NOT -1 %for%)
	(*-1 vblex LINK NOT 0 kop);


# 3281
"<like>" REMOVE (adj) IF
	(NOT 1 %kamp/fot/tall% OR ub-fl-subst)
	(NOT -1 %for%)
	(*-1 vblex LINK NOT 0 %se/hoeres/kjennes% LINK NOT 0 kop);


# 3274
"<like>" REMOVE (subst) IF
	(1 %for%)
	(NOT -1 poss-det OR subst-gen)
	(NOT 2 %seg%);


# 3275
"<like>" REMOVE (subst) IF
	(NOT 1 %for%)
	(NOT -1 poss-det OR subst-gen);


# 3273
"<lite>" SELECT (adj pos ind) IF
	(1C ub-subst)
	(NOT 1 pl);


# 3271
"<lite>" SELECT (adj pos ntindsg) IF
	(1 pr)
	(NOT 1 %paa%);


# 3272
"<lite>" SELECT (adj pos ntindsg) IF
	(1C adj);


# 3270
"<lite>" REMOVE (adj pl) IF
	(NOT 1 ub-fl-subst);


# 3269
"<lite>" REMOVE (adj m f) IF
	(NOT 1 ub-ent-m-subst OR ub-ent-f-subst);


# 3267
"<lite>" REMOVE (vblex inf) IF
	(-1C inf);


# 3268
#"<lite>" REMOVE (vblex inf) IF
#	(*-1 setn-gr BARRIER m-hj-vblex)
#	(*1 setn-gr BARRIER m-hj-vblex)
#	(*-1 setn-gr-infmerke LINK NOT 0 infmerke);


# 3266
"<liten>" REMOVE (subst def sg) IF
	(0 adj)
	(NOT -1 %siste%);


# 3265
"<livet>" SELECT (vblex perf-part) IF
	(1 %opp%)
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 %ha% BARRIER fv)
	(*-1 %ha% BARRIER perf-part)
	(*-1 %ha% BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 3264
"<livet>" REMOVE (vblex) IF
	(NOT 1 %opp%);


# 3263
"<lyst>" SELECT (subst) IF
	(1 %til%);


# 3262
"<løs>" REMOVE (vblex inf pres pass) IF
	(0 adj);


# 3261
"<man>" SELECT (prn) IF
	(NOT -1 ub-m-det OR ub-f-det);


# 3260
"<meg>" SELECT (pers) IF
	(0 prn);


# 3259
"<meg>" SELECT (prn) IF
	(-1 vblex);


# 3258
"<meget>" REMOVE (<perf-part>) IF
	(0 adj);


# 3257
"<meget>" REMOVE (perf-part) IF
	(0 adj);


# 3255
"<men>" SELECT (cnj) IF
	(1 setn-gr)
	(-1 setn-gr);


# 3256
"<men>" SELECT (cnj) IF
	(-1 komma);


# 3254
"<men>" REMOVE (subst sg) IF
	(NOT -1 nt);


# 3253
"<men>" REMOVE (subst) IF
	(1 subst/prn);


# 3252
"<mens>" SELECT (sbu) IF
	(-1 komma);


# 3251
"<mens>" REMOVE (subst) IF
	(1 nom)
	(-1 subst/prn);


# 3250
"<mente>" REMOVE (subst) IF
	(NOT -1 %i%);


# 3249
"<midt>" REMOVE (subst) IF
	(0 adv);


# 3246
"<mot>" SELECT (pr) IF
	(-1C fv)
	(NOT -1 %ha% OR %fatte/kreve/ta%);


# 3247
"<mot>" SELECT (pr) IF
	(-1 %i%);


# 3248
"<mot>" SELECT (pr) IF
	(-1 %i%)
	(-2 %tvert%);


# 3245
"<mot>" SELECT (subst nt) IF
	(NOT -1 poss-det)
	(*-1 nt-det LINK 0 sg LINK NOT 0 be-det LINK NOT *1 ikke-adv-adj);


# 3244
"<mot>" SELECT (subst) IF
	(1 %nok/til%)
	(*-1 %ha% BARRIER setn-gr);


# 3243
"<mot>" REMOVE (subst nt pl ind) IF
	(0 sg);


# 3241
"<mot>" REMOVE (subst) IF
	(1 nom/at)
	(-1 subst);


# 3242
"<mot>" REMOVE (subst) IF
	(1 subst/adj/prn/det);


# 3237
"<mye>" SELECT (adj pos mfindsg) IF
	(1 %klokke%)
	(2 hj-vblex OR pres/pret)
	(*3 ikke-adv-vblex LINK -1 kop LINK 0 iv LINK *-1 ikke-adv-vblex LINK 0 %klokke%);


# 3238
"<mye>" SELECT (adj pos mfindsg) IF
	(1 hj-vblex OR pres/pret)
	(2 %klokke%)
	(*3 ikke-adv-vblex LINK -1 kop LINK 0 iv LINK *-1 ikke-adv-vblex LINK 0 %klokke%);


# 3239
"<mye>" SELECT (adj pos mfindsg) IF
	(1 %klokke%)
	(2 kop-fv);


# 3240
"<mye>" SELECT (adj pos mfindsg) IF
	(1 kop-fv)
	(2 %klokke%);


# 3235
"<noe>" SELECT (det nt sg) IF
	(1 adj)
	(-1C det)

;


# 3236
"<noe>" SELECT (det nt sg) IF
	(1 adj-komp)
	(2 adj)
	(3 subst);


# 3229
"<noe>" SELECT (det qnt nt) IF
	(1 ub-ent-nt-adj)
	(NOT 1 det OR ub-fl-nt-subst)
	(NOT 1 adv OR farlige-adj)
	(NOT -1 pres/pret)
	(2 komma/cnj)
	(NOT 3 adj);


# 3230
"<noe>" SELECT (det qnt nt) IF
	(1 adj-ub-ent)
	(NOT 1 det OR ub-fl-nt-subst)
	(NOT 1 adv OR farlige-adj)
	(NOT -1 pres/pret)
	(NOT 2 subst/adj OR komma/cnj);


# 3231
"<noe>" SELECT (det qnt nt) IF
	(1 ub-ent-nt-adj)
	(NOT 1 ub-fl-nt-subst OR adv)
	(2C adj)
	(3 komma/cnj)
	(NOT 4 adj);


# 3232
"<noe>" SELECT (det qnt nt) IF
	(1 ub-ent-nt-adj)
	(NOT 1 adv OR ub-fl-nt-subst)
	(2C adj)
	(NOT 3 subst/adj OR komma/cnj);


# 3233
"<noe>" SELECT (det qnt nt) IF
	(1 ub-ent-nt-adj)
	(NOT 1 ub-fl-nt-subst OR adv)
	(2 komma/cnj)
	(NOT 3 adj);


# 3234
"<noe>" SELECT (det qnt nt) IF
	(1 ub-ent-nt-adj)
	(NOT 1 ub-fl-nt-subst OR adv)
	(NOT 2 subst/adj OR komma/cnj);


# 3227
"<noe>" SELECT (det) IF
	(*1 %noen%-nt LINK -1 adj-nt LINK NOT *-1 ikke-adv-adj);


# 3228
"<noe>" SELECT (det) IF
	(-1 adj-nt)
	(*-1 %noen%-nt BARRIER ikke-adv-adj);


# 3225
"<noe>" REMOVE (det pl) IF
	(1C adj)
	(NOT 1 adv OR adj-komp)
	(NOT 1 adj-sup OR adj-fl)
	(NOT 2 pl);


# 3226
"<noe>" REMOVE (det pl) IF
	(1C adj)
	(NOT 1 advblex OR adj-komp)
	(NOT 1 adj-sup OR adj-fl);


# 3224
"<noe>" REMOVE (det qnt m) IF
	(1 subst/adj)
	(NOT 1 advblex OR m-ent)
	(NOT 1 adj-komp OR adj-sup)
	(NOT -1 det);


# 3223
"<noe>" REMOVE (det qnt nt) IF
	(1 subst/adj)
	(NOT 1 advblex OR nt-ent)
	(NOT 1 adj-komp OR adj-sup)
	(NOT -1 det);


# 3222
"<noe>" REMOVE (det qnt f) IF
	(1 subst/adj)
	(NOT 1 advblex OR f-ent)
	(NOT 1 adj-komp OR adj-sup)
	(NOT -1 det);


# 3220
"<noe>" REMOVE (det) IF
	(1 def)
	(NOT 1 advblex)
	(NOT -1 det);


# 3221
"<noe>" REMOVE (det) IF
	(1 subst-prop);


# 3219
"<noe>" REMOVE (prn) IF
	(1 adj-komp)
	(NOT 2 subst/adj OR komma/cnj);


# 3217
"<nå>" SELECT (vblex inf) IF
	(NOT 1 inf OR advblex)
	(*-1C m-hj-vblex BARRIER setn-gr)
	(*-1C m-hj-vblex BARRIER inf)
	(*-1C m-hj-vblex BARRIER perf-part);


# 3218
"<nå>" SELECT (vblex inf) IF
	(1 advblex)
	(NOT 2 advblex OR inf)
	(*-1C m-hj-vblex BARRIER setn-gr)
	(*-1C m-hj-vblex BARRIER inf)
	(*-1C m-hj-vblex BARRIER perf-part);


# 3216
"<nå>" REMOVE (subst) IF
	(NOT -1 ub-nt-det OR %samme/neste/ene/eneste/selve/forrige%);


# 3213
"<nå>" REMOVE (vblex inf) IF
	(-1 sbu);


# 3214
"<nå>" REMOVE (vblex inf) IF
	(1 fv)
	(*-1C setn-gr BARRIER infmerke)
	(*-1C setn-gr BARRIER m-hj-vblex);


# 3215
"<nå>" REMOVE (vblex inf) IF
	(1C inf)
	(*-1C m-hj-vblex BARRIER setn-gr);


# 3212
"<når>" SELECT (adv) IF
	(1 %som%)
	(2 %helst%);


# 3209
"<når>" SELECT (vblex pres) IF
	(1 advblex)
	(2 %fram/inn/opp%)
	(*-1 setn-gr BARRIER pres/pret)
	(*1 setn-gr BARRIER pres/pret);


# 3210
"<når>" SELECT (vblex pres) IF
	(1 %fram/inn/opp%)
	(*-1 setn-gr BARRIER pres/pret)
	(*1 setn-gr BARRIER pres/pret);


# 3211
"<når>" SELECT (vblex pres) IF
	(1 nom)
	(*-1 setn-gr BARRIER pres/pret)
	(*1C setn-gr BARRIER pres/pret);


# 3208
"<når>" REMOVE (adv) IF
	(NOT 1 fv OR pr);


# 3207
"<nærme>" SELECT (vblex inf) IF
	(1 prn-akk);


# 3200
"<og>" REMOVE (clb) IF
	(1 %ikke%)
	(NOT -1 >>>)
	(2 %minst%)
	(NOT 3 pres/pret);


# 3201
"<og>" REMOVE (clb) IF
	(1 %sist%)
	(-1 %syvende%);


# 3202
"<og>" REMOVE (clb) IF
	(1 %til%)
	(-1 %av%);


# 3203
"<og>" REMOVE (clb) IF
	(1 %si%-inf)
	(-1 %saa%);


# 3204
"<og>" REMOVE (clb) IF
	(1 %fra%)
	(-1 %til%);


# 3205
"<og>" REMOVE (clb) IF
	(-1C subst)
	(*1C subst LINK 1 komma LINK 1 clb-cnj)
	(*1C subst BARRIER ikke-adv-adj-det);


# 3206
"<og>" REMOVE (clb) IF
	(1 %som%)
	(*2 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK 1 iv)
	(*1C setn-gr LINK *-1 fv LINK NOT *-1 fv);


# 3199
"<og>" REMOVE (clb) IF
	(1 %annen%-fl)
	(-1 %selv%);


# 3196
"<om>" SELECT (pr) IF
	(1 infmerke);


# 3197
"<om>" SELECT (pr) IF
	(1 sbu);


# 3198
"<om>" SELECT (pr) IF
	(1 %lenge%)
	(-1 %langt%);


# 3193
"<om>" SELECT (sbu) IF
	(-1 %selv%)
	(NOT 1 setn-gr);


# 3194
"<om>" SELECT (sbu) IF
	(-1 rel-prn);


# 3195
"<om>" SELECT (sbu) IF
	(-1 %spoerre%)
	(*1C pres/pret BARRIER setn-gr);


# 3192
"<om>" REMOVE (pr) IF
	(1C prn-nom)
	(NOT 2 %som%);


# 3191
"<om>" SELECT (pr) IF
	(*-1 periode-beg/cnj-clb BARRIER %spoerre%)
	(*-1 ikke-poss-det LINK 0 subst)
	(*-1 setn-gr LINK *1 fv LINK 0 %ha% LINK *1 perf-part);


# 3189
"<omvendt>" SELECT (adj nt ind) IF
	(-1 cnj)
	(NOT 1 vblex)
	(-2 komma/strek);


# 3190
"<omvendt>" SELECT (adj nt ind) IF
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr)
	(*-1 %det%-prn BARRIER setn-gr);


# 3188
"<omvendt>" SELECT (perf-part) IF
	(NOT -1 det-pr-infmerke-adjbe OR cnj)
	(NOT -2 be-nt-det)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr)
	(*-1 setn-gr BARRIER %det%-prn);


# 3187
"<opptatt>" SELECT (vblex perf-part) IF
	(1 %ved%)
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 3186
"<opptatt>" REMOVE (vblex perf-part) IF
	(NOT 1 %ved%);


# 3185
"<ost>" REMOVE (adj) IF
	(0 subst);


# 3184
"<ost>" REMOVE (pr) IF
	(0 subst);


# 3183
"<ost>" REMOVE (subst nt) IF
	(0 m);


# 3182
"<overhodet>" SELECT (adv) IF
	(1 %ikke/ingen%);


# 3179
"<per>" REMOVE (pr) IF
	(1 fv)
	(-1C setn-gr);


# 3180
"<per>" REMOVE (pr) IF
	(NOT 1 nom OR pr);


# 3181
"<per>" REMOVE (pr) IF
	(1 subst-prop)
	(-1C setn-gr)
	(2 fv);


# 3178
"<pluss>" REMOVE (subst sg) IF
	(NOT -1 det-nt-ent OR adj-nt);


# 3177
"<pluss>" REMOVE (subst pl) IF
	(NOT -1 pl-det OR adj-fl);


# 3176
"<post>" REMOVE (pr) IF
	(0 subst);


# 3174
"<redd>" SELECT (vblex perf-part) IF
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*1 %seng% BARRIER setn-gr);


# 3175
"<redd>" SELECT (vblex perf-part) IF
	(1 %opp%)
	(*-1 p-hj-vblex BARRIER setn-gr);


# 3172
"<redd>" REMOVE (vblex perf-part) IF
	(*-1 p-hj-vblex BARRIER setn-gr);


# 3173
"<redd>" REMOVE (vblex perf-part) IF
	(NOT 1 %opp%)
	(*-1 setn-gr BARRIER p-hj-vblex)
	(*1 setn-gr BARRIER %seng%);


# 3171
"<rent>" SELECT (vblex perf-part) IF
	(NOT 1 %for%)
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 %ha% BARRIER fv)
	(*-1 %ha% BARRIER perf-part)
	(*-1 %ha% BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 3170
"<rent>" REMOVE (vblex perf-part) IF
	(*-1 setn-gr BARRIER %ha%);


# 3168
"<rett>" SELECT (adj ntindsg) IF
	(1 %til%)
	(-1C vblex)
	(NOT -1 %ha%);


# 3169
"<rett>" SELECT (adj ntindsg) IF
	(1C pr)
	(-1C vblex)
	(NOT 1 %til%);


# 3167
"<rett>" SELECT (subst m) IF
	(1 %til%)
	(-1C %ha%);


# 3165
"<rundt>" SELECT (pr) IF
	(*-1 ub-nt-det LINK *1 ikke-adv-adj);


# 3166
"<rundt>" SELECT (pr) IF
	(NOT 1 det-qnt)
	(NOT *-1 ub-nt-det BARRIER setn-gr);


# 3164
"<råd>" SELECT (subst uboey) IF
	(1 %til%);


# 3161
"<seg>" SELECT (prn) IF
	(-1 subst/prn)
	(*-1 pres/pret BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 3162
"<seg>" SELECT (prn) IF
	(-1 pr);


# 3163
"<seg>" SELECT (prn) IF
	(-1 vblex);


# 3156
"<selv>" SELECT (adv) IF
	(-1 komma/cnj/strek)
	(NOT 1 fv);


# 3157
"<selv>" SELECT (adv) IF
	(-1 setn-gr)
	(NOT 1 fv);


# 3158
"<selv>" SELECT (adv) IF
	(1 %om%)
	(*1 fv BARRIER setn-gr);


# 3159
"<selv>" SELECT (adv) IF
	(-1 replikk)
	(1C pr)
	(-2 setn-gr);


# 3160
"<selv>" SELECT (adv) IF
	(-1 setn-gr)
	(1C pr);


# 3154
"<selv>" SELECT (det) IF
	(1C fv);


# 3155
"<selv>" SELECT (det) IF
	(-1 prn)
	(NOT 1 pr OR subst/adj/prn/det);


# 3151
"<selv>" REMOVE (adv) IF
	(1C %som%-sbu);


# 3152
"<selv>" REMOVE (adv) IF
	(1 komma/cnj/strek)
	(NOT 1 %for%);


# 3153
"<selv>" REMOVE (adv) IF
	(1 <<<);


# 3149
"<selv>" REMOVE (subst sg) IF
	(*-1 det-nt-ent LINK *1 ikke-adv-adj-det);


# 3150
"<selv>" REMOVE (subst sg) IF
	(NOT *-1 det-nt-ent BARRIER setn-gr);


# 3148
"<selv>" REMOVE (subst pl) IF
	(NOT -1 gen OR adj-fl);


# 3147
"<selv>" REMOVE (subst) IF
	(NOT -1 nt-det);


# 3146
"<sett>" SELECT (subst nt sg ind) IF
	(NOT 1 nom)
	(*-1 ub-nt-det BARRIER ikke-adv-adj);


# 3137
"<sett>" SELECT (vblex perf-part) IF
	(-1 advblex)
	(-2 nom)
	(-3 pr);


# 3138
"<sett>" SELECT (vblex perf-part) IF
	(1 fv)
	(-1 advblex)
	(-2 nom)
	(-3 setn-gr)
	(NOT -4 advblex);


# 3139
"<sett>" SELECT (vblex perf-part) IF
	(1 fv)
	(-1 adj-komp)
	(-2 setn-gr)
	(NOT -3 advblex);


# 3140
"<sett>" SELECT (vblex perf-part) IF
	(1 fv)
	(-1 advblex)
	(-2 setn-gr)
	(NOT -3 advblex);


# 3141
"<sett>" SELECT (vblex perf-part) IF
	(-1 advblex)
	(*-1 setn-gr BARRIER nt-det);


# 3142
"<sett>" SELECT (vblex perf-part) IF
	(1 %at%)
	(*-1 det/adj/gen/prop LINK *1 ikke-adv-adj-det);


# 3143
"<sett>" SELECT (vblex perf-part) IF
	(1 %at%)
	(NOT *-1 det/adj/gen/prop BARRIER setn-gr);


# 3144
"<sett>" SELECT (vblex perf-part) IF
	(1 pr)
	(*-1 det/adj/gen/prop LINK *1 ikke-adv-adj-det);


# 3145
"<sett>" SELECT (vblex perf-part) IF
	(1 pr)
	(NOT *-1 det/adj/gen/prop BARRIER setn-gr);


# 3135
"<si>" SELECT (inf) IF
	(-1 %og%)
	(-2 %saa%)


;


# 3136
"<si>" SELECT (inf) IF
	(-1 infmerke)
	(-2 %saa%);


# 3133
"<siden>" SELECT (adv) IF
	(-1C subst)
	(*-1C %for% BARRIER setn-gr);


# 3134
"<siden>" SELECT (adv) IF
	(1 %da%);


# 3128
"<siden>" SELECT (subst m sg def) IF
	(1 %av%)
	(-1 pr);


# 3129
"<siden>" SELECT (subst m sg def) IF
	(-1 nr2-det-m-be);


# 3130
"<siden>" SELECT (subst m sg def) IF
	(-1 be-m-det);


# 3131
"<siden>" SELECT (subst m sg def) IF
	(*-1 nr2-det-m-be LINK *1 be-ent-m-adj)
	(*-1 nr2-det-m-be BARRIER ikke-adv-adj);


# 3132
"<siden>" SELECT (subst m sg def) IF
	(*-1 be-m-det LINK *1 be-ent-m-adj)
	(*-1 be-m-det BARRIER ikke-adv-adj);


# 3127
"<siden>" REMOVE (subst) IF
	(NOT -1 nr2-det-m-be OR be-m-det)
	(NOT -1 be-ent-m-adj OR pr);


# 3126
"<sikt>" SELECT (subst) IF
	(-1 %kort/lang/paa%);


# 3125
"<sikte>" SELECT (subst) IF
	(1 %paa%)
	(NOT -1 komma/cnj)
	(*-1 %ta% BARRIER vblex);


# 3124
"<sikte>" SELECT (vblex inf) IF
	(1 prn)
	(2 %inn%);


# 3123
"<sikter>" SELECT (vblex pres) IF
	(1 prn)
	(*2 ikke-adv LINK 0 %inn%);


# 3122
"<siktet>" SELECT (vblex perf-part) IF
	(1 prn)
	(2 %inn%)
	(*-1 setn-gr LINK *1 p-hj-vblex LINK NOT *1 perf-part);


# 3121
"<siktet>" SELECT (vblex pret) IF
	(1 prn)
	(*2 ikke-adv LINK 0 %inn%)
	(*-1 setn-gr BARRIER p-hj-vblex);


# 3120
"<sist>" REMOVE (adj) IF
	(0 adv)
	(NOT 1 ub-ent-subst);


# 3115
"<sjøl>" SELECT (adv) IF
	(-1 komma/cnj/strek)
	(NOT 1 fv);


# 3116
"<sjøl>" SELECT (adv) IF
	(-1 setn-gr)
	(NOT 1 fv);


# 3117
"<sjøl>" SELECT (adv) IF
	(1 %om%)
	(*1 fv BARRIER setn-gr);


# 3118
"<sjøl>" SELECT (adv) IF
	(-1 replikk)
	(1C pr)
	(-2 setn-gr);


# 3119
"<sjøl>" SELECT (adv) IF
	(-1 setn-gr)
	(1C pr);


# 3113
"<sjøl>" SELECT (det) IF
	(1C fv);


# 3114
"<sjøl>" SELECT (det) IF
	(-1 prn)
	(NOT 1 pr OR subst/adj/prn/det);


# 3111
"<sjøl>" REMOVE (adv) IF
	(1 komma/cnj/strek)
	(NOT 1 %for%);


# 3112
"<sjøl>" REMOVE (adv) IF
	(1 <<<);


# 3109
"<slags>" SELECT (subst m) IF
	(1 subst-m)
	(-1 m-det OR f-det)
	(NOT 1 subst-f);


# 3110
"<slags>" SELECT (subst m) IF
	(-1 m-det)
	(NOT -1 f-det);


# 3107
"<slags>" SELECT (subst nt uboey) IF
	(NOT -1 det);


# 3108
"<slags>" SELECT (subst nt uboey) IF
	(NOT -1 nt-det)
	(*-1 setn-gr LINK 0 %hva%);


# 3105
"<slags>" SELECT (subst nt) IF
	(-1 nt-det);


# 3106
"<slags>" SELECT (subst nt) IF
	(-1 pl-det);


# 3104
"<slags>" SELECT (subst f) IF
	(-1 f-det)
	(NOT -1 m-det);


# 3103
"<slags>" REMOVE (nt) IF
	(-1 m-det OR f-det)
	(NOT 1 subst/adj);


# 3102
"<slags>" REMOVE (subst nt sg) IF
	(-1 pl-det);


# 3101
"<slags>" REMOVE (subst nt pl) IF
	(-1 nt-det);


# 3100
"<slett>" SELECT (adj pos nt) IF
	(1 %ikke/ingen%);


# 3099
"<slettes>" SELECT (adv) IF
	(1 %ikke/ingen%);


# 3097
"<slik>" SELECT (adv) IF
	(NOT 1 ub-ent-f-subst OR ub-ent-m-subst)
	(NOT 1 m-det OR f-det)
	(NOT -1 ub-m-det OR ub-f-det);


# 3098
"<slik>" SELECT (adv) IF
	(1 %at%);


# 3096
"<sliter>" REMOVE (subst m sg) IF
	(*-1 ikke-adv-adj LINK NOT 0 det-m-ent);


# 3095
"<slutt>" SELECT (subst) IF
	(-1 %til%);


# 3094
"<slutt>" REMOVE (adj) IF
	(*-1 setn-gr BARRIER kop);


# 3087
"<som>" SELECT (pr) IF
	(NOT 1 perf-part)
	(-1 >>> LINK NOT *1 fv)
	(*1C <<< LINK *-1 fv LINK NOT *-1 fv);


# 3088
"<som>" SELECT (pr) IF
	(*-2C sbu-ren BARRIER fv)
	(*1C <<< LINK *-1 fv LINK NOT *-1 fv);


# 3089
"<som>" SELECT (pr) IF
	(1 %helst%)
	(-1 %naar%);


# 3090
"<som>" SELECT (pr) IF
	(1 %helst%)
	(-1 %hvem%);


# 3091
"<som>" SELECT (pr) IF
	(1 %vanlig%);


# 3092
"<som>" SELECT (pr) IF
	(1 %oftest%);


# 3093
"<som>" SELECT (pr) IF
	(1 prn-akk)
	(NOT 1 prn-nom);


# 3078
"<som>" SELECT (sbu) IF
	(NOT -1 >>>)
	(*2 nom LINK -1 pres/pret LINK 0 kop LINK NOT *-1 ikke-adv);


# 3079
"<som>" SELECT (sbu) IF
	(NOT -1 >>>)
	(*3 subst LINK *-1 ikke-adv-adj-det LINK 0 pres/pret LINK NOT 0 %for/foer/naar% LINK NOT *-1 ikke-adv)
	(*1 pres/pret LINK 1 det);


# 3080
"<som>" SELECT (sbu) IF
	(NOT -1 >>>)
	(*2 subst LINK *-1 ikke-adv-adj-det LINK 0 pres/pret LINK NOT 0 %for/foer/naar% LINK NOT 0 <perf-part> LINK NOT *-1 ikke-adv)
	(*1 pres/pret LINK NOT 1 tegnsetting LINK NOT 0 cnj);


# 3081
"<som>" SELECT (sbu) IF
	(NOT -1 >>>)
	(*2 be-subst LINK *-1 ikke-adv-adj-det LINK 0 pres/pret LINK NOT 0 %for/foer/naar% LINK NOT *-1 ikke-adv);


# 3082
"<som>" SELECT (sbu) IF
	(NOT -1 >>>)
	(*2 prn LINK -1 pres/pret LINK NOT 0 %for/foer/naar% LINK NOT *-1 ikke-adv);


# 3083
"<som>" SELECT (sbu) IF
	(NOT -1 >>>)
	(*2 iv LINK -1 pres/pret LINK NOT 0 adv LINK NOT *-1 ikke-adv);


# 3084
"<som>" SELECT (sbu) IF
	(NOT -1 >>>)
	(*1C pres/pret BARRIER ikke-adv);


# 3085
"<som>" SELECT (sbu) IF
	(1 pr)
	(NOT 1 %om%)
	(NOT 2 tegnsetting)
	(*2 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 pres/pret LINK NOT 0 ikke-pres-pret);


# 3086
"<som>" SELECT (sbu) IF
	(1C pr)
	(*2C pres/pret LINK 1 advblex/komp/ub-sup/pres-part LINK *1 ikke-adv-komp-ub-sup LINK NOT 0 nom);


# 3077
"<spent>" SELECT (perf-part) IF
	(1 %fra/for/ut%)
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 3076
"<spent>" REMOVE (perf-part) IF
	(NOT 1 %fra/for/ut%);


# 3075
"<stand>" SELECT (subst sg) IF
	(-1 %i%);


# 3074
"<stikk>" SELECT (adv) IF
	(1 %motsatt%);


# 3073
"<stolt>" REMOVE (vblex) IF
	(*1C setn-gr BARRIER paa);


# 3072
"<svart>" SELECT (vblex perf-part) IF
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 %ha/faa% BARRIER fv)
	(*-1 %ha/faa% BARRIER perf-part)
	(*-1 %ha/faa% BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 3071
"<svart>" REMOVE (vblex perf-part) IF
	(*-1 setn-gr BARRIER %ha/faa%);


# 3054
"<så>" SELECT (adv) IF
	(1 %videre%)
	(-1 %og%);


# 3055
"<så>" SELECT (adv) IF
	(-1 %vel%);


# 3056
"<så>" SELECT (adv) IF
	(1 pres/pret)
	(-1 setn-gr)
	(NOT 1 farlige-vblex);


# 3057
"<så>" SELECT (adv) IF
	(1C ub-ent-nt-adj)
	(*-1 pres/pret BARRIER setn-gr);


# 3058
"<så>" SELECT (adv) IF
	(1C ub-ent-nt-adj)
	(*1 pres/pret BARRIER setn-gr);


# 3059
"<så>" SELECT (adv) IF
	(1 interj)
	(2 komma);


# 3060
"<så>" SELECT (adv) IF
	(1C adj-fl);


# 3061
"<så>" SELECT (adv) IF
	(1C ub-ent-m-adj);


# 3062
"<så>" SELECT (adv) IF
	(1 adj)
	(-1 komma);


# 3063
"<så>" SELECT (adv) IF
	(1C fv);


# 3064
"<så>" SELECT (adv) IF
	(1C adj)
	(-1C inf);


# 3065
"<så>" SELECT (adv) IF
	(1C adj)
	(-1C fv);


# 3066
"<så>" SELECT (adv) IF
	(1 adj)
	(-1 advblex);


# 3067
"<så>" SELECT (adv) IF
	(1 %og%)
	(2 %si%-inf);


# 3068
"<så>" SELECT (adv) IF
	(1 infmerke)
	(2 %si%-inf);


# 3069
"<så>" SELECT (adv) IF
	(1 %lenge%);


# 3070
"<så>" SELECT (adv) IF
	(1 adv/adj-nt-ub)
	(*2 ikke-pr LINK 0 %som/at%);


# 3053
"<så>" SELECT (clb cnj) IF
	(-1 komma)
	(NOT 1 adj OR fv)
	(*1 setn-gr LINK *-1 pres/pret LINK NOT -1 advblex);


# 3049
"<så>" SELECT (sbu) IF
	(-1 prn-akk)
	(-2 imp)
	(*1 setn-gr LINK *-1 pres/pret LINK NOT *-1 ikke-adv-adj-subst-prn-det);


# 3050
"<så>" SELECT (sbu) IF
	(-1 imp)
	(*1 setn-gr LINK *-1 pres/pret LINK NOT *-1 ikke-adv-adj-subst-prn-det);


# 3051
"<så>" SELECT (sbu) IF
	(1 nom)
	(-1C fv)
	(*2 ikke-poss-det LINK 0 pres/pret LINK NOT 0 ikke-pres-pret);


# 3052
"<så>" SELECT (sbu) IF
	(-1 komma)
	(1C nom)
	(*1 setn-gr LINK *-1 pres/pret LINK NOT 0 farlige-vblex LINK -1 advblex LINK NOT *-1 pres/pret);


# 3040
"<så>" SELECT (vblex pret) IF
	(-1C subst/prn)
	(NOT -1 %noen% OR gen)
	(*-2C setn-gr LINK 1 pr LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*1 setn-gr BARRIER fv);


# 3041
"<så>" SELECT (vblex pret) IF
	(1 prn-akk)
	(*-1 setn-gr BARRIER fv)
	(*1 setn-gr BARRIER pres/pret);


# 3042
"<så>" SELECT (vblex pret) IF
	(-1 komma/cnj OR clb)
	(NOT 1 %videre% OR advblex)
	(NOT 1 komma OR setn-gr)
	(NOT -1 %for%)
	(NOT -2 %saa% OR >>>)
	(NOT -3 %saa%)
	(*2 setn-gr BARRIER pres/pret);


# 3043
"<så>" SELECT (vblex pret) IF
	(1 nom/at)
	(-1C subst)
	(NOT 1 fv OR advblex)
	(NOT -1 gen OR %hundre/tusen/osv%)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*-2C setn-gr LINK NOT 1 pr);


# 3044
"<så>" SELECT (vblex pret) IF
	(1 advblex)
	(-1C subst/prn)
	(2 nom/at)
	(NOT 2 fv)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 3045
"<så>" SELECT (vblex pret) IF
	(1 nom/at)
	(-1C subst/prn)
	(NOT 1 fv OR infmerke)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det)
	(*-2C setn-gr BARRIER imp);


# 3046
"<så>" SELECT (vblex pret) IF
	(-1C subst/prn)
	(NOT -1 %noen% OR gen)
	(*-2C setn-gr LINK 1 pr LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det2)
	(*1 setn-gr BARRIER fv);


# 3047
"<så>" SELECT (vblex pret) IF
	(-1C prn)
	(NOT *1 overskrift BARRIER setn-gr)
	(-2C setn-gr)
	(*1 setn-gr BARRIER fv);


# 3048
"<så>" SELECT (vblex pret) IF
	(*-2C setn-gr LINK 1 advblex LINK NOT *1 ikke-adv)
	(*1C setn-gr BARRIER fv);


# 3039
"<så>" REMOVE (subst) IF
	(0 m);


# 3037
"<så>" REMOVE (vblex inf) IF
	(1 inf)
	(*-1 int-setn-gr BARRIER m-hj-vblex)
	(*-1 int-setn-gr BARRIER infmerke);


# 3038
"<så>" REMOVE (vblex inf) IF
	(NOT 1 nom OR %til%)
	(*-1 int-setn-gr BARRIER m-hj-vblex)
	(*-1 int-setn-gr BARRIER infmerke);


# 3036
"<så>" REMOVE (vblex pret) IF
	(-1 nom)
	(NOT 1 adv OR pr)
	(NOT -2 subst)

;


# 3035
"<særlig>" SELECT (nt) IF
	(NOT 1 subst-mf-ent-ub);


# 3034
"<tanker>" REMOVE (vblex pres) IF
	(NOT 1 %opp%);


# 3033
"<tapt>" SELECT (vblex perf-part) IF
	(*-1 vblex LINK 0 %gaa%);


# 3032
"<tatt>" SELECT (perf-part) IF
	(-2 %det%)
	(-3 %i%);


# 3031
"<tids>" REMOVE (adj) IF
	(0 subst);


# 3022
"<til>" SELECT (pr) IF
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-det-pr);


# 3023
"<til>" SELECT (pr) IF
	(*-1 clb-cnj BARRIER ikke-adv-adj-subst-det-pr);


# 3024
"<til>" SELECT (pr) IF
	(1 %en%)
	(2 %viss%)
	(3 %grad%);


# 3025
"<til>" SELECT (pr) IF
	(-1 %og%)
	(-2 %av%);


# 3026
"<til>" SELECT (pr) IF
	(1 %slutt%);


# 3027
"<til>" SELECT (pr) IF
	(1 %tross%);


# 3028
"<til>" SELECT (pr) IF
	(1 %de%)
	(2 %grader%);


# 3029
"<til>" SELECT (pr) IF
	(-1 trans12/til);


# 3030
"<til>" SELECT (pr) IF
	(1C akk);


# 3020
"<til>" REMOVE (sbu) IF
	(*-1C setn-gr BARRIER pres/pret)
	(*1 pres/pret LINK *1 clb-cnj LINK NOT 1 pres/pret);


# 3021
"<til>" REMOVE (sbu) IF
	(*-1C setn-gr BARRIER pres/pret)
	(*1 pres/pret LINK NOT *1 clb-cnj);


# 3019
"<timer>" REMOVE (vblex pres) IF
	(NOT 1 nom OR %at%);


# 3018
"<tre>" SELECT (vblex inf) IF
	(1 pr/@adv)
	(-1 m-hj-vblex);


# 3016
"<tross>" SELECT (pr) IF
	(1 %for%)
	(-1 %til%);


# 3017
"<tross>" SELECT (pr) IF
	(1 %alt%);


# 3014
"<tusen>" SELECT (det pl) IF
	(*-1 qnt-med-flere LINK *1 ikke-adv-adj);


# 3015
"<tusen>" SELECT (det pl) IF
	(NOT *-1 qnt-med-flere BARRIER setn-gr);


# 3013
"<tusen>" SELECT (subst nt sg) IF
	(*-1 det-ent-nt-halvt BARRIER ikke-adv-adj);


# 3012
"<tusen>" SELECT (subst nt pl) IF
	(*-1 qnt-med-flere LINK NOT 0 det-ent-nt-halvt LINK NOT *1 ikke-adv-adj);


# 3010
"<tvert>" SELECT (adv) IF
	(1 %i%)
	(2 %mot%);


# 3011
"<tvert>" SELECT (adv) IF
	(1 %imot%);


# 3007
"<under>" REMOVE (subst sg) IF
	(*-1 det-nt-ent BARRIER ub-det);


# 3008
"<under>" REMOVE (subst sg) IF
	(*-1 det-nt-ent/poss/gen LINK *1 ikke-adv-adj-det);


# 3009
"<under>" REMOVE (subst sg) IF
	(NOT *-1 det-nt-ent OR poss/gen);


# 3005
"<under>" REMOVE (subst pl) IF
	(*-1 pl-adj/fl-det/poss/gen LINK *1 ikke-adv-adj-det);


# 3006
"<under>" REMOVE (subst pl) IF
	(NOT *-1 pl-adj/fl-det OR poss/gen);


# 3004
"<vann>" REMOVE (vblex pret) IF
	(0 subst);


# 3002
"<var>" SELECT (adj pos mf) IF
	(-1 %foere%)
	(-2 %vaere%);


# 3003
"<var>" SELECT (adj pos mf) IF
	(*-1 ub-det LINK 0 mf LINK NOT *1 ikke-adv-adj)
	(*1 ub-ent-mf-subst BARRIER ikke-adv-adj);


# 3001
"<var>" SELECT (subst nt) IF
	(*-1 %et% BARRIER ikke-adv-adj);


# 2999
"<var>" REMOVE (adj pos mf) IF
	(NOT -1 %foere%)
	(*1 ikke-adv-adj BARRIER ub-ent-mf-subst);


# 3000
"<var>" REMOVE (adj pos mf) IF
	(NOT -1 %foere%)
	(*-1 ikke-adv-adj LINK NOT 0 ub-det LINK NOT 0 mf);


# 2998
"<var>" REMOVE (subst nt) IF
	(0 subst);


# 2997
"<ved>" REMOVE (subst) IF
	(NOT -1 pr)
	(*-1 setn-gr BARRIER %hogge/sage/kappe/fyre%)
	(*1 setn-gr BARRIER %hogge/sage/kappe/fyre%);


# 2993
"<vel>" SELECT (adv) IF
	(1 qnt)
	(*1 fv BARRIER setn-gr);


# 2994
"<vel>" SELECT (adv) IF
	(1 qnt)
	(*-1 fv BARRIER setn-gr);


# 2995
"<vel>" SELECT (adv) IF
	(1C adj);


# 2996
"<vel>" SELECT (adv) IF
	(1 %saa%);


# 2992
"<vel>" SELECT (subst nt uboey) IF
	(-1 %og%)
	(-2 %ve%);


# 2991
"<vel>" SELECT (subst) IF
	(-1 subst-prop)
	(1C vblex)
	(*-2 ikke-subst-adj-det-adv LINK NOT 0 sbu);


# 2988
"<vel>" REMOVE (subst) IF
	(NOT -1 subst-prop)
	(NOT -2 %ve%)
	(*-1 pl-det LINK *1 ikke-adv-adj);


# 2989
"<vel>" REMOVE (subst) IF
	(NOT -1 subst-prop)
	(NOT -2 %ve%)
	(*-1 nt-det LINK *1 ikke-adv-adj);


# 2990
"<vel>" REMOVE (subst) IF
	(NOT *-1 ub-nt-det OR pl-det)
	(NOT -1 subst-prop)
	(NOT -2 %ve%);


# 2987
"<verken>" SELECT (cnj <adv>) IF
	(*1 %eller% BARRIER setn-gr);


# 2985
"<verken>" REMOVE (subst sg ind) IF
	(*-1 ub-nt-det LINK *1 ikke-adv-adj);


# 2986
"<verken>" REMOVE (subst sg ind) IF
	(NOT *-1 ub-nt-det BARRIER setn-gr);


# 2984
"<vi>" SELECT (prn) IF
	(*1 fv BARRIER setn-gr);


# 2983
"<via>" SELECT (pr) IF
	(1 nom)
	(*1C setn-gr BARRIER %brudeparet/paret%)
	(*-1C setn-gr BARRIER %brudeparet/paret%);


# 2979
"<ville>" REMOVE (adj def sg) IF
	(1 komma/cnj)
	(NOT 2 subst/adj-ent-be);


# 2980
"<ville>" REMOVE (adj def sg) IF
	(NOT 1 subst-ent/komma/cnj)
	(*-1 be-det-ent BARRIER ikke-adv-adj);


# 2981
"<ville>" REMOVE (adj def sg) IF
	(*-1 be-det-ent LINK *1 ikke-adv-adj);


# 2982
"<ville>" REMOVE (adj def sg) IF
	(NOT *-1 be-det-ent BARRIER setn-gr);


# 2974
"<ville>" REMOVE (adj pl) IF
	(1 inf/perf-part);


# 2975
"<ville>" REMOVE (adj pl) IF
	(NOT 1 pl-subst)
	(NOT -1 advblex OR kop)
	(*-1 pl-det BARRIER ikke-adv-adj);


# 2976
"<ville>" REMOVE (adj pl) IF
	(NOT -1 advblex OR kop)
	(*-1 pl-det LINK *1 ikke-adv-adj);


# 2977
"<ville>" REMOVE (adj pl) IF
	(1 komma/cnj)
	(NOT -1 advblex OR kop)
	(NOT 2 subst/adj-fl);


# 2978
"<ville>" REMOVE (adj pl) IF
	(NOT 1 subst-fl/komma/cnj)
	(NOT *-1 pl-det BARRIER setn-gr)
	(NOT -1 advblex OR kop);


# 2973
"<ville>" REMOVE (subst appell sg ind) IF
	(0 mf);


# 2972
"<ville>" REMOVE (vblex imp) IF
	(0 pret);


# 2970
"<visst>" SELECT (adj pos ntindsg) IF
	(-1 kop)
	(1C adj)
	(-1C pres/pret);


# 2971
"<visst>" SELECT (adj pos ntindsg) IF
	(-1 hj-vblex)
	(*1 perf-part/inf BARRIER setn-gr);


# 2969
"<være>" REMOVE (subst nt) IF
	(NOT -1 %et%);


# 2966
"<å>" SELECT (inf-merke) IF
	(1 advblex)
	(2 inf);


# 2967
"<å>" SELECT (inf-merke) IF
	(1 anf)
	(2 inf);


# 2968
"<å>" SELECT (inf-merke) IF
	(1 inf);


# 2965
"<å>" SELECT (interj) IF
	(1 komma-interj)
	(-1 s-gr/interj);


# 2964
"<åtte>" REMOVE (<perf-part>) IF
	(0 det);


# 2963
"<åtte>" REMOVE (vblex pret) IF
	(0 det);


# 2951
SELECT (<adv>) IF
	(1 nom)
	(-1 fv);


# 2952
SELECT (<adv>) IF
	(NOT 0 adj-komp)
	(-1C vblex)
	(NOT 1 nom)
	(NOT -1 %ha% OR kop)
	(*-1 setn-gr BARRIER kop-fv);


# 2953
SELECT (<adv>) IF
	(-1 kop)
	(1C adj)
	(-1C pres/pret);


# 2954
SELECT (<adv>) IF
	(-1 subst/prn)
	(*-4 setn-gr LINK 1 adv)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det);


# 2955
SELECT (<adv>) IF
	(-1 subst/prn)
	(*-4 setn-gr LINK 1 pr)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det);


# 2956
SELECT (<adv>) IF
	(-1 subst/prn)
	(1C perf-part/inf)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det);


# 2957
SELECT (<adv>) IF
	(1C perf-part/inf)
	(-1C fv);


# 2958
SELECT (<adv>) IF
	(1C fv)
	(-1C subst)
	(NOT -1 subst-gen);


# 2959
SELECT (<adv>) IF
	(-1 prn-pers)
	(1C fv);


# 2960
SELECT (<adv>) IF
	(1C fv)
	(-1C setn-gr);


# 2961
SELECT (<adv>) IF
	(1C adv);


# 2962
SELECT (<adv>) IF
	(1C adj)
	(-1C det);


#
;


# 2911
SELECT (adj def sg) IF
	(NOT 0 pres/pret OR inf)
	(1 be-ent-nt-subst)
	(NOT 1 ikke-subst)
	(NOT -1 det);


# 2912
SELECT (adj def sg) IF
	(NOT 0 pres/pret OR inf)
	(1 be-ent-f-subst)
	(NOT 1 ikke-subst)
	(NOT -1 det);


# 2913
SELECT (adj def sg) IF
	(NOT 0 pres/pret OR inf)
	(1 be-ent-m-subst)
	(NOT 1 ikke-subst)
	(NOT -1 det);


# 2914
SELECT (adj def sg) IF
	(NOT 0 det OR subst)
	(-1C be-nt-det)
	(NOT 1 subst/adj OR komma/cnj)
	(NOT -1 poss-det);


# 2915
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR det)
	(NOT 0 subst OR fv)
	(-1C be-nt-det)
	(NOT 1 subst/adj OR komma/cnj);


# 2916
SELECT (adj def sg) IF
	(NOT 0 det OR subst)
	(-1 be-m-det)
	(NOT 1 subst/adj OR komma/cnj)
	(NOT -1 ikke-det OR poss-det);


# 2917
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR det)
	(NOT 0 subst OR fv)
	(-1 be-m-det)
	(NOT 1 subst/adj OR komma/cnj)
	(NOT -1 ikke-det);


#
;


# 2918
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR %andre%)
	(*-1C prop-det-ent BARRIER ikke-adv-adj)
	(*1 ub-ent-subst BARRIER ikke-adv-adj);


# 2919
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR %andre%)
	(*-1C prop-det-ent BARRIER ikke-adv-adj)
	(*1 be-ent-subst BARRIER ikke-adv-adj);


# 2920
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1C subst-gen BARRIER ikke-adv-adj)
	(*1 ub-ent-subst LINK NOT 0 pl-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-subst LINK NOT -1 komma/cnj);


# 2921
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1C subst-gen BARRIER ikke-adv-adj)
	(*1 ub-ent-subst LINK NOT 0 pl-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-subst LINK NOT -1 komma/cnj);


# 2922
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1C subst-gen BARRIER ikke-adv-adj)
	(*1 be-ent-subst BARRIER ikke-adv-adj)
	(*1 be-ent-subst LINK NOT -1 komma/cnj);


# 2923
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1C subst-gen BARRIER ikke-adv-adj)
	(*1 be-ent-subst BARRIER ikke-adv-adj)
	(*1 be-ent-subst LINK NOT -1 komma/cnj)


;


# 2924
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 nr2-det-m-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-m-ub LINK -1 poss-det)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj);


# 2925
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-m-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-m-ub LINK -1 poss-det)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj);


# 2926
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 poss-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2927
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 poss-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2928
SELECT (adj def sg) IF
	(NOT 0 ub-ent-nt-adj OR farlige-adj)
	(1 adj)
	(*-1 nr2-det-nt-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-nt-ub LINK -1 poss-det)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT -1 komma/cnj);


# 2929
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-nt-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-nt-ub LINK -1 poss-det)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT -1 komma/cnj);


# 2930
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 nr2-det-m-be BARRIER ikke-adv-adj)
	(*1 be-ent-m-subst BARRIER ikke-adv-adj)
	(*1 be-ent-m-subst LINK NOT -1 komma/cnj);


# 2931
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-m-be BARRIER ikke-adv-adj)
	(*1 be-ent-m-subst BARRIER ikke-adv-adj)
	(*1 be-ent-m-subst LINK NOT -1 komma/cnj);


# 2932
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 nr2-det-f-be BARRIER ikke-adv-adj)
	(*1 be-ent-f-subst BARRIER ikke-adv-adj)
	(*1 be-ent-f-subst LINK NOT -1 komma/cnj);


# 2933
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-f-be BARRIER ikke-adv-adj)
	(*1 be-ent-f-subst BARRIER ikke-adv-adj)
	(*1 be-ent-f-subst LINK NOT -1 komma/cnj);


# 2934
SELECT (adj def sg) IF
	(NOT 0 ub-ent-nt-adj OR farlige-adj)
	(1 adj)
	(*-1 nr2-det-nt-be BARRIER ikke-adv-adj)
	(*1 be-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 be-ent-nt-subst LINK NOT -1 komma/cnj);


# 2935
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-nt-be BARRIER ikke-adv-adj)
	(*1 be-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 be-ent-nt-subst LINK NOT -1 komma/cnj);


# 2936
SELECT (adj def sg) IF
	(NOT 0 adj-sup-be OR farlige-adj)
	(*-1C be-m-det BARRIER ikke-adv-adj)
	(*1 subst-prop BARRIER ikke-adv-adj)
	(*1 subst-prop LINK NOT -1 komma);


# 2937
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 be-m-det LINK NOT 0 ikke-det LINK NOT *1 ikke-adv-adj)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj);


# 2938
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 be-m-det LINK NOT 0 ikke-det LINK NOT *1 ikke-adv-adj)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj);


# 2939
SELECT (adj def sg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 be-f-det LINK NOT 0 ikke-det LINK NOT *1 ikke-adv-adj)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2940
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 be-f-det LINK NOT 0 ikke-det LINK NOT *1 ikke-adv-adj)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2941
SELECT (adj def sg) IF
	(NOT 0 ub-ent-nt-adj OR farlige-adj)
	(1 adj)
	(*-1 be-nt-det LINK NOT 0 ikke-det LINK NOT 0 pl-det LINK NOT *1 ikke-adv-adj)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT -1 komma/cnj);


# 2942
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 be-nt-det LINK NOT 0 ikke-det LINK NOT 0 pl-det LINK NOT *1 ikke-adv-adj)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT -1 komma/cnj);


# 2943
SELECT (adj def sg) IF
	(NOT 0 ub-ent-nt-adj OR farlige-adj)
	(1 adj)
	(*-1 be-m-det BARRIER ikke-adv-adj)
	(*1 be-ent-m-subst BARRIER ikke-adv-adj)
	(*1 be-ent-m-subst LINK NOT -1 komma/cnj);


# 2944
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 be-m-det BARRIER ikke-adv-adj)
	(*1 be-ent-m-subst BARRIER ikke-adv-adj)
	(*1 be-ent-m-subst LINK NOT -1 komma/cnj);


# 2945
SELECT (adj def sg) IF
	(NOT 0 adj-sup-be OR farlige-adj)
	(*-1C be-f-det BARRIER ikke-adv-adj)
	(*1 subst-prop BARRIER ikke-adv-adj)
	(*1 subst-prop LINK NOT -1 komma);


# 2946
SELECT (adj def sg) IF
	(NOT 0 ub-ent-nt-adj OR farlige-adj)
	(1 adj)
	(*-1 be-f-det BARRIER ikke-adv-adj)
	(*1 be-ent-f-subst BARRIER ikke-adv-adj)
	(*1 be-ent-f-subst LINK NOT -1 komma/cnj);


# 2947
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 be-f-det BARRIER ikke-adv-adj)
	(*1 be-ent-f-subst BARRIER ikke-adv-adj)
	(*1 be-ent-f-subst LINK NOT -1 komma/cnj);


# 2948
SELECT (adj def sg) IF
	(NOT 0 adj-sup-be OR farlige-adj)
	(*-1C be-nt-det BARRIER ikke-adv-adj)
	(*1 subst-prop BARRIER ikke-adv-adj)
	(*1 subst-prop LINK NOT -1 komma);


# 2949
SELECT (adj def sg) IF
	(NOT 0 ub-ent-nt-adj OR farlige-adj)
	(1 adj)
	(*-1 be-nt-det BARRIER ikke-adv-adj)
	(*1 be-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 be-ent-nt-subst LINK NOT -1 komma/cnj);


# 2950
SELECT (adj def sg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 be-nt-det BARRIER ikke-adv-adj)
	(*1 be-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 be-ent-nt-subst LINK NOT -1 komma/cnj);


#
;


# 2909
SELECT (adj def) IF
	(0 orden)
	(NOT 0 %andre%)
	(NOT 1 pl OR pres-part)
	(NOT -1 ub-det OR pl-det);


# 2910
SELECT (adj def) IF
	(NOT 0 subst)
	(1 %av%)
	(*-1 dem BARRIER ikke-adv);


# 2868
SELECT (adj pl) IF
	(1 be-fl-subst)
	(-1 cnj)
	(-2 adj-fl)
	(*-3 pl-det BARRIER ikke-adv-adj-cnj);


# 2869
SELECT (adj pl) IF
	(NOT 0 pres/pret)
	(1 komma)
	(NOT 2 pl-adj/advblex)
	(*-1 ikke-adv LINK 0 cnj LINK NOT 0 <adv> LINK -1C adj-fl LINK NOT 0 sg);


# 2870
SELECT (adj pl) IF
	(NOT 0 pres/pret)
	(NOT 1 ub-fl-subst OR komma)
	(*-1 ikke-adv LINK 0 cnj LINK NOT 0 <adv> LINK -1C adj-fl LINK NOT 0 sg);


# 2871
SELECT (adj pl) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 %seg% BARRIER ikke-adv)
	(*-1 %seg% LINK -1C objpred-prn-vblex LINK *-1 nom LINK 0 nom-fl);


# 2872
SELECT (adj pl) IF
	(NOT 0 farlige-adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 prn-akk-fl BARRIER ikke-adv)
	(*-1 prn-akk-fl LINK -1C objpred-prn-vblex LINK NOT -1 clb);


# 2873
SELECT (adj pl) IF
	(NOT 0 farlige-adj)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 be-fl-subst BARRIER ikke-adv)
	(*-1 be-fl-subst LINK *-1C objpred-vblex LINK NOT -1 clb)
	(*-1 objpred-vblex BARRIER ikke-adv-adj-det-subst);


# 2874
SELECT (adj pl) IF
	(NOT 0 adv OR perf-part)
	(NOT 1 komma OR perf-part)
	(*-1 kop LINK 0 iv LINK NOT *1 ikke-adv)
	(*-1 %som% BARRIER ikke-adv-vblex)
	(*-1 %som% LINK -1 nom-fl);


# 2875
SELECT (adj pl) IF
	(NOT 0 adv OR perf-part)
	(NOT 1 komma OR perf-part)
	(*-1 kop LINK 0 fv LINK NOT *1 ikke-adv)
	(*-1 %som% BARRIER ikke-adv-vblex)
	(*-1 %som% LINK -1 nom-fl);


# 2876
SELECT (adj pl) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-fl)
	(*-4C clb-komma LINK 1C fv LINK 0 hj-vblex)
	(*-3C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2877
SELECT (adj pl) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-fl)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-3C clb-komma LINK 1C fv LINK 0 kop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2878
SELECT (adj pl) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-fl)
	(*-5 setn-gr LINK 1 adv LINK 1 fv LINK 0 hj-vblex)
	(*-3C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2879
SELECT (adj pl) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-fl)
	(*-6 setn-gr LINK 1 pr)
	(*-3C fv LINK 0 hj-vblex LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2880
SELECT (adj pl) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-fl)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-4 setn-gr LINK 1 adv LINK 1 fv LINK 0 kop)
	(*-2C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2881
SELECT (adj pl) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-fl)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-5 setn-gr LINK 1 pr)
	(*-2C fv LINK 0 kop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2882
SELECT (adj pl) IF
	(NOT 0 det)
	(-1 %hundre/tusen/osv%)
	(*1 pl-subst BARRIER ikke-adv-adj);


# 2883
SELECT (adj pl) IF
	(0 orden)
	(NOT 0 %andre%)
	(NOT -1 ub-det)
	(*1 pl-subst LINK NOT 0 sg LINK NOT *-1 ikke-adv-adj);


#
;


# 2884
SELECT (adj pl) IF
	(1 ub-fl-subst)
	(-1 cnj)
	(NOT 1 ikke-subst)
	(NOT -1 clb)
	(-2C adj-fl);


# 2885
SELECT (adj pl) IF
	(1 setn-gr)
	(-1 cnj)
	(NOT 1 sbu)
	(NOT -1 clb)
	(-2C adj-fl);


# 2886
SELECT (adj pl) IF
	(NOT 0 ikke-adj)
	(1 cnj)
	(NOT 1 clb)
	(2C adj-fl)
	(NOT 2 <pres-part>);


# 2887
SELECT (adj pl) IF
	(NOT 0 subst)
	(1 %av%)
	(*-1 dem LINK 0 pl LINK NOT *1 ikke-adv);


# 2888
SELECT (adj pl) IF
	(0 subst)
	(NOT 0 ikke-adj-subst)
	(1C pl-subst)
	(NOT -1 det);


# 2889
SELECT (adj pl) IF
	(-1 adj-sup-ub)
	(NOT 1 subst/adj)
	(-2 pl-det);


# 2890
SELECT (adj pl) IF
	(NOT 0 subst OR fv)
	(1 komma/cnj)
	(-1C pl-det)
	(NOT 1 subst/adj)
	(NOT 2 adj);


# 2891
SELECT (adj pl) IF
	(NOT 0 subst OR fv)
	(-1C pl-det)
	(NOT 1 subst/adj);


# 2892
SELECT (adj pl) IF
	(0 pos-be-ent)
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 nr2-det OR pos-ub-ent)
	(1 pl-subst)
	(1C subst)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(*-1 det-gen LINK *1 ikke-adv-adj-det2);


# 2893
SELECT (adj pl) IF
	(0 pos-be-ent)
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 nr2-det OR pos-ub-ent)
	(1 pl-subst)
	(1C subst)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(*-1C setn-gr BARRIER det-gen);


# 2894
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 nr2-det OR subst)
	(1 komma/cnj)
	(NOT 1 prn OR clb)
	(NOT -1 subst-gen)
	(2C adj-fl)
	(*-1C setn-gr BARRIER det-gen);


# 2895
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 vblex OR nr2-det)
	(NOT 0 det OR subst)
	(NOT 0 adj-ub-ent OR ub-ent-nt-adj)
	(1 adj)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(*-1 det-gen LINK *1 ikke-adv-adj-det2)
	(*1 pl-subst BARRIER ikke-adv-adj);


# 2896
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 vblex OR nr2-det)
	(NOT 0 det OR subst)
	(NOT 0 adj-ub-ent OR ub-ent-nt-adj)
	(1 adj)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(*-1C setn-gr BARRIER det-gen)
	(*1 pl-subst BARRIER ikke-adv-adj);


# 2897
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 vblex OR nr2-det)
	(NOT 0 det OR subst)
	(NOT 0 pr OR adj-ub-ent)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(NOT 1C adj)
	(*-1 det-gen LINK *1 ikke-adv-adj-det2)
	(*1 pl-subst BARRIER ikke-adv-adj);


# 2898
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 vblex OR nr2-det)
	(NOT 0 det OR subst)
	(NOT 0 pr OR adj-ub-ent)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(NOT 1C adj)
	(*-1C setn-gr BARRIER det-gen)
	(*1 pl-subst BARRIER ikke-adv-adj);


# 2899
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 vblex OR nr2-det)
	(NOT 0 det OR subst)
	(NOT 0 pr OR ub-ent-nt-adj)
	(1 adj)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(*-1 det-gen LINK *1 ikke-adv-adj-det2)
	(*1 pl-subst LINK NOT 0 ub-ent-subst LINK NOT *-1 ikke-adv-adj);


# 2900
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 vblex OR nr2-det)
	(NOT 0 det OR subst)
	(NOT 0 pr OR ub-ent-nt-adj)
	(1 adj)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(*-1C setn-gr BARRIER det-gen)
	(*1 pl-subst LINK NOT 0 ub-ent-subst LINK NOT *-1 ikke-adv-adj);


# 2901
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 vblex OR nr2-det)
	(NOT 0 subst OR pr)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(NOT 1C adj)
	(*-1 det-gen LINK *1 ikke-adv-adj-det2)
	(*1 pl-subst LINK NOT 0 ub-ent-subst LINK NOT *-1 ikke-adv-adj);


# 2902
SELECT (adj pl) IF
	(NOT 0 %siste%/ordenstall OR farlige-adj)
	(NOT 0 vblex OR nr2-det)
	(NOT 0 subst OR pr)
	(NOT 1 prn)
	(NOT -1 prop-det-ent OR subst-gen)
	(NOT 1C adj)
	(*-1C setn-gr BARRIER det-gen)
	(*1 pl-subst LINK NOT 0 ub-ent-subst LINK NOT *-1 ikke-adv-adj);


# 2903
SELECT (adj pl) IF
	(NOT 0 farlige-adj OR %andre%)
	(NOT 0 subst-gen OR ub-ent-nt-adj)
	(1 adj)
	(*-1 pl-det LINK NOT 0 nt-det LINK NOT *1 ikke-adv-adj-komma)
	(*1 pl-subst BARRIER ikke-adv-adj);


# 2904
SELECT (adj pl) IF
	(NOT 0 farlige-adj OR %andre%)
	(NOT 0 subst-gen OR fv)
	(NOT 1C adj)
	(*-1 pl-det LINK NOT 0 nt-det LINK NOT *1 ikke-adv-adj-komma)
	(*1 pl-subst BARRIER ikke-adv-adj);


# 2905
SELECT (adj pl) IF
	(0 farlige-adj-subst)
	(NOT 0 fv OR inf)
	(1 ub-fl-subst)
	(NOT 1 sg)
	(NOT -1 det-ent OR subst-gen);


# 2906
SELECT (adj pl) IF
	(0 farlige-adj-subst OR inf)
	(1 ub-fl-subst)
	(NOT 1 sg)
	(NOT -1 det-ent OR subst-gen)
	(*-1C setn-gr BARRIER m-hj-vblex)
	(*-1C setn-gr BARRIER infmerke);


# 2907
SELECT (adj pl) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 perf-part OR infmerke)
	(NOT -1 det/adj/komma/cnj)
	(*-1 setn-gr LINK *1 nom-fl LINK *1 kop-fv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 kop)
	(*-1 setn-gr LINK *1 nom-fl LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-fl)
	(*-1 setn-gr LINK NOT 1 pr);


# 2908
SELECT (adj pl) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 perf-part OR infmerke)
	(NOT -1 det/adj/komma/cnj)
	(*-1 setn-gr LINK *1 nom-fl LINK *1 fv LINK 0 hj-vblex)
	(*-1 setn-gr LINK *1 nom-fl LINK *1 hj-vblex LINK *1 kop LINK 0 iv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 hj-vblex)
	(*-1 setn-gr LINK *1 nom-fl LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-fl)
	(*-1 setn-gr LINK NOT 1 pr);


# 2867
SELECT (adj nt sg) IF
	(0 subst)
	(NOT 0 subst-gen OR ikke-adj-subst)
	(1C subst-nt-ent)
	(NOT -1 det);


# 2802
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part/<perf-part>)
	(1C adv)
	(2C fv);


# 2803
SELECT (adj ntindsg) IF
	(NOT 0 ikke-adj OR %fast%)
	(-1C prn-akk)
	(-2C vblex)
	(NOT -2 objpred-vblex OR objpred-prn-vblex);


# 2804
SELECT (adj ntindsg) IF
	(NOT 0 ikke-adj)
	(-1 prn-akk)
	(-2 pr)
	(-3C vblex);


# 2805
SELECT (adj ntindsg) IF
	(NOT 0 gen OR ikke-adj)
	(1 komma/cnj)
	(-1C vblex)
	(NOT -1 %ha% OR kop)
	(2 adj)
	(NOT 3 subst)
	(*-1 setn-gr BARRIER kop-fv);


# 2806
SELECT (adj ntindsg) IF
	(NOT 0 gen OR ikke-adj)
	(1 komma/cnj)
	(-1C vblex)
	(NOT -1 %ha% OR kop)
	(NOT 2 subst/adj)
	(*-1 setn-gr BARRIER kop-fv);


# 2807
SELECT (adj ntindsg) IF
	(NOT 0 gen OR ikke-adj)
	(-1C vblex)
	(NOT 1 nom OR komma/cnj)
	(NOT -1 %ha% OR kop)
	(*-1 setn-gr BARRIER kop-fv);


# 2808
SELECT (adj ntindsg) IF
	(NOT 0 adv OR <perf-part>)
	(-1 kop)
	(1C adj)
	(-1C pres/pret);


# 2809
SELECT (adj ntindsg) IF
	(NOT 0 gen OR det)
	(NOT 0 adv OR perf-part)
	(NOT 0 inf OR pres/pret)
	(-1C ub-ent-nt-adj)
	(NOT 1 ub-ent-mf-subst OR adj)
	(-2C fv)
	(NOT -2 kop);


# 2810
SELECT (adj ntindsg) IF
	(NOT 0 gen OR det)
	(NOT 0 adv OR perf-part)
	(NOT 0 inf OR pres/pret)
	(1C adj)
	(-1C fv)
	(NOT 2 ub-ent-mf-subst);


# 2811
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(NOT 0 <perf-part> OR pres/pret)
	(1C adv)
	(-1C fv);


# 2812
SELECT (adj ntindsg) IF
	(NOT 0 perf-part/inf OR <perf-part>)
	(NOT 0 adv OR farlige-adj)
	(NOT 0 pr OR subst)
	(-1 subst/prn)
	(*-4 setn-gr LINK 1 adv)
	(*-2C fv LINK NOT 0 kop LINK NOT *1 ikke-adv-subst-prn-cnj-det);


# 2813
SELECT (adj ntindsg) IF
	(NOT 0 perf-part/inf OR <perf-part>)
	(NOT 0 adv OR farlige-adj)
	(NOT 0 pr OR subst)
	(-1 subst/prn)
	(*-4 setn-gr LINK 1 pr)
	(*-2C fv LINK NOT 0 kop LINK NOT *1 ikke-adv-subst-prn-cnj-det);


# 2814
SELECT (adj ntindsg) IF
	(NOT 0 farlige-adj OR <perf-part>)
	(-1 subst/prn)
	(1C perf-part/inf)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det);


# 2815
SELECT (adj ntindsg) IF
	(NOT 0 adv OR <perf-part>)
	(NOT 0 farlige-adj OR m-hj-vblex)
	(1C perf-part/inf)
	(-1C fv);


# 2816
SELECT (adj ntindsg) IF
	(NOT 0 adv OR farlige-adj)
	(NOT 0 orden OR subst)
	(1C fv)
	(-1C subst)
	(NOT -1 subst-gen);


# 2817
SELECT (adj ntindsg) IF
	(NOT 0 adv OR farlige-adj)
	(NOT 0 orden OR <perf-part>)
	(-1 prn-pers)
	(1C fv);


# 2818
SELECT (adj ntindsg) IF
	(NOT 0 <perf-part> OR ikke-adj)
	(1C fv)
	(-1C setn-gr);


# 2819
SELECT (adj ntindsg) IF
	(NOT 0 ikke-adj OR adv)
	(-1C advblex)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT 1 nom OR cnj)
	(NOT -2 prn-akk)
	(*-1C pres/pret BARRIER setn-gr)
	(*-1 vblex-u-imp LINK NOT 0 kop LINK NOT 0 objpred-prn-vblex LINK NOT *1 pres/pret);


# 2820
SELECT (adj ntindsg) IF
	(NOT 0 adv)
	(1 cnj)
	(-1 adv OR %saa/ganske%)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT 1 nom)
	(NOT 2 adj-m OR adj-fl)
	(*-1C setn-gr BARRIER kop);


# 2821
SELECT (adj ntindsg) IF
	(NOT 0 adv)
	(-1 adv OR %saa/ganske%)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT 1 nom OR cnj)
	(*-1C setn-gr BARRIER kop);


# 2822
SELECT (adj ntindsg) IF
	(NOT 0 farlige-adj OR orden)
	(1C adj)
	(NOT -1 adj OR komma/cnj)
	(*-1 det LINK *1 ikke-adv-adj);


# 2823
SELECT (adj ntindsg) IF
	(NOT 0 farlige-adj OR orden)
	(1C adj)
	(NOT *-1 det BARRIER setn-gr)
	(NOT -1 adj OR komma/cnj);


# 2824
SELECT (adj ntindsg) IF
	(NOT 0 adv OR subst-gen)
	(NOT 0 orden OR farlige-adj)
	(NOT 0 perf-part OR <perf-part>)
	(NOT 0 pret OR adj-fl)
	(1C adj)
	(NOT -1 det OR adj)
	(NOT 1C pos-ub-ent);


# 2825
SELECT (adj ntindsg) IF
	(NOT 0 adv OR <perf-part>)
	(1C adj)
	(-1C f-det);


# 2826
SELECT (adj ntindsg) IF
	(NOT 0 orden OR <perf-part>)
	(1C adj)
	(-1C m-det);


# 2827
SELECT (adj ntindsg) IF
	(NOT 0 <perf-part> OR farlige-adj)
	(NOT 0 orden OR adv)
	(1 adj-fl)
	(-1C pl-det);


# 2828
SELECT (adj ntindsg) IF
	(NOT 0 pres/pret)
	(1 komma)
	(-1 cnj)
	(NOT -1 <adv>)
	(-2C ub-ent-nt-adj)
	(NOT 2 advblex)
	(NOT -2 mf)


;


# 2829
SELECT (adj ntindsg) IF
	(NOT 0 subst OR pres/pret)
	(1 komma)
	(NOT 2 advblex)
	(*-1 ikke-adv LINK 0 cnj LINK NOT 0 <adv> LINK -1C ub-ent-nt-adj LINK NOT 0 mf);


# 2830
SELECT (adj ntindsg) IF
	(NOT 0 pres/pret)
	(-1 cnj)
	(NOT 1 ub-ent-nt-subst OR komma)
	(NOT -1 <adv>)
	(-2C ub-ent-nt-adj)
	(NOT -2 mf);


# 2831
SELECT (adj ntindsg) IF
	(NOT 0 subst OR pres/pret)
	(NOT 1 ub-ent-nt-subst OR komma)
	(*-1 ikke-adv LINK 0 cnj LINK NOT 0 <adv> LINK -1C ub-ent-nt-adj LINK NOT 0 mf);


# 2832
SELECT (adj ntindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 prn-nt BARRIER ikke-adv)
	(*-1 prn-nt LINK -1C objpred-prn-vblex LINK NOT -1 clb);


# 2833
SELECT (adj ntindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 be-ent-nt-subst BARRIER ikke-adv)
	(*-1 be-ent-nt-subst LINK *-1C objpred-vblex LINK NOT -1 clb)
	(*-1 objpred-vblex BARRIER ikke-adv-adj-det-subst);


# 2834
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(NOT 1 komma OR perf-part)
	(*-1 kop LINK 0 iv LINK NOT *1 ikke-adv)
	(*-1 %som% BARRIER ikke-adv-vblex)
	(*-1 %som% LINK -1 nom-nt-ent);


# 2835
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(NOT 1 komma OR perf-part)
	(*-1 kop LINK 0 fv LINK NOT *1 ikke-adv)
	(*-1 %som% BARRIER ikke-adv-vblex)
	(*-1 %som% LINK -1 nom-nt-ent);


# 2836
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-nt-ent)
	(*-4C clb-komma LINK 1C fv LINK 0 hj-vblex)
	(*-3C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2837
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-nt-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-3C clb-komma LINK 1C fv LINK 0 kop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2838
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-nt-ent)
	(*-5 setn-gr LINK 1 adv LINK 1 fv LINK 0 hj-vblex)
	(*-3C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2839
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-nt-ent)
	(*-6 setn-gr LINK 1 pr)
	(*-3C fv LINK 0 hj-vblex LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2840
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-nt-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-4 setn-gr LINK 1 adv LINK 1 fv LINK 0 kop)
	(*-2C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2841
SELECT (adj ntindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-nt-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-5 setn-gr LINK 1 pr)
	(*-2C fv LINK 0 kop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2842
SELECT (adj ntindsg) IF
	(1 ub-ent-nt-subst)
	(-1 cnj)
	(NOT 1 ikke-subst)
	(NOT -1 clb)
	(-2C ub-ent-nt-adj);


# 2843
SELECT (adj ntindsg) IF
	(1 setn-gr)
	(-1 cnj)
	(NOT 1 sbu)
	(NOT -1 clb)
	(-2C ub-ent-nt-adj);


# 2844
SELECT (adj ntindsg) IF
	(NOT 0 ikke-adj)
	(1 cnj)
	(NOT 1 clb)
	(2C ub-ent-nt-adj)
	(NOT 2 <pres-part>)
	(NOT 3 adj);


#
;


# 2845
SELECT (adj ntindsg) IF
	(NOT 0 farlige-adj OR subst-gen)
	(NOT 0 pl OR pres/pret)
	(1 komma/cnj)
	(NOT 1 clb OR adv)
	(NOT -1 nt-det)
	(2C ub-ent-nt-adj)
	(*2 ub-ent-nt-subst BARRIER ikke-adv-adj);


# 2846
SELECT (adj ntindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 pl OR pres/pret)
	(1 ub-ent-nt-subst)
	(-1 pr)
	(NOT 1 ikke-subst OR ub-ent-m-subst);


# 2847
SELECT (adj ntindsg) IF
	(NOT 0 farlige-adj OR det)
	(NOT 0 subst OR fv)
	(-1C ub-nt-det)
	(NOT 1 subst/adj OR komma/cnj);


# 2848
SELECT (adj ntindsg) IF
	(NOT 0 farlige-adj)
	(*-1 nr2-det-nt-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-nt-ub LINK -1 cnj LINK -1 ub-nt-det)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-nt-subst LINK NOT -1 adv);


# 2849
SELECT (adj ntindsg) IF
	(NOT 0 farlige-adj)
	(*-1 nr2-det-nt-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-nt-ub LINK -1 ub-nt-det)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-nt-subst LINK NOT -1 adv);


# 2850
SELECT (adj ntindsg) IF
	(NOT 0 farlige-adj)
	(*-1 ub-nt-det BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT -1 komma/cnj);


# 2851
SELECT (adj ntindsg) IF
	(1 %noen%-nt)
	(*-1 ikke-adv LINK 0 %noen%-nt);


# 2852
SELECT (adj ntindsg) IF
	(1 %et%)
	(*-1 ikke-adv LINK 0 %et%);


# 2853
SELECT (adj ntindsg) IF
	(NOT 0 %ytterligere% OR perf-part)
	(1 komma/cnj)
	(NOT 2 adj/adv)
	(*-1 ikke-adv LINK 0 %det%-prn LINK -1 %ha%);


# 2854
SELECT (adj ntindsg) IF
	(NOT 0 %ytterligere% OR perf-part)
	(NOT 1 subst OR komma/cnj)
	(*-1 ikke-adv LINK 0 %det%-prn LINK -1 %ha%);


# 2855
SELECT (adj ntindsg) IF
	(NOT 0 %ytterligere% OR %mye/lite%)
	(1 komma/cnj)
	(NOT 2 adj/adv)
	(*-1 ikke-adv LINK 0 %gaa% LINK -1 %det%-prn);


# 2856
SELECT (adj ntindsg) IF
	(NOT 0 %ytterligere% OR %mye/lite%)
	(NOT 1 subst OR komma/cnj)
	(*-1 ikke-adv LINK 0 %gaa% LINK -1 %det%-prn);


# 2857
SELECT (adj ntindsg) IF
	(NOT 0 %ytterligere% OR %mye/lite%)
	(1 komma/cnj)
	(NOT 2 adj/adv)
	(*-1 ikke-adv LINK 0 %det%-prn LINK -1 %gaa%);


# 2858
SELECT (adj ntindsg) IF
	(NOT 0 %ytterligere% OR %mye/lite%)
	(NOT 1 subst OR komma/cnj)
	(*-1 ikke-adv LINK 0 %det%-prn LINK -1 %gaa%);


#
;


# 2859
SELECT (adj ntindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 pl OR pres/pret)
	(1 ub-ent-nt-subst)
	(NOT 1 ikke-subst OR ub-ent-m-subst)
	(NOT -1 adj OR subst-gen)
	(*-1 setn-gr BARRIER p-hj-vblex);


# 2860
SELECT (adj ntindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 pl OR pres/pret)
	(1 ub-ent-nt-subst)
	(NOT 1 ikke-subst OR ub-ent-m-subst)
	(NOT -1 nt-det OR adj)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 perf-part BARRIER setn-gr);


# 2861
SELECT (adj ntindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 pl OR pres/pret)
	(1 ub-ent-nt-subst)
	(-1 adj)
	(NOT 1 ikke-subst OR ub-ent-m-subst)
	(NOT -2 nt-det)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 perf-part BARRIER setn-gr);


# 2862
SELECT (adj ntindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 pl OR pres/pret)
	(1 ub-ent-nt-subst)
	(-1 adj)
	(NOT 1 ikke-subst OR ub-ent-m-subst)
	(NOT -2 nt-det)
	(*-1 setn-gr BARRIER p-hj-vblex);


# 2863
SELECT (adj ntindsg) IF
	(NOT 0 det OR adv)
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 komma OR perf-part)
	(NOT -1 det/adj/komma/cnj)
	(*-1 setn-gr LINK *1 nom-nt-ent LINK *1 kop-fv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 kop)
	(*-1 setn-gr LINK *1 nom-nt-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-nt-ent)
	(*-1 setn-gr LINK NOT 1 pr);


#
;


# 2864
SELECT (adj ntindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(1 komma)
	(NOT -1 det/adj/komma/cnj)
	(NOT 2 adj-ub-ent)
	(*-1 setn-gr LINK *1 nom-nt-ent LINK *1 kop-fv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 kop)
	(*-1 setn-gr LINK *1 nom-nt-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-nt-ent)
	(*-1 setn-gr LINK NOT 1 pr);


# 2865
SELECT (adj ntindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 subst/adj/adv OR perf-part)
	(NOT -1 det/adj/komma/cnj)
	(*-1 setn-gr LINK *1 nom-nt-ent LINK *1 fv LINK 0 hj-vblex)
	(*-1 setn-gr LINK *1 nom-nt-ent LINK *1 hj-vblex LINK *1 kop LINK 0 iv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 hj-vblex)
	(*-1 setn-gr LINK *1 nom-nt-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-nt-ent)
	(*-1 setn-gr LINK NOT 1 pr);


# 2866
SELECT (adj ntindsg) IF
	(0 %rundt%)
	(1 det-qnt);


# 2801
SELECT (adj nt) IF
	(1 subst-nt-ent)
	(-1 cnj)
	(-2 nt)
	(*-3 nt-det BARRIER ikke-adv-adj-cnj);


# 2800
SELECT (adj f sg) IF
	(0 subst)
	(NOT 0 ikke-adj-subst OR orden)
	(1C subst-mf-ent)
	(NOT -1 det);


# 2791
SELECT (adj findsg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 cnj LINK -1 ub-f-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT -1 adv);


# 2792
SELECT (adj findsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 cnj LINK -1 ub-f-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT -1 adv);


# 2793
SELECT (adj findsg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 ub-f-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT -1 adv);


# 2794
SELECT (adj findsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 ub-f-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT -1 adv);


# 2795
SELECT (adj findsg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 ub-f-det BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2796
SELECT (adj findsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 ub-f-det BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2797
SELECT (adj findsg) IF
	(1 %ei%)
	(*-1 ikke-adv LINK 0 %ei%);


#
;


# 2798
SELECT (adj findsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 inf OR subst-gen)
	(1 ub-ent-f-subst)
	(NOT 1 ikke-subst OR ub-ent-nt-subst)
	(NOT 1 ub-ent-m-subst OR pl-subst)
	(NOT -1 f-det OR adj);


# 2799
SELECT (adj findsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 inf OR subst-gen)
	(1 ub-ent-f-subst)
	(-1 adj)
	(NOT 1 ikke-subst OR ub-ent-nt-subst)
	(NOT 1 ub-ent-m-subst OR pl-subst)
	(NOT -2 f-det);


# 2790
SELECT (adj pos ind) IF
	(0 %mye/lite%)
	(1C ub-subst)
	(NOT 1 pl);


# 2787
SELECT (adj pos def sg) IF
	(NOT 0 farlige-adj)
	(*-1 %hver%-f BARRIER ikke-adv-adj)
	(*-1 %hver%-f LINK NOT -1 det)
	(*1 ub-ent-f-subst LINK NOT 0 ub-ent-m-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2788
SELECT (adj pos def sg) IF
	(NOT 0 farlige-adj)
	(*-1 %hver%-m BARRIER ikke-adv-adj)
	(*-1 %hver%-m LINK NOT -1 det)
	(*1 ub-ent-m-subst LINK NOT 0 ub-ent-f-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj);


# 2789
SELECT (adj pos def sg) IF
	(NOT 0 farlige-adj)
	(*-1 %hver%-nt BARRIER ikke-adv-adj)
	(*-1 %hver%-nt LINK NOT -1 det)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT -1 komma/cnj);


# 2785
SELECT (adj pos pl) IF
	(NOT 0 det OR subst)
	(-1C tall-fl)
	(NOT -1 ikke-tall)
	(*-1 vblex LINK NOT 0 kop);


# 2786
SELECT (adj pos pl) IF
	(NOT 0 det OR subst)
	(-1C tall-fl)
	(NOT -1 ikke-tall)
	(NOT *-1 vblex BARRIER setn-gr);


# 2781
SELECT (adj pos ntindsg) IF
	(0 %mye/lite%)
	(1 infmerke);


# 2782
SELECT (adj pos ntindsg) IF
	(0 %mye/lite%)
	(1C perf-part);


# 2783
SELECT (adj pos ntindsg) IF
	(0 %mye/lite%)
	(1 pr)
	(NOT 1 %paa% OR %med%);


# 2784
SELECT (adj pos ntindsg) IF
	(0 %mye/lite%)
	(1C adj);


# 2780
SELECT (adj mf sg) IF
	(0 subst)
	(NOT 0 ikke-adj-subst OR orden)
	(1C subst-mf-ent)
	(NOT -1 det);


# 2727
SELECT (adj mfindsg) IF
	(NOT 0 pres/pret)
	(1 komma)
	(NOT 2 ub-ent-m-adj/advblex)
	(*-1 ikke-adv LINK 0 cnj LINK NOT 0 <adv> LINK -1C ub-ent-m-adj LINK NOT 0 f LINK NOT 0 nt);


# 2728
SELECT (adj mfindsg) IF
	(NOT 0 pres/pret)
	(NOT 1 ub-ent-m-subst OR komma)
	(*-1 ikke-adv LINK 0 cnj LINK NOT 0 <adv> LINK -1C ub-ent-m-adj LINK NOT 0 f LINK NOT 0 nt);


# 2729
SELECT (adj mfindsg) IF
	(NOT 0 pres/pret)
	(1 komma)
	(NOT 2 ub-ent-f-adj/advblex)
	(*-1 ikke-adv LINK 0 cnj LINK NOT 0 <adv> LINK -1C ub-ent-f-adj LINK NOT 0 m LINK NOT 0 nt);


# 2730
SELECT (adj mfindsg) IF
	(NOT 0 pres/pret)
	(NOT 1 ub-ent-f-subst OR komma)
	(*-1 ikke-adv LINK 0 cnj LINK NOT 0 <adv> LINK -1C ub-ent-f-adj LINK NOT 0 m LINK NOT 0 nt);


# 2731
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 %seg% BARRIER ikke-adv)
	(*-1 %seg% LINK -1C objpred-prn-vblex)
	(*-1 %seg% LINK -1 inf);


# 2732
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 %seg% BARRIER ikke-adv)
	(*-1 %seg% LINK -1C objpred-prn-vblex LINK *-1 nom LINK 0 nom-ent);


# 2733
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 prn-akk-mf BARRIER ikke-adv)
	(*-1 prn-akk-mf LINK -1 objpred-prn-vblex LINK NOT -1 clb);


# 2734
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 be-ent-mf-subst BARRIER ikke-adv)
	(*-1 be-ent-mf-subst LINK *-1C objpred-vblex LINK NOT -1 clb)
	(*-1 objpred-vblex BARRIER ikke-adv-adj-det-subst);


# 2735
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(NOT 1 subst/adj/adv)
	(*-1 kop LINK 0 iv LINK NOT *1 ikke-adv)
	(*-1 %som% BARRIER ikke-adv-vblex)
	(*-1 %som% LINK -1 nom-m-ent);


# 2736
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(NOT 1 subst/adj/adv)
	(*-1 kop LINK 0 fv LINK NOT *1 ikke-adv)
	(*-1 %som% BARRIER ikke-adv-vblex)
	(*-1 %som% LINK -1 nom-m-ent);


# 2737
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-m-ent)
	(*-4C clb-komma LINK 1C fv LINK 0 hj-vblex)
	(*-3C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2738
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-m-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-3C clb-komma LINK 1C fv LINK 0 kop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2739
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-m-ent)
	(*-5 setn-gr LINK 1 adv LINK 1 fv LINK 0 hj-vblex)
	(*-3C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2740
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-m-ent)
	(*-6 setn-gr LINK 1 pr)
	(*-3C fv LINK 0 hj-vblex LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2741
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-m-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-4 setn-gr LINK 1 adv LINK 1 fv LINK 0 kop)
	(*-2C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2742
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-m-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-5 setn-gr LINK 1 pr)
	(*-2C fv LINK 0 kop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2743
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(NOT 1 komma OR perf-part)
	(*-1 kop LINK 0 iv LINK NOT *1 ikke-adv)
	(*-1 %som% BARRIER ikke-adv-vblex)
	(*-1 %som% LINK -1 nom-f-ent);


# 2744
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(NOT 1 komma OR perf-part)
	(*-1 kop LINK 0 fv LINK NOT *1 ikke-adv)
	(*-1 %som% BARRIER ikke-adv-vblex)
	(*-1 %som% LINK -1 nom-f-ent);


# 2745
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-f-ent)
	(*-4C clb-komma LINK 1C fv LINK 0 hj-vblex)
	(*-3C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2746
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-f-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-3C clb-komma LINK 1C fv LINK 0 kop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2747
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-f-ent)
	(*-5 setn-gr LINK 1 adv LINK 1 fv LINK 0 hj-vblex)
	(*-3C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2748
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 kop OR iv)
	(NOT 1 subst/adj/adv OR perf-part)
	(-2 nom-f-ent)
	(*-6 setn-gr LINK 1 pr)
	(*-3C fv LINK 0 hj-vblex LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2749
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-f-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-4 setn-gr LINK 1 adv LINK 1 fv LINK 0 kop)
	(*-2C fv BARRIER ikke-adv-adj-subst-prn-cnj-det);


# 2750
SELECT (adj mfindsg) IF
	(NOT 0 adv OR perf-part)
	(-1 nom-f-ent)
	(NOT 1 subst/adj/adv OR perf-part)
	(*-5 setn-gr LINK 1 pr)
	(*-2C fv LINK 0 kop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 2751
SELECT (adj mfindsg) IF
	(1 ub-ent-m-subst)
	(-1 cnj)
	(NOT 1 ikke-subst)
	(NOT -1 clb)
	(-2C ub-ent-m-adj);


# 2752
SELECT (adj mfindsg) IF
	(1 setn-gr)
	(-1 cnj)
	(NOT 1 sbu)
	(NOT -1 clb)
	(-2C ub-ent-m-adj);


# 2753
SELECT (adj mfindsg) IF
	(NOT 0 ikke-adj)
	(1 cnj)
	(NOT 1 clb)
	(2C ub-ent-m-adj)
	(NOT 2 <pres-part>);


# 2754
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj OR perf-part)
	(NOT 0 inf OR subst-gen)
	(1 komma/cnj)
	(NOT 1 clb OR adv)
	(NOT -1 m-det)
	(2C ub-ent-m-adj)
	(*2 ub-ent-m-subst BARRIER ikke-adv-adj);


# 2755
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj OR det)
	(NOT 0 subst OR fv)
	(-1C ub-m-det)
	(NOT 1 subst/adj OR komma/cnj);


# 2756
SELECT (adj mfindsg) IF
	(NOT 0 ub-ent-nt-adj OR farlige-adj)
	(1 adj)
	(*-1 nr2-det-m-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-m-ub LINK -1 cnj LINK -1 ub-m-det)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-m-subst LINK NOT -1 adv);


# 2757
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-m-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-m-ub LINK -1 cnj LINK -1 ub-m-det)
	(*1 ub-ent-m-subst LINK NOT 0 farlige-m-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-m-subst LINK NOT -1 adv);


# 2758
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 cnj LINK -1 ub-f-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT -1 adv);


# 2759
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 cnj LINK -1 ub-f-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT -1 adv);


# 2760
SELECT (adj mfindsg) IF
	(NOT 0 ub-ent-nt-adj OR farlige-adj)
	(1 adj)
	(*-1 nr2-det-m-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-m-ub LINK -1 ub-m-det)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-m-subst LINK NOT -1 adv);


# 2761
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-m-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-m-ub LINK -1 ub-m-det)
	(*1 ub-ent-m-subst LINK NOT 0 farlige-m-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-m-subst LINK NOT -1 adv);


# 2762
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 ub-f-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT -1 adv)


;


# 2763
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 nr2-det-f-ub BARRIER ikke-adv-adj)
	(*-1 nr2-det-f-ub LINK -1 ub-f-det)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT -1 adv);


# 2764
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 ub-m-det BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj);


# 2765
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 ub-m-det BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma/cnj);


# 2766
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj OR ub-ent-nt-adj)
	(1 adj)
	(*-1 ub-f-det BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2767
SELECT (adj mfindsg) IF
	(NOT 0 farlige-adj)
	(NOT 1C adj)
	(*-1 ub-f-det BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma/cnj);


# 2768
SELECT (adj mfindsg) IF
	(1 %en%)
	(*-1 ikke-adv LINK 0 %en%);


# 2769
SELECT (adj mfindsg) IF
	(1 %ei%)
	(*-1 ikke-adv LINK 0 %ei%);


# 2770
SELECT (adj mfindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 inf OR subst-gen)
	(1 ub-ent-m-subst)
	(NOT 1 ub-ent-nt-subst OR pl-subst)
	(NOT -1 adj OR gen);


# 2771
SELECT (adj mfindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 inf OR subst-gen)
	(1 ub-ent-f-subst)
	(NOT 1 ub-ent-nt-subst OR pl-subst)
	(NOT -1 adj OR subst-gen);


# 2772
SELECT (adj mfindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 inf OR subst-gen)
	(1 ub-ent-f-subst)
	(-1 adj)
	(NOT 1 ub-ent-nt-subst OR pl-subst)
	(NOT -2 f-det);


# 2773
SELECT (adj mfindsg) IF
	(NOT 0 orden OR farlige-adj)
	(NOT 0 inf OR subst-gen)
	(1 ub-ent-m-subst)
	(-1 adj)
	(NOT 1 ub-ent-nt-subst OR pl-subst)
	(NOT -2 m-det);


# 2774
SELECT (adj mfindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 subst/adj/adv OR perf-part)
	(NOT 1 komma OR infmerke)
	(NOT -1 det/adj/komma/cnj)
	(*-1 setn-gr LINK *1 nom-f-ent LINK *1 kop-fv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 kop)
	(*-1 setn-gr LINK *1 nom-f-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-f-ent)
	(*-1 setn-gr LINK NOT 1 pr);


# 2775
SELECT (adj mfindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(1 komma)
	(NOT -1 det/adj/komma/cnj)
	(NOT 2 adj-ub-ent)
	(*-1 setn-gr LINK *1 nom-f-ent LINK *1 kop-fv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 kop)
	(*-1 setn-gr LINK *1 nom-f-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-f-ent)
	(*-1 setn-gr LINK NOT 1 pr);


# 2776
SELECT (adj mfindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 perf-part OR infmerke)
	(NOT -1 det/adj/komma/cnj)
	(*-1 setn-gr LINK *1 nom-f-ent LINK *1 fv LINK 0 hj-vblex)
	(*-1 setn-gr LINK *1 nom-f-ent LINK *1 hj-vblex LINK *1 kop LINK 0 iv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 hj-vblex)
	(*-1 setn-gr LINK *1 nom-f-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-f-ent)
	(*-1 setn-gr LINK NOT 1 pr);


# 2777
SELECT (adj mfindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 subst/adj/adv OR perf-part)
	(NOT 1 komma OR infmerke)
	(NOT -1 det/adj/komma/cnj)
	(*-1 setn-gr LINK *1 nom-m-ent LINK *1 kop-fv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 kop)
	(*-1 setn-gr LINK *1 nom-m-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-m-ent)
	(*-1 setn-gr LINK NOT 1 pr);


# 2778
SELECT (adj mfindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(1 komma)
	(NOT -1 det/adj/komma/cnj)
	(NOT 2 adj-ub-ent)
	(*-1 setn-gr LINK *1 nom-m-ent LINK *1 kop-fv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 kop)
	(*-1 setn-gr LINK *1 nom-m-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-m-ent)
	(*-1 setn-gr LINK NOT 1 pr);


# 2779
SELECT (adj mfindsg) IF
	(NOT 0 perf-part OR farlige-adj)
	(NOT 1 perf-part OR infmerke)
	(NOT -1 det/adj/komma/cnj)
	(*-1 setn-gr LINK *1 nom-m-ent LINK *1 fv LINK 0 hj-vblex)
	(*-1 setn-gr LINK *1 nom-m-ent LINK *1 hj-vblex LINK *1 kop LINK 0 iv LINK NOT *1 ikke-adv-adj)
	(*-1 setn-gr LINK *1 fv LINK 0 hj-vblex)
	(*-1 setn-gr LINK *1 nom-m-ent LINK NOT 0 subst-gen)
	(*-1 setn-gr LINK *1 subst/prn/%all% LINK 0 nom-m-ent)
	(*-1 setn-gr LINK NOT 1 pr);


# 2726
SELECT (adj mf) IF
	(1 subst-mf-ent)
	(-1 cnj)
	(-2 adj-mf)
	(*-3 det-mf BARRIER ikke-adv-adj-cnj);


# 2725
SELECT (adj sup) IF
	(0 grads-adv)
	(1C adj);


# 2722
SELECT (adj comp) IF
	(1C subst)
	(*-1 det BARRIER ikke-adv-adj);


# 2723
SELECT (adj comp) IF
	(-1 det)
	(1C adj);


# 2724
SELECT (adj comp) IF
	(0 grads-adv)
	(1C adj);


# 2717
SELECT (adj) IF
	(NOT 0 adv OR pres)
	(-1 det)
	(1C adv)
	(2C pres/pret)
	(*-2C setn-gr LINK 0 sbu);


# 2718
SELECT (adj) IF
	(0 %motsatt%)
	(-1 %stikk%);


# 2719
SELECT (adj) IF
	(1 setn-gr)
	(-1 cnj)
	(NOT 1 sbu)
	(NOT -1 clb)
	(-2C adj);


# 2720
SELECT (adj) IF
	(1 cnj)
	(NOT 1 clb)
	(2C adj)
	(3 setn-gr)
	(NOT 3 sbu);


# 2721
SELECT (adj) IF
	(NOT 0 pr OR perf-part)
	(1 ub-subst)
	(NOT 1 det)
	(NOT -1 pr)
	(*-1C fv LINK *1C ikke-adv LINK 0 pr LINK NOT 0 %som% LINK NOT *1 alt);


#
;


# 2694
SELECT (adv) IF
	(0 utfyll-sbu)
	(1 pres/pret)
	(-1 komma/cnj)
	(NOT 2 pres/pret);


# 2695
SELECT (adv) IF
	(0 utfyll-sbu)
	(1 pres/pret)
	(-1 adv)
	(-2 setn-gr)
	(NOT 2 pres/pret);


# 2696
SELECT (adv) IF
	(0 utfyll-sbu)
	(1 pres/pret)
	(-1 replikk)
	(-2 setn-gr)
	(NOT 2 pres/pret);


# 2697
SELECT (adv) IF
	(0 utfyll-sbu)
	(1 pres/pret)
	(-1 setn-gr)
	(NOT 2 pres/pret);


# 2698
SELECT (adv) IF
	(NOT 0 %saa/og/selv% OR sbu)
	(NOT 0 pr OR perf-part)
	(NOT 0 %alt% OR %saa%)
	(1 nom)
	(-1 fv);


# 2699
SELECT (adv) IF
	(NOT 0 %saa/og/selv% OR subst)
	(-1C vblex)
	(NOT 1 anf OR nom)
	(NOT -1 kop OR %ha%)
	(*-1 setn-gr BARRIER kop-fv);


# 2700
SELECT (adv) IF
	(NOT 0 %ei% OR %selv%)
	(-1 kop)
	(1C adj)
	(-1C pres/pret);


# 2701
SELECT (adv) IF
	(0 sbu)
	(NOT 0 %saa/og/selv% OR %ei%)
	(NOT 0 pr OR perf-part/inf)
	(-1 subst/prn)
	(*-4 setn-gr LINK 1 adv)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det)
	(*1 setn-gr BARRIER pres/pret);


# 2702
SELECT (adv) IF
	(NOT 0 sbu OR %saa/og/selv%)
	(NOT 0 pr OR perf-part/inf)
	(-1 subst/prn)
	(*-4 setn-gr LINK 1 adv)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det);


# 2703
SELECT (adv) IF
	(NOT 0 %saa/og/selv% OR %ei%)
	(NOT 0 pr OR perf-part/inf)
	(-1 subst/prn)
	(*-4 setn-gr LINK 1 pr LINK NOT 1 fv)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det);


# 2704
SELECT (adv) IF
	(NOT 0 %saa/og/selv%)
	(-1 subst/prn)
	(1C interj)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det);


# 2705
SELECT (adv) IF
	(NOT 0 %saa/og/selv%)
	(-1 subst/prn)
	(1C perf-part/inf)
	(*-2C fv BARRIER ikke-adv-subst-prn-cnj-det);


# 2706
SELECT (adv) IF
	(NOT 0 %saa/og/selv%)
	(1C perf-part/inf)
	(-1C fv);


# 2707
SELECT (adv) IF
	(NOT 0 %saa/og/selv%)
	(1C fv)
	(-1C subst)
	(NOT -1 subst-gen);


# 2708
SELECT (adv) IF
	(NOT 0 %saa/og/selv%)
	(-1 prn)
	(1C fv);


# 2709
SELECT (adv) IF
	(NOT 0 %alt% OR %saa/og/selv%)
	(-1 setn-gr)
	(1C fv);


# 2710
SELECT (adv) IF
	(NOT 0 %saa/og/selv% OR det)
	(NOT 0 cnj OR pr)
	(-1C ub-ent-nt-adj);


# 2711
SELECT (adv) IF
	(NOT 0 %saa/og/selv% OR det)
	(NOT 0 sbu OR cnj)
	(NOT 0 pr OR vblex)
	(-1C adv);


# 2712
SELECT (adv) IF
	(NOT 0 %saa/og/selv% OR det)
	(NOT 0 cnj OR pr)
	(1C ub-ent-nt-adj)
	(NOT -1 det OR adj)
	(*1C fv BARRIER setn-gr);


# 2713
SELECT (adv) IF
	(NOT 0 %saa/og/selv% OR det)
	(NOT 0 cnj OR pr)
	(1C adv)
	(NOT -1 det OR adj);


# 2714
SELECT (adv) IF
	(NOT 0 adj OR %saa/og/selv%)
	(NOT 0 pr OR cnj)
	(NOT 0 det OR sbu)
	(1 adj)
	(*2 subst BARRIER ikke-adj);


# 2715
SELECT (adv) IF
	(NOT 0 %saa/og/selv%)
	(1C adj)
	(-1C det);


# 2716
SELECT (adv) IF
	(0 %og%)
	(1C clb)
	(NOT 1 cnj OR ellipse);


# 2644
SELECT (clb cnj) IF
	(1 pr)
	(-1 komma)
	(*-1 pres/pret BARRIER setn-gr)
	(*3 pres/pret LINK NOT 0 farlige-vblex LINK NOT *-1 ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*3 pres/pret BARRIER spoerreadv);


# 2645
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(1 subst/prn)
	(NOT -1 subst/prn)
	(2 pret)
	(NOT 2 farlige-vblex)
	(*-1 >>> LINK 1 subst/prn LINK 1C pret);


# 2646
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(1 subst/prn)
	(NOT -1 subst/prn)
	(2 pres)
	(NOT 2 farlige-vblex)
	(*-1 >>> LINK 1 subst/prn LINK 1C pres);


# 2647
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(1 pret)
	(-1 pret)
	(NOT 1 perf-part);


# 2648
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(1 pret)
	(-1 pret)
	(NOT -1 perf-part);


# 2649
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(1 pres)
	(-1 pres)
	(NOT 1 s-vblex OR farlige-vblex);


# 2650
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(1C imp);


# 2651
#SELECT (clb cnj) IF
#	(0 clb/cnj-cnj)
#	(-1 komma)
#	(*-1 pres/pret BARRIER setn-gr)
#	(*1 pres/pret BARRIER setn-gr)
#	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
#	(*1 pres/pret BARRIER setn-gr-u-komma)
#	(*1 pres/pret LINK *-1 komma LINK *-1 komma);


# 2652
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 adj-be)
	(NOT -2 adj-be)
	(*2 %som% LINK -1 adj-be LINK NOT *-1 ikke-adv-adj-pr)
	(*2 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2653
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 det)
	(NOT -2 det)
	(*2 %som% BARRIER ikke-det-pr)
	(*2 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2654
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 prn)
	(NOT -2 prn)
	(*1 ikke-adv-adj-pr-det LINK 0 prn LINK 1 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2655
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 pl-subst)
	(*1 ikke-adv-adj-pr-det LINK 0 pl-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2656
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR be-ent-nt-adj/komp/sup)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-nt-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2657
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR ub-ent-nt-adj/komp)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-nt-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2658
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR be-ent-f-adj/komp/sup)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-f-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2659
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR ub-ent-f-adj/komp)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-f-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2660
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR be-ent-m-adj/komp/sup)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-m-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2661
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR ub-ent-m-adj/komp)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-m-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma)
	(*-1 pr LINK *1 ikke-adv-adj-subst-prn-cnj-det);


# 2662
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 adj-be)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 adj-be)
	(*2 %som% LINK -1 adj-be LINK NOT *-1 ikke-adv-adj-pr)
	(*2 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2663
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 det)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 det)
	(*2 %som% BARRIER ikke-det-pr)
	(*2 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2664
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 prn)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 prn)
	(*1 ikke-adv-adj-pr-det LINK 0 prn LINK 1 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2665
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 pl-subst)
	(NOT *-1 pr BARRIER setn-gr)
	(*1 ikke-adv-adj-pr-det LINK 0 pl-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2666
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR be-ent-nt-adj/komp/sup)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-nt-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2667
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR ub-ent-nt-adj/komp)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-nt-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2668
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR be-ent-f-adj/komp/sup)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-f-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2669
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR ub-ent-f-adj/komp)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-f-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2670
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR be-ent-m-adj/komp/sup)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-m-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2671
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT -1 subst OR ub-ent-m-adj/komp)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-m-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2672
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 adj-be)
	(NOT -2 adj-be)
	(*2 %som% LINK -1 adj-be LINK NOT *-1 ikke-adv-adj-pr)
	(*2 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2673
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 det)
	(NOT -2 det)
	(*2 %som% BARRIER ikke-det-pr)
	(*2 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2674
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 prn)
	(NOT -2 prn)
	(*1 ikke-adv-adj-pr-det LINK 0 prn LINK 1 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2675
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 pl-subst)
	(*1 ikke-adv-adj-pr-det LINK 0 pl-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2676
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 subst OR be-ent-nt-adj/komp/sup)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-nt-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2677
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 subst OR ub-ent-nt-adj/komp)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-nt-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2678
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 subst OR be-ent-f-adj/komp/sup)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-f-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2679
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 subst OR ub-ent-f-adj/komp)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-f-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2680
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 subst OR be-ent-m-adj/komp/sup)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 be-ent-m-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2681
SELECT (clb cnj) IF
	(0 %og/men%)
	(NOT 1 pr)
	(NOT -1 subst OR ub-ent-m-adj/komp)
	(NOT -2 subst)
	(*1 ikke-adv-adj-pr-det LINK 0 ub-ent-m-subst LINK *1 ikke-poss-det LINK 0 %som% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 pres/pret LINK -1 clb-komma);


# 2682
SELECT (clb cnj) IF
	(1C pr)
	(NOT -1 adv)
	(NOT 2 tegnsetting)
	(*-1 pr LINK *1 ikke-adv-adj-det LINK 0 nom LINK *1 alt)
	(*2 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK NOT *-1 setn-gr);


# 2683
SELECT (clb cnj) IF
	(1C pr)
	(NOT -1 adv)
	(NOT 2 tegnsetting)
	(*-1 pr LINK *1 ikke-adv-adj-det LINK NOT 0 nom)
	(*2 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK NOT *-1 setn-gr);


# 2684
SELECT (clb cnj) IF
	(1C pr)
	(NOT -1 adv)
	(NOT *-1 pr BARRIER setn-gr)
	(NOT 2 tegnsetting)
	(*2 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK NOT *-1 setn-gr);


# 2685
SELECT (clb cnj) IF
	(NOT 0 %saa% OR %for%)
	(-1 komma)
	(*-1C fv BARRIER setn-gr)
	(*1C pres/pret BARRIER setn-gr/parentes-beg)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK *-1 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 cnj);


# 2686
SELECT (clb cnj) IF
	(0 %for%)
	(-1 komma)
	(NOT 1 prn-akk)
	(*-1C fv BARRIER setn-gr)
	(*1C pres/pret BARRIER setn-gr/parentes-beg)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK *-1 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 cnj);


# 2687
SELECT (clb cnj) IF
	(0 %saa%)
	(-1 komma)
	(NOT 1 adj/adv)
	(*-1C fv BARRIER setn-gr)
	(*1C pres/pret BARRIER setn-gr/parentes-beg)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK *-1 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 cnj);


# 2688
SELECT (clb cnj) IF
	(NOT 0 %saa% OR %for%)
	(-1 komma)
	(*-1C fv BARRIER setn-gr)
	(*1C pres/pret BARRIER setn-gr/parentes-beg)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 2689
SELECT (clb cnj) IF
	(0 %for%)
	(-1 komma)
	(NOT 1 prn-akk)
	(*-1C fv BARRIER setn-gr)
	(*1C pres/pret BARRIER setn-gr/parentes-beg)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 2690
SELECT (clb cnj) IF
	(0 %saa%)
	(-1 komma)
	(NOT 1 adj/adv)
	(*-1C fv BARRIER setn-gr)
	(*1C pres/pret BARRIER setn-gr/parentes-beg)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 2691
SELECT (clb cnj) IF
	(0 %og/men%)
	(-1 komma)
	(*-2 setn-gr LINK NOT 0 %som%)
	(*1 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 %som%-sbu LINK *1C fv LINK *1C fv LINK *-1 setn-gr LINK NOT *-1 setn-gr);


# 2692
SELECT (clb cnj) IF
	(NOT 0 adv OR samset)
	(1C fv)
	(NOT 1 pass)


;


# 2693
SELECT (clb cnj) IF
	(-1 tegnsetting)
	(NOT -2 >>>)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret LINK *-1 subst/prn/%all%/%mang%/%mange% LINK NOT *-1 subst/prn/%all%/%mang%/%mange%);


# 2638
SELECT (clb) IF
	(0 komma)
	(1C imp)
	(*-1C setn-gr LINK 1C imp);


# 2639
SELECT (clb) IF
	(0 komma)
	(1 det-subst)
	(NOT 1 pres/pret)
	(*2 setn-gr LINK *-1 pres/pret LINK NOT *-1 ikke-adv-adj-det-subst)
	(*2 pres/pret LINK NOT 0 farlige-vblex)
	(*-1C setn-gr LINK *1 pres/pret LINK NOT *1 clb)
	(*-1C setn-gr LINK 1 det-subst);


# 2640
SELECT (clb) IF
	(0 komma)
	(1 pres/pret)
	(NOT 1 farlige-vblex)
	(*-1 >>> LINK 1 cnj LINK 1 sbu LINK *1 pres/pret LINK NOT *1 clb-cnj);


# 2641
SELECT (clb) IF
	(0 komma)
	(1 pres/pret)
	(NOT 1 farlige-vblex)
	(*-1 >>> LINK 1C sbu LINK *1 pres/pret LINK NOT *1 clb-cnj);


# 2642
SELECT (clb) IF
	(0 clb/cnj-cnj)
	(-1 >>>)
	(NOT 1 spoerreadv OR %selv%);


# 2643
SELECT (clb) IF
	(0 clb/cnj-cnj)
	(-1 replikk)
	(NOT 1 sbu)
	(-2 >>>);


# 2622
SELECT (det pl) IF
	(1 adj-sup-ub)
	(2 adj-fl)
	(NOT 3 subst/adj);


# 2623
SELECT (det pl) IF
	(1 adj-sup-be)
	(NOT 2 subst/adj);


# 2624
SELECT (det pl) IF
	(0 nr2-det-fl)
	(-1C pl-det)
	(2C clb-komma/cnj);


# 2625
SELECT (det pl) IF
	(0 nr2-det-fl)
	(-1C pl-det)
	(NOT 2 subst/adj OR komma/cnj);


# 2626
SELECT (det pl) IF
	(NOT 0 nt-det)
	(1 adj-fl)
	(NOT 1 adv OR fv)
	(NOT -1 fv)
	(2C clb-komma/cnj);


# 2627
SELECT (det pl) IF
	(NOT 0 nt-det)
	(1 adj-fl)
	(NOT 1 fv OR adv)
	(NOT 1 fv OR subst)
	(NOT -1 fv)
	(NOT 2 subst/adj);


# 2628
SELECT (det pl) IF
	(NOT 0 %hundre/tusen%)
	(*1C nr2-det-fl LINK NOT 0 %begge/selve/alle% LINK NOT *-1 ikke-adv-adj-komma);


# 2629
SELECT (det pl) IF
	(NOT 0 %hundre/tusen% OR %andre%)
	(NOT 0 det-ent OR poss-det)
	(1 %noen%-nt)
	(*2 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj-det);


# 2630
SELECT (det pl) IF
	(NOT 0 %hundre/tusen% OR %andre%)
	(NOT 0 det-ent OR poss-det)
	(-1 fv)
	(NOT -2 setn-gr)
	(*-1C setn-gr LINK NOT 1 adv)
	(*-1C setn-gr LINK NOT 1 pr)
	(*1 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj-komma);


# 2631
SELECT (det pl) IF
	(NOT 0 %hundre/tusen% OR %andre%)
	(NOT 0 det-ent OR poss-det)
	(-1 fv)
	(*1 be-fl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj-komma);


# 2632
SELECT (det pl) IF
	(NOT 0 %hundre/tusen% OR %andre%)
	(NOT 0 det-ent OR poss-det)
	(NOT -1 fv)
	(*1 pl-subst LINK NOT 0 ikke-adj-subst LINK NOT *-1 ikke-adv-adj-komma)
	(*1 pl-subst LINK NOT 1 subst/adj);


# 2633
SELECT (det pl) IF
	(NOT 0 %hundre/tusen% OR %andre%)
	(NOT 0 det-ent OR poss-det)
	(NOT -1 fv)
	(*1 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj-komma);


# 2634
SELECT (det pl) IF
	(0 nr2-det)
	(NOT 0 %hundre/tusen%)
	(NOT -1 det)
	(*1C ub-fl-subst BARRIER ikke-adv-adj-komma);


# 2635
SELECT (det pl) IF
	(0 nr2-det)
	(NOT 0 %hundre/tusen%)
	(-1 pl-det)
	(*1C pl-subst BARRIER ikke-adv-adj-komma);


# 2636
SELECT (det pl) IF
	(0 nr2-det)
	(NOT 0 %all% OR %hundre/tusen%)
	(NOT 0 %andre% OR det-ent)
	(*1 ub-fl-subst LINK NOT 0 %hundre/tusen% LINK NOT *-1 ikke-adv-adj)
	(*1 ub-fl-subst LINK 0 pres/pret LINK 1 pres/pret);


# 2637
SELECT (det pl) IF
	(0 nr2-det)
	(NOT 0 %andre% OR det-ent)
	(*1 ub-fl-subst LINK NOT 0 ikke-adj-subst LINK NOT 0 %hundre/tusen% LINK NOT *-1 ikke-adv-adj);


# 2593
SELECT (det m) IF
	(0 ub-m-det)
	(NOT 0 f OR pl)
	(1 ub-ent-m-adj)
	(NOT 1 fv OR adv)
	(2C clb-komma/cnj);


# 2594
SELECT (det m) IF
	(0 ub-m-det)
	(NOT 0 f OR pl)
	(1 ub-ent-m-adj)
	(NOT 1 fv OR adv)
	(NOT -1 fv)
	(NOT 2 subst/adj OR komma/cnj);


# 2595
SELECT (det m) IF
	(0 be-m-det)
	(NOT 0 f)
	(1 be-ent-m-adj)
	(NOT 1 fv OR adv)
	(2C clb-komma/cnj);


# 2596
SELECT (det m) IF
	(0 be-m-det)
	(NOT 0 f)
	(1 be-ent-m-adj)
	(NOT 1 fv OR adv)
	(NOT 2 komma/cnj);


#
;


# 2597
SELECT (det m) IF
	(NOT 0 f)
	(1 %slags%);


# 2598
SELECT (det m) IF
	(0 %en/den/denne%)
	(1 advblex)
	(2 tall)
	(NOT 2 ikke-tall)
	(*3 pl-subst LINK NOT 0 ikke-adj-subst LINK NOT *-1 ikke-adv-adj-qnt);


# 2599
SELECT (det m) IF
	(0 %en/den/denne%)
	(1 tall)
	(NOT 1 ikke-tall)
	(*2 pl-subst LINK NOT 0 ikke-adj-subst LINK NOT *-1 ikke-adv-adj-qnt);


# 2600
SELECT (det m) IF
	(0 nr2-det-m-be)
	(NOT 0 %andre%)
	(*-1 be-m-det LINK NOT 0 ikke-det LINK NOT *1 ikke-adv)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj);


# 2601
SELECT (det m) IF
	(0 nr2-det-m-be)
	(NOT 0 %andre%)
	(*-1C be-m-det BARRIER ikke-adv)
	(*1 be-ent-m-subst BARRIER ikke-adv-adj);


# 2602
SELECT (det m) IF
	(0 be-det)
	(*1 nr2-det-m-be BARRIER ikke-adv)
	(*2 ub-ent-m-subst LINK NOT 0 ub-ent-f-subst LINK NOT *-1 ikke-adv-adj-det);


# 2603
SELECT (det m) IF
	(0 be-det)
	(*1 nr2-det-m-be BARRIER ikke-adv)
	(*2 be-ent-m-subst BARRIER ikke-adv-adj-det)
	(*2 be-ent-m-subst LINK NOT 0 be-ent-f-subst);


# 2604
SELECT (det m) IF
	(0 be-det)
	(1 orden)
	(2 subst-uboey OR m);


# 2605
SELECT (det m) IF
	(0 be-det)
	(NOT 1 komma/cnj)
	(*1 ub-ent-m-subst LINK NOT 0 ikke-adj-subst LINK NOT 0 ub-ent-f-subst LINK NOT 0 farlige-m-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-m-subst LINK NOT -1 komma);


# 2606
SELECT (det m) IF
	(0 be-det)
	(NOT 1 komma/cnj)
	(*1 be-ent-m-subst BARRIER ikke-adv-adj);


# 2607
SELECT (det m) IF
	(-1 cnj)
	(NOT -1 clb)
	(-2C ub-m-det);


# 2608
SELECT (det m) IF
	(0 ub-det)
	(1 cnj)
	(2 %annen/samme%/qnt-m);


# 2609
SELECT (det m) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(*-1C m-det LINK NOT 0 f-det LINK NOT *1 ikke-adv);


# 2610
SELECT (det m) IF
	(0 ub-det)
	(NOT 0 %noen/ingen%)
	(*1 nr2-det-m-ub BARRIER ikke-adv);


# 2611
SELECT (det m) IF
	(0 ub-det)
	(NOT 0 %noen/ingen%)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-m-subst LINK *-1 ub-ent-m-adj);


# 2612
SELECT (det m) IF
	(0 ub-det)
	(NOT 0 %noen/ingen%)
	(*1 ub-ent-m-subst LINK NOT 0 ikke-adj-subst LINK NOT *-1 ikke-adv-adj);


# 2613
SELECT (det m) IF
	(NOT 0 poss-det OR %noe%)
	(*2 subst-prop LINK NOT -1 adv)
	(*2 subst-prop LINK -1 adj-m)
	(*2 subst-prop BARRIER ikke-adv-adj);


# 2614
SELECT (det m) IF
	(NOT 0 poss-det OR %noe%)
	(*1 subst-prop LINK 0 f LINK NOT *-1 ikke-adv-adj);


# 2615
SELECT (det m) IF
	(NOT 0 poss-det OR %noe%)
	(*1 subst-prop LINK 0 m LINK NOT *-1 ikke-adv-adj);


# 2616
SELECT (det m) IF
	(NOT 0 poss-det OR %noe%)
	(1 subst-prop)
	(NOT 1 f);


# 2617
SELECT (det m) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(NOT -1 pres/pret OR adv)
	(*1 ub-ent-m-subst LINK NOT 0 ub-ent-f-subst LINK NOT 0 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj);


# 2618
SELECT (det m) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(-1 pres/pret)
	(NOT -2 setn-gr OR replikk)
	(*1 ub-ent-m-subst LINK NOT 0 ub-ent-f-subst LINK NOT 0 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj);


# 2619
SELECT (det m) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(-1 adv)
	(NOT -2 pres/pret)
	(*1 ub-ent-m-subst LINK NOT 0 ub-ent-f-subst LINK NOT 0 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj);


# 2620
SELECT (det m) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(-1 adv)
	(-2 pres/pret)
	(NOT -3 setn-gr OR replikk)
	(*1 ub-ent-m-subst LINK NOT 0 ub-ent-f-subst LINK NOT 0 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj);


# 2621
SELECT (det m) IF
	(0 %hvilken%)
	(*1 ub-ent-m-subst LINK NOT 0 ub-ent-f-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj);


# 2570
SELECT (det nt) IF
	(0 ub-nt-det)
	(1 advblex)
	(2 adj-komp)
	(NOT 3 subst/adj);


# 2571
SELECT (det nt) IF
	(0 ub-nt-det)
	(1 adj-komp)
	(NOT 2 subst/adj);


# 2572
SELECT (det nt) IF
	(0 ub-nt-det)
	(NOT 0 pl-det)
	(1C ub-ent-nt-adj)
	(2 komma/cnj)
	(3 ub-ent-nt-adj);


# 2573
SELECT (det nt) IF
	(0 ub-nt-det)
	(NOT 0 pl-det)
	(1 ub-ent-nt-adj)
	(NOT 1 adv OR fv)
	(NOT -1 vblex)
	(2C clb-komma/cnj);


# 2574
SELECT (det nt) IF
	(0 ub-nt-det)
	(NOT 0 pl-det)
	(1 ub-ent-nt-adj)
	(NOT 1 fv OR adv)
	(NOT 2 subst/adj OR komma/cnj);


# 2575
SELECT (det nt) IF
	(0 be-nt-det)
	(NOT 0 pl-det)
	(1 be-ent-nt-adj)
	(-1 fv)
	(NOT 1 adv OR fv)
	(NOT 2 subst/adj OR komma/cnj)
	(NOT -2 setn-gr)
	(*-1 setn-gr LINK NOT 1 advblex/komp/ub-sup)
	(*-1 setn-gr LINK NOT 1 pr);


# 2576
SELECT (det nt) IF
	(0 be-nt-det)
	(NOT 0 pl-det)
	(1 be-ent-nt-adj)
	(NOT 1 adv OR fv)
	(NOT -1 vblex)
	(2C clb-komma/cnj);


# 2577
SELECT (det nt) IF
	(0 be-nt-det)
	(NOT 0 pl-det)
	(1 be-ent-nt-adj)
	(NOT 1 adv OR fv)
	(NOT -1 vblex)
	(NOT 2 subst/adj OR komma/cnj);


# 2578
SELECT (det nt) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(NOT -1 det)
	(*1C ub-ent-nt-subst LINK NOT 0 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj);


# 2579
SELECT (det nt) IF
	(0 nr2-det-nt-be)
	(NOT 0 %andre%)
	(*-1C be-nt-det BARRIER ikke-adv)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj);


# 2580
SELECT (det nt) IF
	(0 nr2-det-nt-be)
	(NOT 0 %andre%)
	(*-1C be-nt-det BARRIER ikke-adv)
	(*1 be-ent-nt-subst BARRIER ikke-adv-adj);


# 2581
SELECT (det nt) IF
	(0 be-det)
	(*1 nr2-det-nt-be BARRIER ikke-adv)
	(*2 ub-ent-nt-subst BARRIER ikke-adv-adj-det);


# 2582
SELECT (det nt) IF
	(0 be-det)
	(*1 nr2-det-nt-be BARRIER ikke-adv)
	(*2 be-ent-nt-subst BARRIER ikke-adv-adj-det);


# 2583
SELECT (det nt) IF
	(0 be-det)
	(NOT 1 komma/cnj OR adj-sup-ub)
	(NOT -1C fv)
	(*1 ub-ent-nt-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-nt-subst LINK NOT 0 farlige-nt-subst)
	(*1 ub-ent-nt-subst LINK NOT -1 komma);


# 2584
SELECT (det nt) IF
	(0 be-det)
	(1 be-ent-nt-adj)
	(NOT 1 komma/cnj)
	(*2 be-ent-nt-subst BARRIER ikke-adv-adj);


# 2585
SELECT (det nt) IF
	(0 be-det)
	(NOT 1 komma/cnj)
	(*1 be-ent-nt-subst LINK NOT 0 ikke-adj-subst LINK NOT *-1 ikke-adv-adj);


#
;


# 2586
SELECT (det nt) IF
	(0 ub-det)
	(1 cnj)
	(2 %annen/samme%/qnt-nt);


# 2587
SELECT (det nt) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(*-1C nt-det BARRIER ikke-adv);


# 2588
SELECT (det nt) IF
	(0 ub-det)
	(*1 nr2-det-nt-ub BARRIER ikke-adv);


# 2589
SELECT (det nt) IF
	(0 ub-det)
	(NOT 0 pl-det)
	(*1 ub-ent-nt-subst BARRIER ikke-adv-adj);


# 2590
SELECT (det nt) IF
	(NOT 0 %noe%)
	(-1 adj-nt)
	(*2 subst-prop LINK NOT -1 adv)
	(*2 subst-prop BARRIER ikke-adv-adj);


# 2591
SELECT (det nt) IF
	(NOT 0 %noe%)
	(*1 subst-prop LINK 0 nt LINK NOT *-1 ikke-adv-adj);


# 2592
SELECT (det nt) IF
	(0 ub-det)
	(NOT 0 %noe%)
	(1 subst-prop);


# 2554
SELECT (det f) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(NOT -1 det)
	(*1 ub-ent-f-subst LINK NOT 0 ub-ent-m-subst LINK NOT 0 pl-subst LINK NOT 0 ikke-subst LINK NOT *-1 ikke-adv-adj);


# 2555
SELECT (det f) IF
	(0 ub-det)
	(1 %slags%);


# 2556
SELECT (det f) IF
	(0 nr2-det-f-be)
	(NOT 0 %andre%)
	(*-1 be-f-det LINK NOT 0 ikke-det LINK NOT *1 ikke-adv)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj);


# 2557
SELECT (det f) IF
	(0 nr2-det-f-be)
	(NOT 0 %andre%)
	(*-1C be-f-det BARRIER ikke-adv)
	(*1 be-ent-f-subst BARRIER ikke-adv-adj);


# 2558
SELECT (det f) IF
	(0 be-det)
	(*1 nr2-det-f-be BARRIER ikke-adv)
	(*2 be-ent-f-subst LINK NOT 0 be-ent-m-subst LINK NOT *-1 ikke-adv-adj-det);


# 2559
SELECT (det f) IF
	(0 be-det)
	(*1 nr2-det-f-be BARRIER ikke-adv)
	(*2 ub-ent-f-subst LINK NOT 0 ub-ent-m-subst LINK NOT *-1 ikke-adv-adj-det);


# 2560
SELECT (det f) IF
	(0 be-det)
	(NOT 1 komma/cnj)
	(*1 ub-ent-f-subst LINK NOT 0 ikke-adj-subst LINK NOT 0 ub-ent-m-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT -1 komma);


# 2561
SELECT (det f) IF
	(0 be-det)
	(NOT 1 komma/cnj)
	(*1 be-ent-f-subst BARRIER ikke-adv-adj);


# 2562
SELECT (det f) IF
	(-1 cnj)
	(NOT -1 clb)
	(-2C ub-f-det);


# 2563
SELECT (det f) IF
	(0 ub-det)
	(1 cnj)
	(2 %annen/samme%/qnt-f);


# 2564
SELECT (det f) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(*-1C f-det LINK NOT 0 m-det LINK NOT *1 ikke-adv);


# 2565
SELECT (det f) IF
	(0 ub-det)
	(NOT 0 %noen/ingen%)
	(*1 nr2-det-f-ub BARRIER ikke-adv);


# 2566
SELECT (det f) IF
	(0 ub-det)
	(NOT 0 %noen/ingen%)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK *-1 ub-ent-f-adj);


# 2567
SELECT (det f) IF
	(0 ub-det)
	(NOT 0 %noen/ingen%)
	(*1 ub-ent-f-subst LINK NOT 0 ikke-adj-subst LINK NOT *-1 ikke-adv-adj);


# 2568
SELECT (det f) IF
	(NOT 0 %noe% OR poss-det)
	(*1 subst-prop LINK 0 f LINK NOT *-1 ikke-adv-adj);


# 2569
SELECT (det f) IF
	(NOT 0 poss-det OR %noe%)
	(1 subst-prop OR f);


#
;


# 2552
SELECT (det qnt pl) IF
	(0 %all%)
	(1 pl-det)
	(*2 pl-subst BARRIER ikke-adv-adj-det);


# 2553
SELECT (det qnt pl) IF
	(0 %all%)
	(*1 be-fl-subst BARRIER ikke-adv-adj-det);


# 2551
SELECT (det qnt m) IF
	(0 %all%)
	(*1 be-ent-m-subst LINK NOT 0 be-ent-f-subst LINK NOT *-1 ikke-adv-adj-det);


# 2549
SELECT (det qnt nt) IF
	(0 %all%)
	(*1 ub-ent-nt-subst LINK NOT 0 farlige-nt-subst LINK NOT *-1 ikke-adv-adj-det);


# 2550
SELECT (det qnt nt) IF
	(0 %all%)
	(1 be-nt-det);


# 2548
SELECT (det qnt f) IF
	(0 %all%)
	(*1 be-ent-f-subst LINK NOT 0 be-ent-m-subst LINK NOT *-1 ikke-adv-adj-det)


;


# 2546
SELECT (det qnt) IF
	(NOT 0 dato)
	(1 cnj)
	(2 qnt);


# 2547
SELECT (det qnt) IF
	(NOT 0 dato)
	(-1 cnj)
	(-2 qnt);


# 2545
SELECT (det dem) IF
	(0 %neste%)
	(NOT -1 det)
	(*1C subst BARRIER ikke-adv-adj);


# 2542
SELECT (det poss pl) IF
	(-1 pl-be)
	(-1C subst);


# 2543
SELECT (det poss pl) IF
	(1 nr2-det)
	(*2C pl-subst BARRIER ikke-adv-adj-det);


# 2544
SELECT (det poss pl) IF
	(*1C ub-fl-subst BARRIER ikke-adv-adj);


# 2538
SELECT (det poss m sg) IF
	(-1 ub-slektsterm)
	(-1C ub-ent-m-subst)
	(NOT -1 f);


# 2539
SELECT (det poss m sg) IF
	(-1 m-be OR sg)
	(-1C subst);


# 2540
SELECT (det poss m sg) IF
	(1 nr2-det)
	(*2C ub-ent-m-subst BARRIER ikke-adv-adj-det);


# 2541
SELECT (det poss m sg) IF
	(*1C ub-ent-m-subst BARRIER ikke-adv-adj);


# 2535
SELECT (det poss nt sg) IF
	(-1 nt-be OR sg)
	(-1C subst);


# 2536
SELECT (det poss nt sg) IF
	(1 nr2-det)
	(*2C ub-ent-nt-subst BARRIER ikke-adv-adj-det);


# 2537
SELECT (det poss nt sg) IF
	(*1C ub-ent-nt-subst BARRIER ikke-adv-adj);


# 2531
SELECT (det poss f sg) IF
	(-1 ub-slektsterm)
	(-1C ub-ent-f-subst)
	(NOT -1 m);


# 2532
SELECT (det poss f sg) IF
	(-1 f-be OR sg)
	(-1C subst);


# 2533
SELECT (det poss f sg) IF
	(1 nr2-det)
	(*2C ub-ent-f-subst BARRIER ikke-adv-adj-det);


# 2534
SELECT (det poss f sg) IF
	(*1C ub-ent-f-subst BARRIER ikke-adv-adj);


# 2525
SELECT (det) IF
	(0 be-det-ent/fl)
	(1 %aller%)
	(2 %foerste%);


# 2526
SELECT (det) IF
	(0 be-det-ent/fl)
	(1 %aller%)
	(2 adj-sup);


# 2527
SELECT (det) IF
	(0 be-det-ent/fl)
	(1 adj-sup-be)
	(NOT 2 subst/adj);


# 2528
SELECT (det) IF
	(0 %den/det/de%)
	(1 orden)
	(NOT 2 subst);


# 2529
SELECT (det) IF
	(0 %en/ei/et%)
	(1 %som%);


# 2530
SELECT (det) IF
	(0 %en/ei/et%)
	(1 %av%)
	(2 nom);


# 2514
SELECT (imp) IF
	(-1 clb-komma)
	(NOT 1 setn-gr)
	(*-1 replikk LINK 1C imp)
	(*-1 replikk LINK *1 setn-gr LINK 0 komma LINK 1 imp);


# 2515
SELECT (imp) IF
	(0 pret)
	(NOT 0 farlige-imp)
	(-1 replikk)
	(*2 clb-komma BARRIER pres/pret)
	(*2 clb-komma BARRIER pr)
	(*1 clb-komma LINK 1 imp LINK NOT 1 setn-gr)
	(*1 clb-komma LINK NOT 1 pret);


# 2516
SELECT (imp) IF
	(0 pres)
	(NOT 0 farlige-imp)
	(-1 replikk)
	(*2 clb-komma BARRIER pres/pret)
	(*2 clb-komma BARRIER pr)
	(*1 clb-komma LINK 1 imp LINK NOT 1 setn-gr)
	(*1 clb-komma LINK NOT 1 pres);


# 2517
SELECT (imp) IF
	(NOT 0 farlige-imp OR pres/pret)
	(-1 replikk)
	(*2 clb-komma BARRIER pres/pret)
	(*2 clb-komma BARRIER pr)
	(*1 clb-komma LINK 1 imp LINK NOT 1 setn-gr);


# 2518
SELECT (imp) IF
	(NOT 0 pres/pret OR farlige-imp)
	(1 %at%)
	(-1 replikk);


# 2519
SELECT (imp) IF
	(NOT 0 farlige-imp OR pr)
	(1 prn-pers OR akk)
	(-1 replikk);


# 2520
SELECT (imp) IF
	(NOT 0 pres/pret OR pr)
	(1 prn-pers)
	(1C akk)
	(-1C setn-gr);


# 2521
SELECT (imp) IF
	(NOT 0 samset OR pr)
	(-1 replikk)
	(NOT 1 pres/pret)
	(NOT *1C fv BARRIER setn-gr)
	(*1 utrop-t BARRIER setn-gr);


# 2522
SELECT (imp) IF
	(-1 adv)
	(NOT *1 komma OR sbu)
	(-2 replikk)
	(*1 utrop-t BARRIER setn-gr);


# 2523
SELECT (imp) IF
	(NOT 0 farlige-imp OR adv)
	(NOT 0 adj OR interj)
	(1 pr/adv-u-adj)
	(-1 >>>)
	(2 clb-komma);


# 2524
SELECT (imp) IF
	(NOT 0 farlige-imp OR adv)
	(NOT 0 adj OR interj)
	(1 clb-komma)
	(-1 >>>);


# 2510
SELECT (interj) IF
	(0 %ja-nei%)
	(-1 komma)
	(-2 clb-cnj)
	(-3 s-gr);


# 2511
SELECT (interj) IF
	(0 %ja-nei%)
	(-1 clb-cnj)
	(-2 s-gr);


# 2512
SELECT (interj) IF
	(0 %ja-nei%)
	(-1 s-gr/interj);


# 2513
SELECT (interj) IF
	(NOT 0 %ja-nei-aa%)
	(1 komma/cnj)
	(-1 s-gr/interj)
	(NOT 1 %saa%);


# 2509
SELECT (perf-part) IF
	(NOT 0 pres/pret)
	(-1 %om/enn/som/hvis%)
	(-1C sbu)
	(NOT 1 subst/adj)
	(*1 setn-gr BARRIER pres/pret);


# 2489
SELECT (pr) IF
	(0 subst)
	(NOT 0 fv OR %foere%)
	(NOT 1 komma/cnj)
	(NOT -1 det)
	(*1 subst BARRIER ikke-adv-adj-det);


# 2490
SELECT (pr) IF
	(0 sbu)
	(1 adj-fl)
	(NOT 1 pl-subst OR pres/pret)
	(2 ub-fl-subst OR pres/pret)
	(NOT 3 pres/pret);


# 2491
SELECT (pr) IF
	(NOT 0 %for% OR sbu)
	(NOT 0 prn OR adj)
	(1C adj)
	(NOT -1 pr OR det)
	(2 subst);


# 2492
SELECT (pr) IF
	(NOT 0 %for% OR sbu)
	(NOT 0 clb OR prn)
	(NOT 0 adj OR fv)
	(1 subst)
	(NOT -1 pr OR det);


# 2493
SELECT (pr) IF
	(0 adj)
	(NOT 0 adv OR sbu)
	(-1C vblex);


# 2494
SELECT (pr) IF
	(0 adj)
	(NOT 0 adv OR sbu)
	(-1C vblex)
	(NOT -1 kop);


# 2495
SELECT (pr) IF
	(0 sbu)
	(1 perf-part)
	(2 subst/adj)
	(*1C setn-gr BARRIER fv);


# 2496
SELECT (pr) IF
	(0 sbu)
	(*1 fv LINK -1C advblex LINK -1C subst LINK *-1C subst/prn)
	(*1 fv BARRIER pr)
	(*1 fv BARRIER subst-prop)
	(*1 fv BARRIER subst-gen)
	(*1 fv BARRIER komma/cnj);


# 2497
SELECT (pr) IF
	(0 sbu)
	(*1 fv LINK -1C advblex LINK -1C prn LINK *-1C subst/prn)
	(*1 fv BARRIER pr)
	(*1 fv BARRIER subst-prop)
	(*1 fv BARRIER subst-gen)
	(*1 fv BARRIER komma/cnj);


# 2498
SELECT (pr) IF
	(0 sbu)
	(*1 fv LINK -1C subst LINK *-1C subst/prn)
	(*1 fv BARRIER pr)
	(*1 fv BARRIER subst-prop)
	(*1 fv BARRIER subst-gen)
	(*1 fv BARRIER komma/cnj);


# 2499
SELECT (pr) IF
	(0 sbu)
	(*1 fv LINK -1C prn LINK *-1C subst/prn)
	(*1 fv BARRIER pr)
	(*1 fv BARRIER subst-prop)
	(*1 fv BARRIER subst-gen)
	(*1 fv BARRIER komma/cnj);


# 2500
SELECT (pr) IF
	(0 sbu)
	(NOT 0 adv)
	(*2 sbu LINK NOT 0 %til% LINK NOT *-1 ikke-adv-adj-subst-det-pr)
	(*1 sbu LINK *1 fv);


# 2501
SELECT (pr) IF
	(0 sbu)
	(NOT 0 %som%)
	(*1 komma BARRIER ikke-adv-adj-subst-det-pr);


# 2502
SELECT (pr) IF
	(0 sbu)
	(NOT 0 %foer% OR %der%)
	(*-2C setn-gr BARRIER fv)
	(*1C <<< LINK *-1 fv LINK NOT *-1 fv);


# 2503
SELECT (pr) IF
	(0 sbu)
	(NOT 0 adj)
	(NOT 1 perf-part)
	(*1C setn-gr BARRIER pres/pret);


# 2504
SELECT (pr) IF
	(NOT 0 fv OR %henne%)
	(1 infmerke);


# 2505
SELECT (pr) IF
	(NOT 1 pres/pret OR pr)
	(*1 setn-gr LINK -1C subst/adj LINK NOT 0 subst-prop LINK *-1 ikke-adv-adj-det LINK NOT 1 komma/cnj LINK -1C subst/prn LINK NOT 0 subst-prop LINK *-1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr2 LINK 0 kop LINK 0 pres/pret LINK -1 subst/prn LINK NOT *-1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr2);


# 2506
SELECT (pr) IF
	(-1 setn-gr)
	(NOT 1 pres/pret OR pr)
	(NOT -1 %som%)
	(*1 ikke-adv-adj-substmgen-cnj-detmdem-pr LINK 0 hj-vblex LINK -1 nom)
	(*1 hj-vblex LINK 0 pres/pret LINK NOT 1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr2 LINK *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr2 LINK 0 iv LINK -1 nom);


# 2507
SELECT (pr) IF
	(NOT 0 cnj)
	(*1C pres/pret LINK *1 ikke-adv LINK 0 prn-nom LINK NOT 0 akk LINK NOT 0 det LINK *-1 pres/pret LINK NOT *-1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)
	(*1C pres/pret LINK *1 prn-nom LINK NOT 1 %som% LINK NOT 0 pres/pret);


# 2508
SELECT (pr) IF
	(NOT 0 cnj)
	(*1C pres/pret LINK *1 ikke-adv LINK 0 prn-nom LINK NOT 0 akk LINK NOT 0 det LINK *-1 pres/pret LINK NOT *-1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)
	(*1C pres/pret LINK *1 prn-nom LINK NOT *1 alt);


# 2481
SELECT (pres) IF
	(NOT 0 farlige-vblex)
	(-1 subst/prn)
	(NOT -1 akk)
	(-2 %slik%-adv);


# 2482
SELECT (pres) IF
	(NOT 0 farlige-vblex)
	(-1 advblex)
	(-2 subst/prn)
	(NOT -2 akk)
	(-3 trans2)
	(-3C pres/pret);


# 2483
SELECT (pres) IF
	(NOT 0 farlige-vblex)
	(-1 subst/prn)
	(NOT -1 tall OR akk)
	(-2 trans2)
	(-2C inf/perf-part)
	(NOT -2 ditrans);


# 2484
SELECT (pres) IF
	(NOT 0 farlige-vblex)
	(-1 subst/prn)
	(NOT -1 tall OR akk)
	(NOT 1C pres/pret)
	(-2 trans2)
	(-2C pres/pret)
	(NOT -2 ditrans);


# 2485
SELECT (pres) IF
	(NOT 0 farlige-vblex)
	(-1 adv)
	(-2C subst/prn)
	(NOT -2 prn-r OR dato)
	(*-3C ub-ent-subst LINK NOT 0 subst-gen LINK NOT 0 tittel LINK NOT *1 ikke-subst-adj-det-prn-adv)
	(*-3C ub-ent-subst LINK *-1 det LINK NOT -1 pr LINK NOT *1 ikke-adv-adj-det);


# 2486
SELECT (pres) IF
	(NOT 0 farlige-vblex)
	(-1 adv)
	(-2C subst/prn)
	(NOT -2 dato)
	(*-3C subst/prn LINK NOT 0 subst-prop LINK NOT 0 subst-gen LINK NOT 0 ub-ent-subst LINK NOT *1 ikke-subst-adj-det-prn-adv)
	(*-3C subst/prn LINK NOT -1 pr);


# 2487
SELECT (pres) IF
	(NOT 0 farlige-vblex)
	(-1C subst/prn)
	(NOT -1 dato OR %slags%)
	(*-2C ub-ent-subst LINK NOT 0 subst-gen LINK NOT 0 tittel LINK NOT *1 ikke-subst-adj-det-prn)
	(*-2C ub-ent-subst LINK *-1 det LINK NOT -1 pr LINK NOT *1 ikke-adv-adj-det);


# 2488
SELECT (pres) IF
	(NOT 0 farlige-vblex)
	(-1C subst/prn)
	(NOT -1 dato OR %slags%)
	(*-2C subst/prn LINK NOT 0 subst-prop LINK NOT 0 subst-gen LINK NOT 0 ub-ent-subst LINK NOT *1 ikke-subst-adj-det-prn);


# 2473
SELECT (pret) IF
	(NOT 0 farlige-vblex)
	(-1 subst/prn)
	(NOT -1 akk)
	(-2 %slik%-adv);


# 2474
SELECT (pret) IF
	(NOT 0 farlige-vblex)
	(-1 advblex)
	(-2 subst/prn)
	(NOT -2 akk)
	(-3 trans2)
	(-3C pres/pret);


# 2475
SELECT (pret) IF
	(NOT 0 farlige-vblex)
	(-1 subst/prn)
	(NOT -1 tall OR akk)
	(-2 trans2)
	(-2C inf/perf-part)
	(NOT -2 ditrans);


# 2476
SELECT (pret) IF
	(NOT 0 farlige-vblex)
	(-1 subst/prn)
	(NOT -1 tall OR akk)
	(NOT 1C pres/pret)
	(-2 trans2)
	(-2C pres/pret)
	(NOT -2 ditrans);


# 2477
SELECT (pret) IF
	(NOT 0 farlige-vblex)
	(-1 adv)
	(-2C subst/prn)
	(NOT -2 prn-r OR dato)
	(*-3C ub-ent-subst LINK NOT 0 subst-gen LINK NOT 0 tittel LINK NOT *1 ikke-subst-adj-det-prn-adv)
	(*-3C ub-ent-subst LINK *-1 det LINK NOT -1 pr LINK NOT *1 ikke-adv-adj-det);


# 2478
SELECT (pret) IF
	(NOT 0 farlige-vblex)
	(-1 adv)
	(-2C subst/prn)
	(NOT -2 dato)
	(*-3C subst/prn LINK NOT 0 subst-prop LINK NOT 0 subst-gen LINK NOT 0 ub-ent-subst LINK NOT *1 ikke-subst-adj-det-prn-adv)
	(*-3C subst/prn LINK NOT -1 pr);


# 2479
SELECT (pret) IF
	(NOT 0 farlige-vblex)
	(-1C subst/prn)
	(NOT -1 dato OR %slags%)
	(*-2C ub-ent-subst LINK NOT 0 subst-gen LINK NOT 0 tittel LINK NOT *1 ikke-subst-adj-det-prn)
	(*-2C ub-ent-subst LINK *-1 det LINK NOT -1 pr LINK NOT *1 ikke-adv-adj-det);


# 2480
SELECT (pret) IF
	(NOT 0 farlige-vblex)
	(-1C subst/prn)
	(NOT -1 dato OR %slags%)
	(*-2C subst/prn LINK NOT 0 subst-prop LINK NOT 0 subst-gen LINK NOT 0 ub-ent-subst LINK NOT *1 ikke-subst-adj-det-prn);


#
;


# 2451
SELECT (prn pers) IF
	(0 %det/dette%)
	(1 perf-part)
	(-1C fv)
	(NOT 1 subst-nt);


#
;


# 2452
SELECT (prn pers) IF
	(0 %den/denne%)
	(1 advblex)
	(-1C fv)
	(NOT 2 mf)
	(*-2 setn-gr LINK 1 pr LINK NOT *1 setn-gr);


# 2453
SELECT (prn pers) IF
	(0 %den/denne%)
	(-1C fv)
	(NOT 1 adj-sup OR advblex)
	(*-2 setn-gr LINK 1 pr LINK NOT *1 setn-gr);


# 2454
SELECT (prn pers) IF
	(0 %den/denne%)
	(-1C fv)
	(NOT 1 adj-sup OR advblex)
	(-2C advblex)
	(-3C setn-gr);


# 2455
SELECT (prn pers) IF
	(0 %den/denne%)
	(1 perf-part)
	(-1C fv)
	(NOT 1 subst-mf OR advblex);


# 2456
SELECT (prn pers) IF
	(1 pres-part)
	(-1C vblex)
	(NOT 2 subst/adj);


# 2457
SELECT (prn pers) IF
	(NOT 0 %en/ei/et% OR gen)
	(1 %eller%);


# 2458
SELECT (prn pers) IF
	(NOT 0 %en/ei/et% OR gen)
	(1 %av%);


# 2459
SELECT (prn pers) IF
	(NOT 0 subst-gen OR poss-det)
	(1 komma/cnj)
	(NOT 1 %saa% OR %saa%)
	(NOT 2 %samme% OR %flere%)
	(NOT 2 qnt OR nr2-det);


# 2460
SELECT (prn pers) IF
	(0 %en/ei/et%)
	(NOT 0 gen)
	(1C ikke-adv-adj-subst)
	(NOT 1 nr2-det OR %av%)
	(NOT 1 %som% OR komma/cnj)
	(NOT -1 %ganger%)
	(NOT -2 %hver%);


# 2461
SELECT (prn pers) IF
	(NOT 0 gen OR poss-det)
	(1C ikke-adv-adj-subst)
	(NOT 1 nr2-det);


# 2462
SELECT (prn pers) IF
	(1 strek);


# 2463
SELECT (prn pers) IF
	(0 pl-det)
	(1 %begge/selve/alle%);


# 2464
SELECT (prn pers) IF
	(NOT 0 subst)
	(1C perf-part/inf)
	(-1C fv);


# 2465
SELECT (prn pers) IF
	(NOT 0 subst)
	(1C advblex)
	(-1C fv)
	(2C perf-part/inf);


# 2466
SELECT (prn pers) IF
	(NOT 0 det OR subst)
	(1C ub-ent-nt-adj)
	(2C fv);


# 2467
SELECT (prn pers) IF
	(NOT 0 gen OR subst)
	(1C adv)
	(NOT 2 subst/adj/det-qnt-%av%);


# 2468
SELECT (prn pers) IF
	(NOT 0 subst OR det)
	(-1C fv)
	(*-2 setn-gr LINK 1 pr LINK NOT *1 setn-gr);


# 2469
SELECT (prn pers) IF
	(NOT 0 subst OR det)
	(-1C fv)
	(-2C advblex)
	(-3C setn-gr);


# 2470
SELECT (prn pers) IF
	(NOT 0 det OR subst)
	(1C advblex)
	(2C fv);


# 2471
SELECT (prn pers) IF
	(NOT 0 subst)
	(1C adv)
	(2C fv);


# 2472
SELECT (prn pers) IF
	(NOT 0 gen OR subst)
	(1C fv);


#



;


# 2444
SELECT (prn nom) IF
	(0 nom/akk-prn)
	(NOT 0 gen)
	(*-3 setn-gr LINK 1C pr LINK *1 fv LINK NOT *1 ikke-adv);


# 2445
SELECT (prn nom) IF
	(0 nom/akk-prn)
	(NOT 0 gen)
	(*-2 setn-gr LINK 1 advblex/komp/ub-sup LINK 1 fv LINK NOT *1 ikke-adv);


# 2446
SELECT (prn nom) IF
	(0 nom/akk-prn)
	(NOT 0 gen)
	(-1 sbu)
	(*2 fv BARRIER ikke-adv);


# 2447
SELECT (prn nom) IF
	(0 nom/akk-prn)
	(NOT 0 gen)
	(-1 pres/pret)
	(NOT -1 farlige-vblex)
	(-2 setn-gr)
	(NOT -2 %og% OR %som%);


# 2448
SELECT (prn nom) IF
	(0 nom/akk-prn)
	(NOT 0 gen)
	(1 pres/pret)
	(2 nom/akk-prn);


# 2449
SELECT (prn nom) IF
	(0 nom/akk-prn)
	(NOT 0 gen)
	(1 pres/pret)
	(NOT -1 pres/pret OR pr)
	(*1 setn-gr BARRIER nominativ);


# 2450
SELECT (prn nom) IF
	(-1C fv)
	(*1C iv BARRIER ikke-adv);


# 2442
SELECT (prn akk) IF
	(0 nom/akk-prn)
	(NOT 0 gen)
	(-1C iv)
	(*-1 setn-gr LINK NOT 1 advblex/komp/ub-sup)
	(*-1 setn-gr LINK NOT 1 pr);


# 2443
SELECT (prn akk) IF
	(0 nom/akk-prn)
	(NOT 0 gen)
	(-1C pr)
	(NOT -1 pr-intrans);


#
;


# 2434
SELECT (prn) IF
	(0 %det/dette%)
	(1 det)
	(NOT 1 nr2-det);


# 2435
SELECT (prn) IF
	(0 %det/dette%)
	(-1 fv)
	(NOT 1 nom);


# 2436
SELECT (prn) IF
	(0 %det/dette%)
	(-1 fv)
	(-2 clb-komma)
	(*1 subst-nt LINK *-1 ikke-adv-adj);


# 2437
SELECT (prn) IF
	(0 %det/dette%)
	(-1 fv)
	(NOT *1 subst-nt BARRIER setn-gr)
	(-2 clb-komma);


# 2438
SELECT (prn) IF
	(0 %det/dette%)
	(-1 fv)
	(*-1 setn-gr LINK 1 advblex/komp/ub-sup)
	(*1 subst-nt LINK *-1 ikke-adv-adj);


# 2439
SELECT (prn) IF
	(0 %det/dette%)
	(-1 fv)
	(NOT 1 adj-sup-be)
	(NOT *1 subst-nt BARRIER setn-gr)
	(*-1 setn-gr LINK 1 advblex/komp/ub-sup);


# 2440
SELECT (prn) IF
	(0 %det/dette%)
	(-1 fv)
	(NOT *1 subst-nt BARRIER setn-gr)
	(NOT 1 adj-sup-be)
	(*-1 setn-gr LINK 1 pr);


# 2441
SELECT (prn) IF
	(1 %selv%);


# 2420
SELECT (sbu) IF
	(0 utfyll-sbu)
	(-1 periode-beg/komma/cnj/strek)
	(NOT 1 setn-gr OR vblex)
	(*1C setn-gr LINK *-1 pres/pret LINK NOT 0 farlige-vblex)
	(*1 setn-gr LINK *-1 iv LINK *-1 ikke-adv LINK 0 pres/pret);


# 2421
SELECT (sbu) IF
	(0 utfyll-sbu)
	(-1 komma/cnj/strek)
	(NOT 1 setn-gr OR vblex)
	(*1C setn-gr LINK *-1 pres/pret LINK NOT 0 farlige-vblex)
	(*1 setn-gr BARRIER iv);


# 2422
SELECT (sbu) IF
	(0 utfyll-sbu)
	(-1C advblex)
	(NOT 1 %da% OR pr)
	(-2 setn-gr)
	(*1 pres/pret BARRIER setn-gr);


# 2423
SELECT (sbu) IF
	(0 utfyll-sbu)
	(-1 setn-gr)
	(NOT 1 fv OR %da%)
	(NOT 1 komma/cnj OR pr)
	(*1 setn-gr LINK *-1 pres/pret LINK NOT 0 farlige-vblex)
	(*1 iv LINK *-1 ikke-adv LINK 0 pres/pret);


# 2424
SELECT (sbu) IF
	(0 utfyll-sbu)
	(NOT 0 pr)
	(-1 setn-gr)
	(NOT 1 fv OR %da%)
	(NOT 1 komma/cnj OR pr)
	(*1 setn-gr LINK *-1 pres/pret LINK NOT 0 farlige-vblex)
	(*1 setn-gr BARRIER iv);


# 2425
SELECT (sbu) IF
	(0 %om/enn/som/hvis%)
	(1 perf-part)
	(NOT 1 be-ent-nt-subst OR be-ent-f-subst)
	(NOT 2 subst/adj)
	(*1 setn-gr BARRIER pres/pret);


# 2426
SELECT (sbu) IF
	(NOT 0 %enda% OR %som%)
	(*1 infmerke LINK *-1 ikke-adv-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK *-1 ikke-det LINK 0 subst/prn LINK NOT *-1 ikke-adv-adj-det)
	(*1C pres/pret LINK NOT -1 komma);


# 2427
SELECT (sbu) IF
	(*-2C dem LINK -1 pr)
	(*-2C dem LINK *1 ikke-adv-adj LINK 0 subst LINK NOT *1 alt)
	(*1 setn-gr LINK -1 iv LINK -1C pres/pret LINK 0 hj-vblex LINK NOT *-1 pres/pret);


# 2428
SELECT (sbu) IF
	(*-2C dem LINK -1 pr)
	(*-2C dem LINK *1 ikke-adv-adj LINK 0 subst LINK NOT *1 alt)
	(*1 setn-gr LINK -1C pres/pret LINK NOT *-1 pres/pret);


# 2429
SELECT (sbu) IF
	(-1 be-subst)
	(-2 pr)
	(*1 setn-gr LINK -1 iv LINK -1C pres/pret LINK 0 hj-vblex LINK NOT *-1 pres/pret);


# 2430
SELECT (sbu) IF
	(-1 be-subst)
	(-2 pr)
	(*1 setn-gr LINK -1C pres/pret LINK NOT *-1 pres/pret);


# 2431
SELECT (sbu) IF
	(0 %som%)
	(NOT 1 %helhet%)
	(*1 infmerke LINK *-1 ikke-adv-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK *-1 ikke-det LINK 0 subst/prn LINK NOT *-1 ikke-adv-adj-det)
	(*1C pres/pret LINK NOT -1 komma);


# 2432
SELECT (sbu) IF
	(0 %enda%)
	(NOT 1 %en/ei/et% OR tegnsetting)
	(*1C subst/prn BARRIER ikke-adv-adj-det)
	(*1C subst/prn LINK *1 ikke-adv LINK 0 pres/pret);


# 2433
SELECT (sbu) IF
	(NOT 0 %enda% OR %bare%)
	(NOT 0 %saa% OR pr)
	(NOT 1 tegnsetting)
	(*1C subst/prn BARRIER ikke-adv-adj-det)
	(*1C subst/prn LINK *1 ikke-adv LINK 0 pres/pret);


# 2418
SELECT (subst sg) IF
	(*-1C prop-det-ent BARRIER ikke-adv-adj);


# 2419
#SELECT (subst sg) IF
#	(NOT 0 pl)
#	(1C setn-gr/vblex)
#	(*-1 cnj LINK NOT 0 <adv> LINK NOT *1 ikke-adv-adj-det)
#	(*-1 cnj LINK *-1 ikke-poss-det LINK 0 subst LINK NOT 0 ikke-subst LINK NOT 0 pl LINK NOT *1 setn-gr);


# 2417
SELECT (subst pl ind) IF
	(*-2 pl-det LINK 1 %slags% LINK NOT *1 ikke-adv-adj);


# 2408
SELECT (subst pl) IF
	(-1 %av%)
	(-2 %hundre/tusen/osv%);


# 2409
SELECT (subst pl) IF
	(-1 %hundre/tusen/osv%)
	(NOT -1 gen);


# 2410
SELECT (subst pl) IF
	(NOT 0 pres/pret OR farlige-fl-subst)
	(NOT -1 komma/cnj OR adv)
	(*-1C setn-gr BARRIER pres/pret)
	(*1C setn-gr BARRIER pres/pret)
	(*-1C tall LINK NOT 0 %en/ei/et% LINK NOT *1 ikke-adv-adj-komma);


# 2411
SELECT (subst pl) IF
	(NOT 0 farlige-fl-subst)
	(NOT -1 adv OR komma/cnj)
	(*-1C tall LINK NOT 0 %en/ei/et% LINK NOT *1 ikke-adv-adj-komma)
	(*1 pres/pret BARRIER setn-gr);


# 2412
SELECT (subst pl) IF
	(NOT 0 farlige-fl-subst)
	(NOT -1 adv OR komma/cnj)
	(*-1C tall LINK NOT 0 %en/ei/et% LINK NOT *1 ikke-adv-adj-komma)
	(*-1 pres/pret BARRIER setn-gr);


# 2413
#SELECT (subst pl) IF
#	(NOT 0 sg)
#	(1C setn-gr/vblex)
#	(*-1 cnj LINK NOT 0 <adv> LINK NOT *1 ikke-adv-adj-det)
#	(*-1 cnj LINK *-1 ikke-poss-det LINK 0 subst LINK NOT 0 ikke-subst LINK NOT 0 sg LINK NOT *1 setn-gr);


# 2414
SELECT (subst pl) IF
	(NOT 0 adj-komp OR farlige-fl-subst)
	(-1C adj-fl)
	(NOT -1 sg OR pres-part);


# 2415
SELECT (subst pl) IF
	(NOT 0 farlige-fl-subst)
	(NOT -1 komma/cnj OR gen)
	(*-1C pl-det LINK NOT 0 tall LINK NOT *1 ikke-adv-adj-komma)
	(*-1C pl-det LINK NOT -1 be-fl-subst)
	(*1 setn-gr LINK *-1C fv LINK NOT 0 farlige-vblex);


# 2416
SELECT (subst pl) IF
	(NOT 0 farlige-fl-subst)
	(NOT -1 komma/cnj OR gen)
	(*-1C pl-det LINK NOT 0 tall LINK NOT *1 ikke-adv-adj-komma)
	(*-1C pl-det LINK NOT -1 be-fl-subst)
	(*-1C fv BARRIER setn-gr);


#
;


#
;


# 2403
SELECT (subst m sg) IF
	(0 adj)
	(NOT 0 farlige-m-subst OR fv)
	(NOT 1 subst-m)
	(NOT -1 komma/cnj)
	(*-1 nr2-det-u-fl BARRIER ikke-adv-adj-det)
	(*-1 nr2-det-u-fl LINK -1C m-det);


# 2404
SELECT (subst m sg) IF
	(0 adj)
	(NOT 0 farlige-m-subst)
	(NOT 1 subst-m)
	(NOT -1 komma/cnj)
	(*-1C m-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj);


# 2405
SELECT (subst m sg) IF
	(NOT 0 farlige-m-subst OR fv)
	(NOT -1 komma/cnj)
	(*-1 nr2-det-u-fl BARRIER ikke-adv-adj-det)
	(*-1 nr2-det-u-fl LINK -1C m-det);


# 2406
SELECT (subst m sg) IF
	(NOT 0 farlige-m-subst OR adj)
	(NOT -1 komma/cnj)
	(*-1C m-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj)
	(*-1C m-det LINK *1 ub-ent-m-adj);


# 2407
SELECT (subst m sg) IF
	(NOT 0 fv OR adj)
	(NOT -1 komma/cnj)
	(*-1C m-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj);


# 2402
SELECT (subst nt sg ind) IF
	(0 ub-ent-nt-subst)
	(NOT 0 farlige-nt-subst OR pres/pret)
	(-1C ub-ent-nt-adj)
	(NOT -1 adj-fl)
	(NOT -2 nt-det);


# 2397
SELECT (subst nt sg) IF
	(0 adj)
	(NOT 0 farlige-nt-subst)
	(NOT 1 subst-nt)
	(NOT -1 komma/cnj)
	(*-1 nr2-det-u-fl BARRIER ikke-adv-adj)
	(*-1 nr2-det-u-fl LINK -1C nt-det);


# 2398
SELECT (subst nt sg) IF
	(0 adj)
	(NOT 0 farlige-nt-subst)
	(1 subst-nt OR fv)
	(NOT -1 komma/cnj)
	(*-1C nt-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj);


# 2399
SELECT (subst nt sg) IF
	(0 adj)
	(NOT 0 farlige-nt-subst)
	(NOT 1 subst-nt)
	(NOT -1 komma/cnj)
	(*-1C nt-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj);


# 2400
SELECT (subst nt sg) IF
	(NOT 0 adj OR farlige-nt-subst)
	(NOT -1 komma/cnj)
	(*-1 nr2-det-u-fl BARRIER ikke-adv-adj)
	(*-1 nr2-det-u-fl LINK -1C nt-det);


# 2401
SELECT (subst nt sg) IF
	(NOT 0 adj OR farlige-nt-subst)
	(NOT -1 komma/cnj)
	(*-1C nt-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj);


# 2392
SELECT (subst f sg) IF
	(0 adj)
	(NOT 1 subst-f)
	(NOT -1 komma/cnj)
	(*-1 nr2-det-u-fl BARRIER ikke-adv-adj)
	(*-1 nr2-det-u-fl LINK -1C f-det);


# 2393
SELECT (subst f sg) IF
	(0 adj)
	(NOT 1 subst-f)
	(NOT -1 komma/cnj)
	(*-1C f-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj);


# 2394
SELECT (subst f sg) IF
	(NOT 0 adj)
	(NOT -1 komma/cnj)
	(*-1 nr2-det-u-fl BARRIER ikke-adv-adj)
	(*-1 nr2-det-u-fl LINK -1C f-det);


# 2395
SELECT (subst f sg) IF
	(NOT 0 adj)
	(NOT -1 komma/cnj)
	(*-1C f-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj)
	(*-1C f-det LINK *1 ub-ent-f-adj);


# 2396
SELECT (subst f sg) IF
	(NOT 0 adj)
	(NOT -1 komma/cnj)
	(*-1C f-det LINK NOT 0 nr2-det LINK NOT *1 ikke-adv-adj);


# 2386
SELECT (subst prop gen) IF
	(0 subst-prop)
	(NOT 0 %jesu/kristi/pauli%)
	(1 anf);


# 2387
SELECT (subst prop gen) IF
	(0 subst-prop)
	(NOT 0 %jesu/kristi/pauli%)
	(1C subst)
	(NOT 1 subst-prop);


# 2388
SELECT (subst prop gen) IF
	(0 subst-prop)
	(NOT 0 %jesu/kristi/pauli%)
	(1 nr2-det)
	(2 adj-be)
	(3 subst);


# 2389
SELECT (subst prop gen) IF
	(0 subst-prop)
	(NOT 0 %jesu/kristi/pauli%)
	(1 nr2-det)
	(2 subst);


# 2390
SELECT (subst prop gen) IF
	(0 subst-prop)
	(NOT 0 %jesu/kristi/pauli%)
	(1 pl)
	(NOT 1 pres/pret)
	(2 pl-subst);


# 2391
SELECT (subst prop gen) IF
	(0 subst-prop)
	(NOT 0 %jesu/kristi/pauli%)
	(1 adj-be)
	(NOT 1 pres/pret)
	(2 subst);


# 2385
SELECT (subst prop) IF
	(0 %hoeyre/venstre%)
	(-1 >>>);


# 2352
SELECT (subst) IF
	(NOT 0 farlige-adj-subst OR ikke-adj-subst)
	(1 komma/cnj)
	(-1C pr)
	(NOT 2 subst/adj);


# 2353
SELECT (subst) IF
	(NOT 0 farlige-m-subst OR farlige-nt-subst)
	(-1C adj)
	(-2C pr);


# 2354
SELECT (subst) IF
	(1 cnj)
	(-1C subst-gen)
	(NOT 2 adj);


# 2355
SELECT (subst) IF
	(-1C subst-gen)
	(NOT 1 adj-subst-cnj);


# 2356
SELECT (subst) IF
	(NOT 0 iv)
	(1 komma/cnj)
	(-1 cnj)
	(NOT -1 clb OR <adv>)
	(-2C subst)
	(NOT 2 adj/adv)
	(NOT -2 gen)
	(*-3 ikke-adv-adj-det LINK NOT 0 pr);


# 2357
SELECT (subst) IF
	(NOT 0 iv)
	(1 komma/cnj)
	(-1 cnj)
	(NOT -1 clb OR <adv>)
	(-2C subst)
	(NOT 2 adj/adv)
	(NOT -2 gen)
	(NOT *-3 ikke-adv-adj-det BARRIER setn-gr);


# 2358
SELECT (subst) IF
	(NOT 0 iv)
	(-1 cnj)
	(NOT 1 komma/cnj OR strek/parentes)
	(NOT -1 clb OR <adv>)
	(-2C subst)
	(NOT -2 gen)
	(*-3 ikke-adv-adj-det LINK NOT 0 pr);


# 2359
SELECT (subst) IF
	(NOT 0 iv)
	(-1 cnj)
	(NOT 1 komma/cnj OR strek/parentes)
	(NOT -1 clb OR <adv>)
	(-2C subst)
	(NOT -2 gen)
	(NOT *-3 ikke-adv-adj-det BARRIER setn-gr);


# 2360
SELECT (subst) IF
	(1 cnj)
	(NOT 1 clb OR <adv>)
	(2C subst)
	(NOT 2 gen);


# 2361
SELECT (subst) IF
	(0 samset OR adj)
	(NOT 0 pres/pret)
	(NOT 1 subst);


# 2362
SELECT (subst) IF
	(0 samset OR pres/pret)
	(NOT 0 adj)
	(NOT -1 %som/enn%);


#
;


# 2363
SELECT (subst) IF
	(-1 %noen/noe%)
	(-2C pr);


#
;


# 2364
#SELECT (subst) IF
#	(0 spraak)
#	(-1 %i/paa%)
#	(*1 setn-gr/vblex LINK *-1 subst/adj LINK 0 spraak LINK NOT *-1 subst);


# 2365
SELECT (subst) IF
	(0 spraak)
	(-1 %i/paa%)
	(NOT 1 subst/adj OR komma/cnj);


# 2366
SELECT (subst) IF
	(0 spraak)
	(1 komma/cnj)
	(NOT 2 adj)
	(*-1C setn-gr BARRIER kop);


# 2367
SELECT (subst) IF
	(0 spraak)
	(NOT 1 subst/adj OR komma/cnj)
	(*-1C setn-gr BARRIER kop);


# 2368
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2 subst)
	(3C setn-gr);


# 2369
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2C adj)
	(3C setn-gr);


# 2370
SELECT (subst) IF
	(NOT 0 adj)
	(-1 adj-be)
	(NOT -1 ikke-adj OR adj-ub)
	(NOT -2 det)
	(*-1C setn-gr BARRIER kop);


# 2371
SELECT (subst) IF
	(0 pres)
	(-1 adj)
	(*-1C pr BARRIER ikke-adv-adj)
	(*1C fv BARRIER setn-gr);


# 2372
SELECT (subst) IF
	(0 pres)
	(-1 adj)
	(*-1C pr BARRIER ikke-adv-adj)
	(*-1C fv BARRIER setn-gr);


# 2373
SELECT (subst) IF
	(-1 %hele%)
	(NOT 1 subst/adj)
	(NOT -2 %det%);


# 2374
SELECT (subst) IF
	(NOT 0 pres/pret)
	(-1 %hele%)
	(NOT 1 subst/adj)
	(-2 %det%);


# 2375
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2C adj)
	(3 subst)
	(4C setn-gr);


# 2376
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2C det)
	(3C adj)
	(4 subst)
	(5C setn-gr);


# 2377
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2C det)
	(4C adj)
	(5C setn-gr);


# 2378
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2C adj)
	(*1 fv BARRIER setn-gr)
	(*1 ikke-adv-adj-subst-prn-cnj-det2-pr BARRIER setn-gr);


# 2379
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2C det)
	(3 adj)
	(4 subst)
	(*1 fv BARRIER setn-gr)
	(*1 ikke-adv-adj-subst-prn-cnj-det2-pr BARRIER setn-gr);


# 2380
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2C det)
	(3C adj)
	(*1 fv BARRIER setn-gr)
	(*1 ikke-adv-adj-subst-prn-cnj-det2-pr BARRIER setn-gr)


;


# 2381
SELECT (subst) IF
	(NOT 0 ikke-subst-vblex)
	(1 %og%)
	(-1 %baade%)
	(2 subst)
	(*1 fv BARRIER setn-gr)
	(*1 ikke-adv-adj-subst-prn-cnj-det2-pr BARRIER setn-gr);


# 2382
SELECT (subst) IF
	(1 subst-prop)
	(-1 %baade%)
	(2 %og%)
	(3C nom);


# 2383
SELECT (subst) IF
	(1 subst-prop)
	(-1 %baade%)
	(2 subst-prop)
	(3 %og%)
	(4C nom);


# 2384
SELECT (subst) IF
	(1 subst-prop)
	(-1 %hverken/verken%)
	(2 %eller%)
	(3C nom);


# 2301
SELECT (vblex pres) IF
	(NOT 0 imp OR pret)
	(-1 >>>)
	(*1C setn-gr LINK 0 spoersmaal-t LINK NOT *-1 fv);


# 2302
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-forledd-vblex)
	(1 infmerke)
	(-1C adj)
	(NOT *1 overskrift BARRIER setn-gr)
	(-2C setn-gr);


# 2303
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(-1C prn-pers)
	(*-2C setn-gr BARRIER fv);


# 2304
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(NOT -1 det OR subst-gen)
	(*-2 %som% LINK NOT *-1 fv)
	(*-2 %som% LINK 1 fv LINK NOT *1 fv)
	(*-2 %som% BARRIER setn-gr)
	(*1 setn-gr BARRIER fv);


# 2305
SELECT (vblex pres) IF
	(0 subst)
	(NOT 0 farlige-vblex)
	(-1 prn)
	(1C subst)
	(-2 sbu);


#
;


# 2306
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C advblex)
	(NOT 1 pres/pret)
	(-2 subst)
	(*-3C sbu BARRIER ikke-adv-adj-subst-prn-cnj-det2);


# 2307
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C advblex)
	(-2 subst)
	(NOT -2 ikke-subst)
	(-3C sbu);


# 2308
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C advblex)
	(-2C advblex)
	(-3 subst)
	(NOT -3 ikke-subst)
	(-4C sbu);


# 2309
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C advblex)
	(-2C advblex)
	(-3C prn)
	(-4C sbu);


# 2310
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C advblex)
	(-2C prn)
	(-3C sbu);


# 2311
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(-1C advblex)
	(-2 %som%)
	(NOT -2 pr);


# 2312
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(1 pres/pret)
	(-1 %som%)
	(NOT -1 pr)
	(*-2C setn-gr BARRIER fv);


# 2313
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(-1 %som%)
	(NOT 1 pres/pret)
	(NOT -1 pr);


# 2314
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 clb-komma)
	(*-3 >>> BARRIER ikke-adv-adj-subst-prn-cnj-det-sbu2)
	(*-3 >>> LINK *1 %som% LINK *1C fv);


# 2315
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 clb-komma)
	(*-3 >>> LINK 1 subst LINK 1 %som% LINK *1C fv);


# 2316
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 clb-komma)
	(*-3 >>> LINK 1 prn LINK 1 %som% LINK *1C fv);


# 2317
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 clb-komma)
	(*-3 >>> LINK 1 sbu LINK *1 sbu LINK *1 fv LINK *1 fv);


# 2318
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 clb-komma)
	(*-3 >>> LINK 1 sbu LINK *1 fv LINK *1 sbu LINK *1 fv);


#
;


# 2319
#SELECT (vblex pres) IF
#	(NOT 0 farlige-vblex OR pret)
#	(-1 clb-komma)
#	(*-3 >>> LINK 1 pr-intrans/adv LINK 1 sbu LINK *1C fv LINK NOT *1 setn-gr-u-komma);


# 2320
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 clb-komma)
	(*-3 >>> LINK 1 replikk LINK 1 sbu LINK *1C pres LINK NOT *1 pres);


# 2321
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 clb-komma)
	(*-3 >>> LINK 1 cnj LINK 1 sbu LINK *1C pres LINK NOT *1 pres);


# 2322
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 clb-komma)
	(*-3 >>> LINK 1 sbu LINK *1C pres LINK NOT *1 pres);


#
;


# 2323
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C subst)
	(NOT 1 pres/pret)
	(NOT -1 gen OR %hundre/tusen/osv%)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*-2C setn-gr LINK NOT 1 pr);


# 2324
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C poss-det)
	(NOT 1 pres/pret)
	(-2C subst)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2);


# 2325
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C subst)
	(NOT 1 pres/pret)
	(NOT -1 gen OR %hundre/tusen/osv%)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2);


# 2326
SELECT (vblex pres) IF
	(NOT 0 farlige-forledd-vblex OR pret)
	(-1C subst)
	(NOT -1 gen)
	(-2 adj)
	(-3C setn-gr);


# 2327
SELECT (vblex pres) IF
	(NOT 0 farlige-forledd-vblex OR pret)
	(-1C subst)
	(NOT -1 gen)
	(-2C setn-gr);


# 2328
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1 prn)
	(-2C setn-gr)
	(*1 setn-gr BARRIER pres/pret);


# 2329
SELECT (vblex pres) IF
	(NOT 0 farlige-forledd-vblex OR pret)
	(-1C prn)
	(-2C setn-gr);


# 2330
SELECT (vblex pres) IF
	(NOT 0 farlige-forledd-vblex OR pret)
	(-1C subst/prn)
	(NOT -1 %noen% OR gen)
	(*-2C setn-gr LINK 1 pr LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det2-pr);


# 2331
SELECT (vblex pres) IF
	(NOT 0 subst-gen OR farlige-forledd-vblex)
	(-1 subst/prn)
	(NOT 1 pres/pret)
	(NOT -1 %noen% OR gen)
	(*-2C setn-gr LINK 1 pr LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det2);


# 2332
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-forledd-vblex)
	(-1C pr-intrans)
	(-2C setn-gr);


# 2333
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-forledd-vblex)
	(-1C advblex)
	(NOT -1 %ikke/ogsaa%)
	(*-2C setn-gr BARRIER ikke-adv);


# 2334
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(-1 clb-komma)
	(*-2 clb-komma LINK 1 pres LINK NOT 0 sier-vblex);


# 2335
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(-1 clb-komma)
	(*1 clb-komma LINK 1 pres);


# 2336
SELECT (vblex pres) IF
	(0 sier-vblex)
	(1 subst/prn)
	(-1 replikk)
	(2 setn-gr);


# 2337
SELECT (vblex pres) IF
	(0 sier-vblex)
	(1 nom)
	(-1 clb-komma)
	(*-1 fv BARRIER setn-gr);


# 2338
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(NOT 1 pres/pret)
	(*-1C setn-gr BARRIER pres/pret)
	(*4 setn-gr LINK *-1 pres/pret LINK -1 subst LINK -1C subst/prn LINK NOT 0 gen LINK NOT 0 subst-prop LINK NOT *-1 pres/pret)
	(*4 setn-gr BARRIER setn-gr);


# 2339
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(NOT 1 pres/pret)
	(*-1C setn-gr BARRIER pres/pret)
	(*4 setn-gr LINK *-1 pres/pret LINK -1 prn LINK -1C subst/prn LINK NOT 0 gen LINK NOT 0 subst-prop LINK NOT *-1 pres/pret)
	(*4 setn-gr BARRIER setn-gr);


# 2340
SELECT (vblex pres) IF
	(NOT 0 pret OR farlige-vblex)
	(-1C clb-cnj)
	(*1 setn-gr BARRIER pres/pret);


#
;


# 2341
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR pret)
	(-1C subst-prop)
	(NOT -1 subst-gen)
	(-2C setn-gr);


# 2342
SELECT (vblex pres) IF
	(0 m-hj-vblex)
	(NOT -1 m-hj-vblex OR infmerke)
	(*1 setn-gr LINK *-1C inf LINK NOT *-1 infmerke)
	(*-1 setn-gr BARRIER pres/pret)
	(*1 setn-gr BARRIER m-hj-vblex-fv);


# 2343
SELECT (vblex pres) IF
	(NOT 0 adv OR pret)
	(1C adv)
	(*-2C setn-gr LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT *1 alt);


# 2344
SELECT (vblex pres) IF
	(NOT 0 pret OR setn-gr)
	(-1C setningsadv)
	(NOT -1 %nok% OR %saa%)
	(*-2 ikke-adv LINK 0 nom LINK NOT 0 fv LINK *-1 ikke-adv-adj-det LINK NOT 0 fv);


# 2345
SELECT (vblex pres) IF
	(NOT 0 imp OR setn-gr)
	(-1 %ikke%)
	(NOT 1 %men%)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT *-2 ikke-adv BARRIER setn-gr);


# 2346
SELECT (vblex pres) IF
	(NOT 0 pret OR setn-gr)
	(-1C setningsadv)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 %saa% OR %ikke/ogsaa%)
	(NOT *-2 ikke-adv BARRIER setn-gr);


# 2347
SELECT (vblex pres) IF
	(NOT 0 pret)
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 %enn%);


# 2348
SELECT (vblex pres) IF
	(NOT 0 imp OR pr)
	(NOT *1 fv OR overskrift)
	(NOT *-1 fv BARRIER setn-gr)
	(*-1 >>> LINK NOT 0 kolon)
	(*-1 <<< LINK NOT 0 kolon);


# 2349
SELECT (vblex pres) IF
	(NOT 0 pret)
	(1 subst-prop)
	(-1 %baade%)
	(2 subst-prop)
	(3 %og%)
	(4C pres/pret);


# 2350
SELECT (vblex pres) IF
	(NOT 0 pret)
	(1 subst-prop)
	(-1 %baade%)
	(2 %og%)
	(3C pres/pret);


# 2351
SELECT (vblex pres) IF
	(NOT 0 subst-prop OR farlige-vblex)
	(-1C subst/prn)
	(NOT -1 gen OR %slags%)
	(NOT -1 dato OR prn-r)
	(*1 ikke-adv LINK 0 prn-akk);


# 2295
SELECT (vblex inf pass) IF
	(0 farlige-inf)
	(NOT 0 %slettes%)
	(-1 m-hj-vblex);


# 2296
SELECT (vblex inf pass) IF
	(0 farlige-inf)
	(NOT 0 %slettes%)
	(-1C komma)
	(NOT -1 clb)
	(*-1C inf BARRIER setn-gr);


# 2297
SELECT (vblex inf pass) IF
	(0 farlige-inf)
	(NOT 0 %slettes%)
	(-1C cnj)
	(NOT -1 clb)
	(*-1C inf BARRIER setn-gr);


# 2298
SELECT (vblex inf pass) IF
	(0 farlige-inf)
	(NOT 0 %slettes%)
	(NOT -1 det)
	(*-1 aci BARRIER setn-gr)
	(*-2 aci LINK NOT 0 ikke-vblex LINK NOT *1 ikke-subst-adj-det-prn-adv);


# 2299
SELECT (vblex inf pass) IF
	(0 farlige-inf)
	(NOT 0 %slettes%)
	(-1 @adv)
	(*-1 m-hj-vblex BARRIER setn-gr)
	(*-1 m-hj-vblex BARRIER inf)
	(*-1 m-hj-vblex BARRIER perf-part);


# 2300
SELECT (vblex inf pass) IF
	(0 farlige-inf)
	(NOT 0 %slettes%)
	(NOT -1 ikke-adv-subst-prn-cnj)
	(*-1 m-hj-vblex BARRIER setn-gr)
	(*-1 m-hj-vblex BARRIER inf)
	(*-1 m-hj-vblex BARRIER perf-part);


# 2284
SELECT (vblex inf) IF
	(-1 %og%)
	(-2 pres-part);


# 2285
SELECT (vblex inf) IF
	(NOT 0 farlige-inf)
	(-1C komma)
	(NOT -1 clb)
	(*-1C inf BARRIER setn-gr);


# 2286
SELECT (vblex inf) IF
	(NOT 0 farlige-inf)
	(-1C cnj)
	(NOT -1 clb)
	(*-1C inf BARRIER setn-gr);


# 2287
SELECT (vblex inf) IF
	(-1 %antas%);


# 2288
SELECT (vblex inf) IF
	(-1 %ikke%)
	(*-1 npu-vblex BARRIER setn-gr);


# 2289
SELECT (vblex inf) IF
	(NOT 0 farlige-inf)
	(NOT -1 det)
	(*-1 aci BARRIER setn-gr)
	(*-2 aci LINK NOT 0 ikke-vblex LINK NOT *1 ikke-subst-adj-det-prn-adv);


# 2290
SELECT (vblex inf) IF
	(NOT 0 farlige-inf)
	(-1 @adv)
	(*-1 m-hj-vblex BARRIER setn-gr)
	(*-1 m-hj-vblex BARRIER inf)
	(*-1 m-hj-vblex BARRIER perf-part);


# 2291
SELECT (vblex inf) IF
	(NOT 0 farlige-inf)
	(NOT -1 ikke-adv-subst-prn-cnj)
	(*-1 m-hj-vblex BARRIER setn-gr)
	(*-1 m-hj-vblex BARRIER inf)
	(*-1 m-hj-vblex BARRIER perf-part);


# 2292
SELECT (vblex inf) IF
	(NOT 0 farlige-inf)
	(-1 m-hj-vblex);


# 2293
SELECT (vblex inf) IF
	(*-1C infmerke BARRIER inf);


# 2294
SELECT (vblex inf) IF
	(NOT 0 farlige-inf)
	(*-1 %hvorfor% BARRIER ikke-adv);


# 2257
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(-1 subst)
	(NOT 1 subst/adj)
	(*1 overskrift BARRIER setn-gr);


# 2258
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(-1 setn-gr)
	(*1 overskrift BARRIER setn-gr);


# 2259
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(-1C komma)
	(NOT -1 clb)
	(*-1C perf-part BARRIER setn-gr);


# 2260
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(-1C cnj)
	(NOT -1 clb)
	(*-1C perf-part BARRIER setn-gr);


# 2261
SELECT (vblex perf-part) IF
	(NOT 0 be-ent-f-subst OR farlige-part)
	(-1C perf-part);


# 2262
SELECT (vblex perf-part) IF
	(NOT 0 be-ent-nt-subst OR farlige-part)
	(-1C pass);


# 2263
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part OR subst)
	(-1 adj-komp)
	(-2 komma/strek);


# 2264
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(1C pr)
	(-1C subst)
	(*1C pres/pret BARRIER ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*1C pres/pret LINK -1C subst/prn LINK *-1 ikke-adv-adj-det LINK NOT 0 subst/prn);


# 2265
SELECT (vblex perf-part) IF
	(NOT 0 subst OR farlige-part)
	(-1 komma)
	(1C pr)
	(*-1C setn-gr LINK NOT 0 sbu);


# 2266
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part OR pres/pret)
	(1C pr)
	(-1C subst);


# 2267
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part OR inf)
	(NOT -1 det-pr-infmerke-adjbe)
	(*-1 m-hj-vblex-pret BARRIER fv)
	(*-1 m-hj-vblex-pret BARRIER perf-part)
	(*-1 m-hj-vblex-pret BARRIER inf)
	(*-1 m-hj-vblex-pret BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 2268
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(NOT -1 det-pr-infmerke-adjbe)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 p-hj-vblex LINK 0 inf LINK *-1 infmerke);


# 2269
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(NOT -1 det-pr-infmerke-adjbe)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 som/komma/og BARRIER setn-gr);


# 2270
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(-1 @adv)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 2271
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(-1 det-etterstilt)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 2272
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(NOT -1 det-pr-infmerke-adjbe)
	(-2 be-nt-det LINK NOT 1 be-ent-nt-adj)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 2273
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(NOT -1 det-pr-infmerke-adjbe)
	(NOT -2 be-nt-det)
	(*-1 p-hj-vblex BARRIER fv)
	(*-1 p-hj-vblex BARRIER perf-part)
	(*-1 p-hj-vblex BARRIER setn-gr)
	(*-1 nom BARRIER setn-gr);


# 2274
SELECT (vblex perf-part) IF
	(-1 %ikke/aldri%)
	(*-2 subst/prn LINK *-1 ikke-adv-adj-det LINK 0 %ha%-pres/pret LINK 0 subst LINK -1 adj-komp);


# 2275
SELECT (vblex perf-part) IF
	(-1 %ingen%)
	(-2 %ha%-pres/pret)
	(-3 subst)
	(-4 adj-komp);


# 2276
SELECT (vblex perf-part) IF
	(*-1 vblex LINK 0 %faa% LINK *1 ikke-adv-adj-det LINK 0 be-subst LINK 1 %sitt% LINK NOT *1 ikke-adv-adj);


# 2277
SELECT (vblex perf-part) IF
	(-1C %ha%-pres/pret)
	(*1 %siden% BARRIER setn-gr);


# 2278
SELECT (vblex perf-part) IF
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-adv LINK 0 p-hj-vblex LINK 0 pres/pret LINK NOT *1 alt);


#
;


#



;


# 2279
SELECT (vblex perf-part) IF
	(0 <perf-part>)
	(NOT 0 farlige-adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 prn-akk-fl BARRIER ikke-adv)
	(*-1 prn-akk-fl LINK -1C objpred-prn-vblex LINK NOT -1 clb);


# 2280
SELECT (vblex perf-part) IF
	(0 <perf-part>)
	(NOT 0 farlige-adj)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 be-fl-subst BARRIER ikke-adv)
	(*-1 be-fl-subst LINK *-1C objpred-vblex LINK NOT -1 clb)
	(*-1 objpred-vblex BARRIER ikke-adv-adj-det-subst);


# 2281
SELECT (vblex perf-part) IF
	(0 <perf-part>)
	(NOT 0 farlige-adj)
	(NOT 1 subst/adj)
	(NOT -1 det)
	(*-1 setn-gr LINK NOT 1 pr/adv)
	(*-1 %seg% BARRIER ikke-adv)
	(*-1 %seg% LINK -1C objpred-prn-vblex LINK *-1 nom LINK 0 nom-fl);


# 2282
#SELECT (vblex perf-part) IF
#	(NOT 0 ikke-adj-vblex OR inf)
#	(*-1 strek/parentes BARRIER pres/pret)
#	(*-1 strek/parentes LINK NOT 0 parentes-beg LINK *-1 strek/parentes LINK NOT 0 parentes-slutt LINK *-1 pres/pret LINK 0 hj-vblex LINK NOT 0 kop LINK NOT *1 kop)
#	(*-1 strek/parentes LINK *-1 strek/parentes LINK *-1 pres/pret LINK NOT *1 setn-gr-u-strek);


# 2283
#SELECT (vblex perf-part) IF
#	(NOT 0 ikke-adj-vblex)
#	(*-1 strek/parentes BARRIER pres/pret)
#	(*-1 strek/parentes LINK NOT 0 parentes-beg LINK *-1 strek/parentes LINK NOT 0 parentes-slutt LINK *-1 pres/pret LINK 0 p-hj-vblex LINK NOT 0 kop LINK NOT *1 kop)
#	(*-1 strek/parentes LINK *-1 strek/parentes LINK *-1 pres/pret LINK NOT *1 setn-gr-u-strek);


# 2204
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex OR imp)
	(-1 >>>)
	(*1C setn-gr LINK 0 spoersmaal-t LINK NOT *-1 fv);


# 2205
SELECT (vblex pret) IF
	(NOT 0 farlige-forledd-vblex OR %saa%)
	(1 infmerke)
	(-1C adj)
	(NOT *1 overskrift BARRIER setn-gr)
	(-2C setn-gr);


# 2206
SELECT (vblex pret) IF
	(0 %la%)
	(1 nom)
	(-1C clb-cnj)
	(2 advblex)
	(NOT 3 inf)
	(*1 setn-gr BARRIER pres/pret);


# 2207
SELECT (vblex pret) IF
	(0 %la%)
	(1 nom)
	(-1C clb-cnj)
	(NOT 2 inf OR advblex)
	(*1 setn-gr BARRIER pres/pret);


# 2208
SELECT (vblex pret) IF
	(0 %la%)
	(-1C clb-cnj)
	(NOT 1 nom)
	(*1 setn-gr BARRIER pres/pret);


# 2209
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C prn-pers)
	(NOT 1 fv)
	(*-2C setn-gr BARRIER fv);


# 2210
SELECT (vblex pret) IF
	(NOT 0 cnj/prn OR farlige-vblex)
	(NOT 0 inf OR perf-part)
	(NOT -1 adj OR subst-gen)
	(*-2 %som% LINK NOT *-1 fv)
	(*-2 %som% LINK 1 fv LINK NOT *1 fv)
	(*-2 %som% BARRIER setn-gr);


#
;


# 2211
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C advblex)
	(NOT 1 pres/pret)
	(-2 subst)
	(*-3C sbu BARRIER ikke-adv-adj-subst-prn-cnj-det2);


# 2212
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C advblex)
	(-2 subst)
	(NOT -2 ikke-subst)
	(-3C sbu);


# 2213
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C advblex)
	(-2C advblex)
	(-3 subst)
	(NOT -3 ikke-subst)
	(-4C sbu);


# 2214
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C advblex)
	(-2C advblex)
	(-3C prn)
	(-4C setn-gr);


# 2215
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C advblex)
	(-2C prn)
	(-3C setn-gr);


# 2216
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C advblex)
	(-2 %som%)
	(NOT -2 pr);


# 2217
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(1 pres/pret)
	(-1 %som%)
	(NOT -1 pr)
	(*-2C setn-gr BARRIER fv);


# 2218
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 %som%)
	(NOT 1 pres/pret)
	(NOT -1 pr);


# 2219
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-3 >>> BARRIER ikke-adv-adj-subst-prn-cnj-det-sbu2)
	(*-3 >>> LINK *1 %som% LINK *1C fv);


# 2220
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-3 >>> LINK 1 subst LINK 1 %som% LINK *1C fv);


# 2221
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-3 >>> LINK 1 prn LINK 1 %som% LINK *1C fv);


# 2222
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-3 >>> LINK 1 sbu LINK *1 sbu LINK *1 fv LINK *1 fv);


# 2223
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-3 >>> LINK 1 sbu LINK *1 fv LINK *1 sbu LINK *1 fv);


#
;


# 2224
#SELECT (vblex pret) IF
#	(NOT 0 farlige-vblex)
#	(-1 clb-komma)
#	(*-3 >>> LINK 1 pr-intrans/adv LINK 1 sbu LINK *1C fv LINK NOT *1 setn-gr-u-komma);


# 2225
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-3 >>> LINK 1 replikk LINK 1 sbu LINK *1C pret LINK NOT *1 pret);


# 2226
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-3 >>> LINK 1 cnj LINK 1 sbu LINK *1C pret LINK NOT *1 pret);


# 2227
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-3 >>> LINK 1 sbu LINK *1C pret LINK NOT *1 pret);


#
;


# 2228
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C subst)
	(NOT 1 pr)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT 1 pres/pret)
	(NOT -1 gen OR %hundre/tusen/osv%)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*-2C setn-gr LINK NOT 1 pr);


# 2229
SELECT (vblex pret) IF
	(NOT 0 perf-part OR farlige-vblex)
	(-1C subst)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT 1 pres/pret)
	(NOT -1 gen OR %hundre/tusen/osv%)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*-2C setn-gr LINK NOT 1 pr);


# 2230
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex OR pres)
	(-1C poss-det)
	(NOT 1 pres/pret)
	(-2C subst)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2);


# 2231
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1C subst)
	(NOT 1 pr)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT 1 pres/pret)
	(NOT -1 gen OR %hundre/tusen/osv%)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2);


# 2232
SELECT (vblex pret) IF
	(NOT 0 perf-part OR farlige-vblex)
	(-1C subst)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT 1 pres/pret)
	(NOT -1 gen OR %hundre/tusen/osv%)
	(*-2C setn-gr BARRIER ikke-adv-adj-subst-prn-cnj-det2);


# 2233
SELECT (vblex pret) IF
	(NOT 0 farlige-forledd-vblex)
	(-1C subst)
	(NOT 1 pr)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 gen)
	(-2C setn-gr);


# 2234
SELECT (vblex pret) IF
	(NOT 0 farlige-forledd-vblex OR pres)
	(-1C subst)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 gen)
	(-2 adj)
	(-3C setn-gr);


# 2235
SELECT (vblex pret) IF
	(NOT 0 perf-part OR farlige-forledd-vblex)
	(-1C subst)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 gen)
	(-2C setn-gr);


# 2236
SELECT (vblex pret) IF
	(NOT 0 farlige-forledd-vblex)
	(-1 prn)
	(NOT *1 overskrift BARRIER setn-gr)
	(-2C setn-gr)
	(*1 setn-gr BARRIER pres/pret);


# 2237
SELECT (vblex pret) IF
	(NOT 0 farlige-forledd-vblex OR %saa%)
	(-1C prn)
	(NOT *1 overskrift BARRIER setn-gr)
	(-2C setn-gr);


# 2238
SELECT (vblex pret) IF
	(NOT 0 %saa% OR farlige-forledd-vblex)
	(-1C subst/prn)
	(NOT -1 %noen% OR gen)
	(*-2C setn-gr LINK 1 pr LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det2-pr);


# 2239
SELECT (vblex pret) IF
	(NOT 0 %saa% OR farlige-forledd-vblex)
	(-1C subst/prn)
	(NOT -1 %noen% OR gen)
	(*-2C setn-gr LINK 1 pr LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det2);


# 2240
SELECT (vblex pret) IF
	(NOT 0 farlige-forledd-vblex)
	(-1C pr-intrans)
	(-2C setn-gr);


# 2241
SELECT (vblex pret) IF
	(NOT 0 farlige-forledd-vblex)
	(-1C advblex)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 %ikke/ogsaa%)
	(*-2C setn-gr BARRIER ikke-adv);


# 2242
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*-2 clb-komma LINK 1 pret LINK NOT 0 sier-vblex);


# 2243
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 clb-komma)
	(*1 clb-komma LINK 1 pret);


# 2244
SELECT (vblex pret) IF
	(0 sier-vblex)
	(1 subst/prn)
	(-1 replikk)
	(2 setn-gr);


# 2245
SELECT (vblex pret) IF
	(0 sier-vblex)
	(1 nom)
	(-1 clb-komma)
	(*-1 fv BARRIER setn-gr);


# 2246
SELECT (vblex pret) IF
	(NOT 0 pres OR farlige-vblex)
	(NOT 1 pres/pret)
	(*-1C setn-gr BARRIER pres/pret)
	(*4 setn-gr LINK *-1 pres/pret LINK -1 subst LINK -1C subst/prn LINK NOT 0 gen LINK NOT 0 subst-prop LINK NOT *-1 pres/pret)
	(*4 setn-gr BARRIER setn-gr);


# 2247
SELECT (vblex pret) IF
	(NOT 0 pres OR farlige-vblex)
	(NOT 1 pres/pret)
	(*-1C setn-gr BARRIER pres/pret)
	(*4 setn-gr LINK *-1 pres/pret LINK -1 prn LINK -1C subst/prn LINK NOT 0 gen LINK NOT 0 subst-prop LINK NOT *-1 pres/pret)
	(*4 setn-gr BARRIER setn-gr);


# 2248
SELECT (vblex pret) IF
	(NOT 0 %la% OR farlige-vblex)
	(-1C clb-cnj)
	(*1 setn-gr BARRIER pres/pret);


#
;


# 2249
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex)
	(-1 subst-prop)
	(NOT -1 subst-gen)
	(-2C setn-gr);


# 2250
SELECT (vblex pret) IF
	(0 m-hj-vblex-pret)
	(*1C perf-part BARRIER setn-gr)
	(*1 setn-gr BARRIER m-hj-vblex-fv);


# 2251
SELECT (vblex pret) IF
	(0 m-hj-vblex)
	(NOT -1 infmerke OR m-hj-vblex)
	(*1 setn-gr LINK *-1C inf LINK NOT *-1 infmerke)
	(*-1 setn-gr BARRIER pres/pret)
	(*1 setn-gr BARRIER m-hj-vblex-fv);


# 2252
SELECT (vblex pret) IF
	(NOT 0 adv OR pres)
	(1C adv)
	(NOT 2 pres/pret)
	(*-2C setn-gr LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT *1 alt);


# 2253
SELECT (vblex pret) IF
	(NOT 0 pres OR setn-gr)
	(-1C setningsadv)
	(NOT -1 %nok% OR %saa%)
	(*-2 ikke-adv LINK 0 nom LINK NOT 0 fv LINK *-1 ikke-adv-adj-det LINK NOT 0 fv);


# 2254
SELECT (vblex pret) IF
	(NOT 0 %for%-vblex OR pres)
	(NOT 0 imp OR setn-gr)
	(-1 %ikke%)
	(NOT 1 %men%)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT *-2 ikke-adv BARRIER setn-gr);


# 2255
SELECT (vblex pret) IF
	(NOT 0 pres OR setn-gr)
	(-1C setningsadv)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 %saa% OR %ikke/ogsaa%)
	(NOT *-2 ikke-adv BARRIER setn-gr);


# 2256
SELECT (vblex pret) IF
	(NOT 0 imp OR pr)
	(NOT *1 fv OR overskrift)
	(NOT *-1 fv BARRIER setn-gr)
	(*-1 >>> LINK NOT 0 kolon)
	(*-1 <<< LINK NOT 0 kolon);


# 2203
SELECT (vblex pass) IF
	(NOT 0 s-vblex)
	(NOT *1 overskrift BARRIER setn-gr)
	(*-1C setn-gr BARRIER fv)
	(*1C setn-gr BARRIER fv);


#
;


# 2200
SELECT (vblex) IF
	(0 pres OR pret)
	(NOT 0 pr)
	(NOT *1 fv OR overskrift)
	(NOT *-1 fv BARRIER setn-gr)
	(*-1 >>> LINK NOT 0 kolon)
	(*-1 <<< LINK NOT 0 kolon);


# 2201
SELECT (vblex) IF
	(NOT 0 be-subst OR adj/adv-iv)
	(-1 hj-vblex)
	(NOT 1 komma/cnj)
	(*1 be-subst BARRIER ikke-adv-adj-det);


# 2202
SELECT (vblex) IF
	(NOT 0 fv OR adj/adv-iv)
	(-1 hj-vblex-iv)
	(NOT 1 komma/cnj OR poss-det)
	(*1 be-subst BARRIER ikke-adv-adj-det);


#
;


# 2199
REMOVE (<perf-part> def sg) IF
	(0 pos-be-ent);


# 2197
REMOVE (<perf-part> pl) IF
	(0 pos-ub-fl);


# 2198
REMOVE (<perf-part> pl) IF
	(0 pos-be-fl);


# 2196
REMOVE (<perf-part> ntindsg) IF
	(0 pos-ub-ent-nt);


# 2195
REMOVE (<perf-part> mfindsg) IF
	(0 pos-ub-ent-mf);


# 2193
REMOVE (<perf-part>) IF
	(0 samset OR subst);


# 2194
REMOVE (<perf-part>) IF
	(0 <adv>);


# 2189
REMOVE (<pres-part>) IF
	(0 pos-ub-fl);


# 2190
REMOVE (<pres-part>) IF
	(0 pos-be-fl);


# 2191
REMOVE (<pres-part>) IF
	(0 pos-ub-ent);


# 2192
REMOVE (<pres-part>) IF
	(0 pos-be-ent);


# 2188
REMOVE (adj sg) IF
	(1 pl-subst)
	(NOT 1 sg-subst OR adj)
	(NOT 1 adv OR pres/pret);


#
;


# 2186
REMOVE (adjindsg) IF
	(-1 %mest/minst%)
	(-2 %aller%)
	(-3 dem);


# 2187
REMOVE (adjindsg) IF
	(-1 %mest/minst%)
	(-2 dem);


# 2185
REMOVE (adj ind) IF
	(0 orden)
	(NOT 0 %andre%)
	(NOT -1 ub-det)
	(*1 pl-subst LINK 0 sg LINK NOT *-1 ikke-adv-adj);


# 2172
REMOVE (adj def sg) IF
	(1 komma/cnj)
	(-1 pl-det)
	(NOT -1 det-ent)
	(NOT 2 adj-ent);


# 2173
REMOVE (adj def sg) IF
	(-1 pl-det)
	(NOT 1 adj-ent OR sg-subst)
	(NOT -1 det-ent);


# 2174
REMOVE (adj def sg) IF
	(0 adj-fl)
	(NOT 0 %siste%/ordenstall)
	(NOT -1 adj-sup-be)
	(*1 pl-subst LINK NOT 0 be-ent-subst LINK NOT *-1 ikke-adv-adj)
	(*-1C ikke-adv-adj-det LINK NOT 0 subst-gen LINK NOT *1 dem/poss/gen);


# 2175
REMOVE (adj def sg) IF
	(0 adj-fl)
	(NOT 0 %siste%/ordenstall)
	(NOT -1 adj-sup-be)
	(*1 pl-subst LINK NOT 0 be-ent-subst LINK NOT *-1 ikke-adv-adj)
	(*-1 setn-gr BARRIER dem/poss/gen);


# 2176
REMOVE (adj def sg) IF
	(0 adj-ub-ent)
	(NOT 0 %siste%/ordenstall)
	(*-1C ikke-adv-adj-det LINK NOT 0 subst-gen LINK NOT *1 dem/poss/gen);


# 2177
REMOVE (adj def sg) IF
	(0 adj-ub-ent)
	(NOT 0 %siste%/ordenstall)
	(*-1 setn-gr BARRIER dem/poss/gen);


# 2178
REMOVE (adj def sg) IF
	(NOT 0 %siste% OR ikke-adj)
	(*-1 ub-det BARRIER ikke-adv-adj);


# 2179
REMOVE (adj def sg) IF
	(0 ub-ent)
	(NOT 0 orden OR ikke-adj)
	(1 subst/adj OR ub-ent)
	(-1 pr)
	(NOT 1 def);


# 2180
REMOVE (adj def sg) IF
	(NOT 0 orden OR ikke-adj)
	(1 subst/adj)
	(1C pl)
	(NOT 1 subst-uboey OR def)
	(NOT -1 subst-prop OR pr)
	(*-1 det-gen LINK *1 ikke-adv-adj);


# 2181
REMOVE (adj def sg) IF
	(0 pl)
	(NOT 0 orden OR ikke-adj)
	(1 subst/adj)
	(1C pl)
	(NOT 1 subst-uboey OR def)
	(NOT -1 subst-prop OR pr)
	(*-1 det-gen LINK *1 ikke-adv-adj);


# 2182
REMOVE (adj def sg) IF
	(NOT 0 orden OR ikke-adj)
	(1 subst/adj)
	(NOT 1 subst-uboey OR def)
	(NOT -1 subst-prop OR pr)
	(*-1C setn-gr BARRIER det-gen);


# 2183
REMOVE (adj def sg) IF
	(0 pl)
	(NOT 0 orden OR ikke-adj)
	(1 subst/adj)
	(1C pl)
	(NOT 1 subst-uboey OR def)
	(NOT -1 subst-prop OR pr)
	(*-1C setn-gr BARRIER det-gen);


# 2184
REMOVE (adj def sg) IF
	(NOT 0 ikke-adj OR %tiltalte%)
	(NOT 1 subst/adj OR komma/cnj)
	(NOT -1 %aar% OR subst-prop)
	(NOT -1 pr OR komma/cnj)
	(*-1C setn-gr BARRIER det-gen);


# 2167
REMOVE (adj def) IF
	(NOT 0 inf)
	(1 iv)
	(-1C vblex)
	(NOT 1 farlige-part OR farlige-inf);


#
;


# 2168
REMOVE (adj def) IF
	(0 %mye/lite%)
	(NOT 1 ub-fl-subst)


;


# 2169
REMOVE (adj def) IF
	(0 %mye/lite%)
	(NOT 1 ub-ent-m-subst OR ub-ent-f-subst);


# 2170
REMOVE (adj def) IF
	(0 %mye/lite%)
	(-1 adv)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT 1 nom)
	(*-1C setn-gr BARRIER kop);


# 2171
REMOVE (adj def) IF
	(0 %mye/lite%)
	(-1C vblex)
	(NOT 1 nom OR komma/cnj)
	(NOT -1 %ha% OR kop)
	(*-1 setn-gr BARRIER kop-fv);


# 2163
REMOVE (adj pl) IF
	(0 %mye/lite%)
	(NOT 1 ub-fl-subst);


# 2164
REMOVE (adj pl) IF
	(0 perf-part)
	(*1 subst/adj-pos LINK NOT 0 pl LINK NOT *-1 ikke-adv-adj-det)
	(*-1 ikke-adv LINK 0 %ha%-pres/pret);


# 2165
REMOVE (adj pl) IF
	(NOT 0 inf OR fv)
	(1 iv)
	(-1C vblex)
	(NOT 1 farlige-inf OR pl-subst);


# 2166
REMOVE (adj pl) IF
	(NOT 0 gen)
	(1C subst/adj)
	(NOT 1 pres-part OR gen);


# 2162
REMOVE (adj nt sg) IF
	(-1 pl-det)
	(NOT 1 komma/cnj OR setn-gr)
	(NOT 1 adj-ent OR adj-fl)
	(NOT 1 adv OR vblex)
	(NOT -1 det-ent);


# 2161
REMOVE (adj ntindsg) IF
	(0 adv)
	(NOT 0 samset);


# 2160
REMOVE (adj nt ind) IF
	(NOT 0 ikke-adj)
	(-1 pr)
	(1C ub-subst)
	(NOT 1 nt-ent);


# 2159
REMOVE (adj nt) IF
	(0 perf-part)
	(NOT 0 m OR f)
	(*1 subst/adj-pos LINK NOT 0 nt LINK NOT *-1 ikke-adv-adj-det)
	(*-1 ikke-adv LINK 0 %ha%-pres/pret);


#
;


# 2158
REMOVE (adj <perf-part> ntindsg) IF
	(1 subst/adj)
	(NOT 1 nt OR adj-komp)
	(NOT 1 adj-sup OR adj-be)
	(NOT 1 adj-fl OR subst-prop)
	(NOT 1 subst-uboey OR advblex);


#
;


# 2156
REMOVE (adj <perf-part> mfindsg) IF
	(1 subst/adj)
	(NOT 1 mf OR adj-komp)
	(NOT 1 adj-sup OR subst-prop)
	(NOT 1 subst-uboey OR advblex);


# 2157
REMOVE (adj <perf-part> mfindsg) IF
	(0 pos-ub-ent-nt);


# 2155
REMOVE (adj <perf-part> mf) IF
	(-1C vblex)
	(NOT 1 subst/adj OR komma/cnj);


# 2154
REMOVE (adj <perf-part> gen) IF
	(NOT -1 be-det OR pl-det);


# 2142
REMOVE (adj <perf-part>) IF
	(0 vblex)
	(-1 prn)
	(NOT 1 subst/adj OR vblex)
	(NOT -1 akk)
	(*-1 setn-gr BARRIER fv);


# 2143
REMOVE (adj <perf-part>) IF
	(1 prn)
	(NOT -1 det OR adj);


# 2144
REMOVE (adj <perf-part>) IF
	(1 det)
	(NOT -1 det OR adj);


# 2145
REMOVE (adj <perf-part>) IF
	(0 perf-part)
	(-1C subst)
	(NOT 1 subst/adj)
	(NOT -2 pr);


# 2146
REMOVE (adj <perf-part>) IF
	(1 adj)
	(-1 pr)
	(NOT 2 subst);


# 2147
REMOVE (adj <perf-part>) IF
	(1 komma/cnj)
	(-1 pr)
	(NOT 2 adj);


# 2148
REMOVE (adj <perf-part>) IF
	(1 komma/cnj)
	(-1 pr)
	(NOT 3 subst/adj OR komma/cnj);


# 2149
REMOVE (adj <perf-part>) IF
	(0 pl-subst)
	(-1 adj-fl);


# 2150
REMOVE (adj <perf-part>) IF
	(0 ub-ent-mf-subst)
	(-1 ub-ent-mf-adj);


# 2151
REMOVE (adj <perf-part>) IF
	(NOT 0 %tiltalte%)
	(-1 pr)
	(NOT 1 subst/adj OR komma/cnj);


# 2152
REMOVE (adj <perf-part>) IF
	(NOT 0 %tiltalte%)
	(-1 periode-beg/sbu)
	(NOT 1 subst/adj OR komma/cnj);


# 2153
REMOVE (adj <perf-part>) IF
	(NOT 0 %tiltalte%)
	(-1C vblex)
	(NOT 1 komma/cnj OR pr);


# 2132
REMOVE (adj mf sg) IF
	(1 komma/cnj)
	(-1 pl-det)
	(NOT -1 det-ent)
	(NOT 2 adj-ent);


# 2133
REMOVE (adj mf sg) IF
	(-1 pl-det)
	(NOT 1 adj-ent OR sg-subst)
	(NOT -1 det-ent);


# 2134
REMOVE (adj mf sg) IF
	(NOT 0 bare-adj)
	(1 komma/cnj)
	(-1C pr)
	(NOT -1 %naerpaa% OR %enn%)
	(NOT 2 adj/adv)
	(*-1 vblex LINK NOT 0 kop);


# 2135
REMOVE (adj mf sg) IF
	(NOT 0 bare-adj)
	(1 komma/cnj)
	(-1C pr)
	(NOT -1 %naerpaa% OR %enn%)
	(NOT *-1 vblex BARRIER setn-gr)
	(NOT 2 adj/adv);


# 2136
REMOVE (adj mf sg) IF
	(NOT 0 bare-adj)
	(-1C pr)
	(NOT 1 adj-f OR komma/cnj)
	(NOT -1 %naerpaa% OR %enn%)
	(*-1 vblex LINK NOT 0 kop);


# 2137
REMOVE (adj mf sg) IF
	(NOT 0 bare-adj)
	(-1C pr)
	(NOT 1 adj-f OR komma/cnj)
	(NOT -1 %naerpaa% OR %enn%)
	(NOT *-1 vblex BARRIER setn-gr);


# 2138
REMOVE (adj mf sg) IF
	(NOT 0 bare-adj)
	(-1C pr)
	(NOT 1 adj-m OR komma/cnj)
	(NOT -1 %naerpaa% OR %enn%)
	(*-1 vblex LINK NOT 0 kop);


# 2139
REMOVE (adj mf sg) IF
	(NOT 0 bare-adj)
	(-1C pr)
	(NOT 1 adj-m OR komma/cnj)
	(NOT -1 %naerpaa% OR %enn%)
	(NOT *-1 vblex BARRIER setn-gr);


# 2140
REMOVE (adj mf sg) IF
	(0 iv)
	(NOT 0 m)
	(-1 pres/pret)
	(NOT 1 subst-f OR komma/cnj)
	(NOT -1 kop)
	(*-2 ikke-adv LINK 0 %som%-sbu);


# 2141
REMOVE (adj mf sg) IF
	(0 iv)
	(-1 pres/pret)
	(NOT 1 subst-mf OR komma/cnj)
	(NOT -1 kop)
	(*-2 ikke-adv LINK 0 %som%-sbu);


# 2131
REMOVE (adj mfindsg) IF
	(NOT 0 imp)
	(1 subst/adj)
	(NOT 1 ikke-adj-subst OR adj-komp)
	(NOT 1 adj-sup OR ub-ent-m-adj)
	(NOT 1 subst-prop OR subst-uboey)
	(NOT -1 advblex OR %hvor/hva%);


# 2124
REMOVE (adj mf ind) IF
	(NOT 0 ikke-adj)
	(1C ub-subst)
	(NOT 1 m-ent OR f-ent);


# 2125
REMOVE (adj mf ind) IF
	(NOT 0 ikke-adj OR m)
	(1C ub-subst)
	(NOT 1 f-ent);


# 2126
REMOVE (adj mf ind) IF
	(NOT 0 ikke-adj OR f)
	(1C ub-subst)
	(NOT 1 m-ent);


# 2127
REMOVE (adj mf ind) IF
	(0 ub-ent-nt-adj)
	(NOT 0 m)
	(1C fv)
	(NOT *-1 ub-f-det BARRIER setn-gr);


# 2128
REMOVE (adj mf ind) IF
	(0 ub-ent-nt-adj)
	(NOT 0 f)
	(1C fv)
	(NOT *-1 ub-m-det BARRIER setn-gr);


# 2129
REMOVE (adj mf ind) IF
	(1 %sett%)
	(*-1 ikke-adv LINK NOT 0 det-m-ent);


# 2130
REMOVE (adj mf ind) IF
	(1 %sett%)
	(NOT *-1 ikke-adv BARRIER setn-gr);


#
;


# 2120
REMOVE (adj mf) IF
	(0 %mye/lite%)
	(NOT 1 ub-ent-m-subst OR ub-ent-f-subst);


# 2121
REMOVE (adj mf) IF
	(0 perf-part)
	(NOT 0 nt)
	(*1 subst/adj-pos LINK NOT 0 m LINK NOT 0 f LINK NOT *-1 ikke-adv-adj-det)
	(*-1 ikke-adv LINK 0 %ha%-pres/pret);


# 2122
REMOVE (adj mf) IF
	(0 perf-part)
	(NOT 0 m OR nt)
	(*1 subst/adj-pos LINK NOT 0 f LINK NOT *-1 ikke-adv-adj-det)
	(*-1 ikke-adv LINK 0 %ha%-pres/pret);


# 2123
REMOVE (adj mf) IF
	(0 perf-part)
	(NOT 0 f OR nt)
	(*1 subst/adj-pos LINK NOT 0 m LINK NOT *-1 ikke-adv-adj-det)
	(*-1 ikke-adv LINK 0 %ha%-pres/pret);


#
;


# 2119
REMOVE (adj <pres-part>) IF
	(0 adv)
	(NOT 1 subst);


# 2105
REMOVE (adj) IF
	(0 be-subst)
	(1 poss-det)
	(NOT 2 subst/adj);


# 2106
REMOVE (adj) IF
	(0 be-subst)
	(1 pr)
	(-1C vblex)
	(NOT -1 kop);


# 2107
REMOVE (adj) IF
	(0 subst OR mest-sanns-subst-istf-adj)
	(NOT 1 subst)
	(NOT -1 ub-det);


# 2108
REMOVE (adj) IF
	(0 ub-fl-subst)
	(NOT 0 farlige-adj-subst OR ikke-adj-subst)
	(-1 adj-fl)
	(NOT -1 ikke-adj)
	(NOT -2 vblex);


# 2109
REMOVE (adj) IF
	(0 ub-ent-nt-subst)
	(NOT 0 farlige-adj-subst OR ikke-adj-subst)
	(-1 ub-ent-nt-adj)
	(NOT -1 ikke-adj)
	(NOT -2 vblex);


# 2110
REMOVE (adj) IF
	(0 ub-ent-f-subst)
	(NOT 0 farlige-adj-subst OR ikke-adj-subst)
	(-1 ub-ent-f-adj)
	(NOT -1 ikke-adj)
	(NOT -2 vblex);


# 2111
REMOVE (adj) IF
	(0 subst)
	(NOT 0 advblex)
	(1 pr)
	(-1C vblex)
	(NOT -1 kop);


# 2112
REMOVE (adj) IF
	(0 subst)
	(NOT 0 <adv> OR farlige-adj-subst)
	(NOT 1 subst OR komma/cnj)
	(NOT -1 komma/cnj)
	(*-1 det LINK NOT 0 ikke-det LINK NOT *1 ikke-adv-adj);


# 2113
REMOVE (adj) IF
	(0 pres/pret)
	(NOT 0 nt OR sup)
	(-1C subst)
	(NOT 1 adj-adv-subst-cnj)
	(NOT *1 overskrift BARRIER setn-gr)
	(*-1 setn-gr LINK NOT *1C pres/pret)
	(*1 setn-gr LINK NOT *-1C pres/pret);


# 2114
REMOVE (adj) IF
	(0 iv)
	(-1 m-hj-vblex-fv)
	(*-2 ikke-adv LINK 0 %som%-sbu);


# 2115
REMOVE (adj) IF
	(0 subst)
	(NOT 0 <adv> OR farlige-adj-subst)
	(NOT 1 subst OR komma/cnj)
	(NOT -1 komma/cnj)
	(*-1 nr2-det LINK -1 det LINK NOT *1 ikke-adv-adj-det);


# 2116
REMOVE (adj) IF
	(0 ub-ent-m-subst)
	(NOT 0 farlige-adj-subst OR ikke-adj-subst)
	(-1 ub-ent-m-adj)
	(NOT -1 ikke-adj)
	(NOT -2 vblex OR det);


# 2117
REMOVE (adj) IF
	(0 %huset%)
	(NOT 1 subst);


# 2118
REMOVE (adj) IF
	(0 <perf-part> OR pres/pret)
	(1 subst-prop)
	(NOT -1 det);


# 2097
REMOVE (adv) IF
	(0 %stein%-adv)
	(NOT 1 adj);


# 2098
REMOVE (adv) IF
	(NOT 0 %bare% OR %siden%)
	(-1 iv)
	(*-2 ikke-adv LINK 0 pres/pret)
	(*1 ikke-adv BARRIER setn-gr);


# 2099
REMOVE (adv) IF
	(-1C ub-det)
	(NOT 1 adj OR adv);


# 2100
REMOVE (adv) IF
	(0 %og%)
	(NOT 1C clb);


# 2101
REMOVE (adv) IF
	(0 pl-subst)
	(NOT 0 %naa%)
	(-1 pl)
	(1C periode-slutt/cnj-clb)
	(-1C det/adj);


# 2102
REMOVE (adv) IF
	(0 subst-nt)
	(NOT 0 %naa%)
	(-1 nt)
	(1C periode-slutt/cnj-clb)
	(-1C det/adj);


# 2103
REMOVE (adv) IF
	(0 subst-f)
	(-1 f)
	(1C periode-slutt/cnj-clb)
	(-1C det/adj);


# 2104
REMOVE (adv) IF
	(0 subst-m)
	(-1 m)
	(1C periode-slutt/cnj-clb)
	(-1C det/adj);


# 2089
REMOVE (clb cnj) IF
	(NOT -1 komma)
	(*1C subst/prn BARRIER ikke-adv-adj-det)
	(*-1 setn-gr LINK 0 %som% LINK -1 subst/prn LINK NOT -1 vblex);


# 2090
REMOVE (clb cnj) IF
	(*-1 adv-cnj BARRIER cnj)
	(*-1 adv-cnj BARRIER pres/pret);


# 2091
REMOVE (clb cnj) IF
	(*1 fv LINK *-1 ikke-adv LINK 0 %som%-sbu LINK *1 fv LINK *1 fv LINK *-1 ikke-adv LINK 0 %som%-sbu LINK *1 fv LINK *1 fv LINK *-1 ikke-adv LINK 0 %som%-sbu LINK *1 fv LINK NOT *1 fv);


# 2092
REMOVE (clb cnj) IF
	(*1 fv LINK *-1 ikke-adv LINK 0 %som%-sbu LINK *1 fv LINK *1 fv LINK *-1 ikke-adv LINK 0 %som%-sbu LINK *1 fv LINK NOT *1 fv);


# 2093
REMOVE (clb cnj) IF
	(*1 fv LINK *-1 ikke-adv LINK 0 %som%-sbu LINK *1 fv LINK NOT *1 fv);


# 2094
REMOVE (clb cnj) IF
	(1 %som%-sbu)
	(*2 ikke-adv LINK 0 pres/pret LINK NOT 0 ikke-pres-pret);


# 2095
REMOVE (clb cnj) IF
	(1C pr)
	(*2C pres/pret LINK 1 advblex/komp/ub-sup/pres-part LINK *1 ikke-adv-komp-ub-sup LINK NOT 0 nom);


# 2096
REMOVE (clb cnj) IF
	(1 %annen/samme%/qnt)
	(-1 ub-det);


# 2037
REMOVE (clb) IF
	(0 komma)
	(1 perf-part)
	(NOT 1 farlige-part)
	(*-1C perf-part BARRIER setn-gr)
	(*1 clb/cnj-cnj BARRIER setn-gr);


# 2038
REMOVE (clb) IF
	(0 komma)
	(1 inf)
	(NOT 1 pres/pret OR farlige-inf)
	(*-1C inf BARRIER setn-gr)
	(*1 clb/cnj-cnj BARRIER setn-gr);


# 2039
REMOVE (clb) IF
	(0 cnj)
	(1 qnt)
	(-1 qnt);


# 2040
REMOVE (clb) IF
	(0 komma)
	(1 subst OR pres/pret)
	(-1 subst)
	(NOT 2 nom)
	(*1C setn-gr LINK *-1 clb/cnj-cnj LINK 1 subst)
	(*1 clb/cnj-cnj BARRIER setn-gr)
	(*1C setn-gr LINK *-1 clb/cnj-cnj LINK NOT 1 pres/pret);


# 2041
REMOVE (clb) IF
	(0 komma)
	(1 subst)
	(-1 subst)
	(*1 clb/cnj-cnj BARRIER setn-gr)
	(*1 clb/cnj-cnj BARRIER pres/pret)
	(*1C setn-gr LINK *-1 clb/cnj-cnj LINK NOT 1 pres/pret);


# 2042
REMOVE (clb) IF
	(0 komma)
	(1 adj-mf)
	(-1 adj-mf)
	(NOT -1 pres/pret)
	(2 subst-mf)
	(NOT 2 subst-prop OR farlige-m-subst);


# 2043
REMOVE (clb) IF
	(0 komma)
	(1 adj-fl)
	(-1 adj-fl)
	(2 pl-subst);


# 2044
REMOVE (clb) IF
	(0 komma)
	(1 adj)
	(-1 adj)
	(NOT 1 pres/pret)
	(NOT 2 pres/pret);


# 2045
REMOVE (clb) IF
	(0 komma)
	(1C sbu);


# 2046
REMOVE (clb) IF
	(0 komma)
	(1 clb)
	(1C cnj);


# 2047
REMOVE (clb) IF
	(0 komma)
	(1C clb);


# 2048
REMOVE (clb) IF
	(0 komma)
	(*-1C setn-gr LINK NOT 0 strek LINK NOT 1 anf)
	(*-1C setn-gr LINK NOT 0 %som%)
	(*-1C setn-gr BARRIER fv);


# 2049
REMOVE (clb) IF
	(0 komma)
	(1C cnj-<adv>);


# 2050
REMOVE (clb) IF
	(0 komma)
	(NOT -1 parentes)
	(*-2 parentes LINK 0 parentes-beg LINK NOT *1 fv);


# 2051
REMOVE (clb) IF
	(0 komma)
	(*1 parentes LINK 0 parentes-slutt LINK NOT *-1 fv)


;


# 2052
REMOVE (clb) IF
	(0 komma)
	(*1C setn-gr BARRIER fv);


# 2053
REMOVE (clb) IF
	(0 cnj)
	(1C pr)
	(2 nom)
	(*-1C pr BARRIER ikke-subst-adj-det-prn)
	(*-1C pr LINK -1 setn-gr);


# 2054
REMOVE (clb) IF
	(0 %og%)
	(1 inf)
	(-1 pres-part);


# 2055
REMOVE (clb) IF
	(0 cnj)
	(1 perf-part)
	(-1C perf-part)
	(NOT 1 farlige-part);


# 2056
REMOVE (clb) IF
	(0 cnj)
	(1 perf-part)
	(NOT 1 pret OR farlige-part)
	(*-1C perf-part BARRIER setn-gr);


# 2057
REMOVE (clb) IF
	(0 cnj)
	(1 %til%)
	(2 infmerke)
	(*-1 setn-gr LINK *1 %til% LINK 1 infmerke);


# 2058
REMOVE (clb) IF
	(0 cnj)
	(1 inf)
	(NOT 1 farlige-inf OR pret)
	(*-1C inf BARRIER setn-gr);


# 2059
REMOVE (clb) IF
	(0 cnj)
	(1 adj)
	(-1 subst)
	(2 subst)
	(-2 komma)
	(-3 subst);


# 2060
REMOVE (clb) IF
	(0 cnj)
	(1 subst)
	(-1 subst)
	(-2 komma)
	(-3 subst);


# 2061
REMOVE (clb) IF
	(0 cnj)
	(1 anf)
	(-1 anf);


# 2062
REMOVE (clb) IF
	(0 cnj)
	(1 adj-fl)
	(-1 ub-fl-subst)
	(2 ub-fl-subst);


# 2063
REMOVE (clb) IF
	(0 cnj)
	(1 ub-fl-subst)
	(-1 ub-fl-subst)
	(NOT 1 farlige-fl-subst)
	(*2 pres/pret LINK NOT 0 farlige-vblex);


# 2064
REMOVE (clb) IF
	(0 cnj)
	(1 adj OR pret)
	(-1 subst)
	(2 subst)
	(NOT 2 farlige-nt-subst OR farlige-m-subst)
	(*-1C setn-gr LINK *1C fv LINK NOT 0 pret LINK NOT 0 farlige-vblex);


# 2065
REMOVE (clb) IF
	(0 cnj)
	(1 subst OR pret)
	(-1 subst)
	(*-1C setn-gr LINK *1 fv LINK NOT 0 pret LINK NOT 0 farlige-vblex);


# 2066
REMOVE (clb) IF
	(0 cnj)
	(1 subst OR pres)
	(-1 subst)
	(*-1C setn-gr LINK *1 fv LINK NOT 0 pres LINK NOT 0 farlige-vblex);


# 2067
REMOVE (clb) IF
	(0 cnj)
	(1C subst)
	(-1C subst)
	(NOT 1 pres/pret)
	(*-1 sbu BARRIER setn-gr)
	(*-1 sbu LINK *1 fv LINK NOT *1 fv);


# 2068
REMOVE (clb) IF
	(0 cnj)
	(1 subst)
	(-1 subst)
	(NOT 1 farlige-nt-subst OR farlige-m-subst)
	(NOT 1 %jeg% OR %saa%)
	(*-1 setn-gr LINK NOT 0 %bare% LINK NOT *1 fv);


# 2069
REMOVE (clb) IF
	(0 cnj)
	(1 adj)
	(-1 subst)
	(NOT 1 pres/pret)
	(NOT -1 pres/pret)
	(2 subst)
	(NOT 2 farlige-nt-subst OR farlige-m-subst);


# 2070
REMOVE (clb) IF
	(0 cnj)
	(1 adj)
	(-1C adj)
	(2 subst)
	(-2 pr);


# 2071
REMOVE (clb) IF
	(0 cnj)
	(1 adj)
	(-1 adj)
	(2 subst)
	(-2 det)
	(NOT 2 farlige-nt-subst OR farlige-m-subst);


# 2072
REMOVE (clb) IF
	(0 cnj)
	(1 ub-ent-m-adj)
	(-1 ub-ent-m-adj)
	(NOT 1 farlige-adj)
	(NOT -1 pret)
	(NOT -2 pret);


# 2073
REMOVE (clb) IF
	(0 cnj)
	(-1 adj)
	(1C adj);


# 2074
REMOVE (clb) IF
	(0 cnj)
	(NOT -2 replikk)
	(*-2C setn-gr BARRIER fv)
	(*1C setn-gr LINK *-1 fv LINK NOT *-1 fv);


# 2075
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(NOT -1 replikk OR clb)
	(NOT -2 strek)
	(*-1C setn-gr LINK NOT 0 %som%)
	(*-1C setn-gr BARRIER fv);


# 2076
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(NOT -1 replikk OR clb)
	(*-1C setn-gr LINK NOT 0 %som%)
	(*-1C setn-gr BARRIER fv);


# 2077
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(-1C subst/prn)
	(*1C subst/prn BARRIER ikke-adv-adj-det)
	(*1C subst/prn LINK NOT 0 subst-gen LINK NOT 0 subst-prop LINK *1C subst/prn LINK NOT *-1 ikke-adv-adj-subst-prn-cnj-det2);


# 2078
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(1C nom)
	(-1C subst/prn)
	(NOT 1 prn)
	(-2C subst/prn)
	(NOT -2 subst-gen OR prn-akk);


# 2079
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(-1C subst/prn)
	(*-2C subst/prn LINK NOT 0 subst-gen LINK NOT 0 subst-prop LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det2)
	(*1C subst BARRIER ikke-adv-adj-det);


# 2080
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(*1 %som% LINK NOT 0 pr LINK NOT *-1 fv)
	(*1 %som% LINK *1C fv LINK NOT *1 fv);


# 2081
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(NOT -1 parentes)
	(*-2 parentes LINK 0 parentes-beg LINK NOT *1 fv);


# 2082
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(*1 parentes LINK 0 parentes-slutt LINK NOT *-1 fv);


# 2083
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(*1C setn-gr LINK NOT 0 %som% LINK NOT *-1 fv);


#
;


# 2084
REMOVE (clb) IF
	(0 clb/cnj-cnj)
	(1 sbu)
	(-1 >>>)
	(NOT 1 pr OR adv);


# 2085
REMOVE (clb) IF
	(1 spoerreadv)
	(2 pres/pret);


# 2086
REMOVE (clb) IF
	(NOT 1 sbu)
	(*1C periode-slutt/cnj-clb LINK *-1 fv LINK *-1C setn-gr LINK *-1 fv LINK *-1C setn-gr LINK *-1 fv LINK *-1C setn-gr LINK NOT *-1 fv)
	(*1C periode-slutt/cnj-clb LINK *-1 setn-gr LINK *-1 setn-gr LINK *-1 setn-gr LINK NOT *-1 fv);


# 2087
REMOVE (clb) IF
	(NOT 1 sbu)
	(*1C periode-slutt/cnj-clb LINK *-1 fv LINK *-1C setn-gr LINK *-1 fv LINK *-1C setn-gr LINK NOT *-1 fv)
	(*1C periode-slutt/cnj-clb LINK *-1 setn-gr LINK *-1 setn-gr LINK NOT *-1 fv);


# 2088
REMOVE (clb) IF
	(NOT 1 sbu)
	(*1C periode-slutt/cnj-clb LINK *-1 fv LINK *-1C setn-gr LINK NOT *-1 fv)
	(*1C periode-slutt/cnj-clb LINK *-1 setn-gr LINK NOT *-1 fv);


# 2036
REMOVE (det def sg) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(NOT -1 det)
	(*1C ub-subst LINK 0 pl LINK NOT *-1 ikke-adv-adj);


# 2031
REMOVE (det pl) IF
	(0 %de%)
	(1 advblex)
	(NOT 1 pl)
	(NOT 2 adj-sup OR pl)
	(NOT 2 pres-part OR %av%);


# 2032
REMOVE (det pl) IF
	(0 %de%)
	(NOT 1 advblex OR pl)
	(NOT 1 adj-komp OR adj-sup)
	(NOT 1 pres-part OR %samme/neste/ene/eneste/forrige%);


# 2033
REMOVE (det pl) IF
	(0 %de%)
	(-1 fv)
	(*-1 setn-gr LINK 1 adv)
	(*1 ub-fl-subst LINK *-1 ikke-adv-adj);


# 2034
REMOVE (det pl) IF
	(0 %de%)
	(NOT 1 pl-det OR adj-fl)
	(*1C subst LINK NOT 0 pl-subst LINK NOT *-1 ikke-adv-adj);


# 2035
REMOVE (det pl) IF
	(0 %de%)
	(-1 fv)
	(NOT 1 det)
	(*-1 setn-gr LINK 1 pr)
	(*1 ub-fl-subst LINK *-1 ikke-adv-adj);


# 2024
REMOVE (det m) IF
	(0 %en%)
	(1 perf-part/inf OR ub-ent-m-adj)
	(-1 hj-vblex)
	(NOT 1 farlige-inf OR ub-ent-m-subst)
	(2 komma/cnj)
	(NOT 3 ub-ent-m-adj);


# 2025
REMOVE (det m) IF
	(0 %en%)
	(1 perf-part/inf OR ub-ent-m-adj)
	(-1 hj-vblex)
	(NOT 1 farlige-inf OR ub-ent-m-subst)
	(NOT 2 ub-ent-m-subst OR komma/cnj);


# 2026
REMOVE (det m) IF
	(0 %en%)
	(1 perf-part/inf)
	(-1 hj-vblex)
	(NOT 1 farlige-part OR farlige-inf)
	(NOT 1 ub-ent-m-subst OR ub-ent-m-adj);


# 2027
REMOVE (det m) IF
	(0 %en%)
	(1 subst-m-fl)
	(NOT 1 ub-ent-m-subst OR ub-ent-m-adj);


# 2028
REMOVE (det m) IF
	(0 ub-det OR pl-det)
	(*1 pl-subst LINK NOT 0 ikke-subst LINK NOT 0 ub-ent-m-subst LINK NOT *-1 ikke-adv-adj);


# 2029
REMOVE (det m) IF
	(0 %en%)
	(-1 pres/pret)
	(NOT 1 pr OR %som%)
	(NOT 1 %tvers% OR pl-det)
	(NOT 1 komma/cnj OR %siste%/ordenstall)
	(*1C ikke-adv-adj-det LINK NOT 0 ub-ent-m-subst LINK NOT 0 gen LINK NOT 0 subst-prop LINK NOT *-1 ub-ent-m-subst)
	(*1C setn-gr BARRIER tall-fl);


# 2030
REMOVE (det m) IF
	(0 %en%)
	(NOT 0 gen)
	(NOT 1 pl-det OR komma/cnj)
	(*1C subst LINK NOT 0 m-ent-ub LINK NOT *-1 ikke-adv-adj);


#
;


# 2023
REMOVE (det nt) IF
	(0 %det%)
	(NOT 1 pl-det OR be-ent-nt-adj)
	(*1C subst LINK NOT 0 nt-ent LINK NOT *-1 ikke-adv-adj);


# 2019
REMOVE (det f) IF
	(0 %den%)
	(NOT 1 pl-det OR be-ent-m-adj)
	(*1C subst LINK NOT 0 m-ent LINK NOT *-1 ikke-adv-adj);


# 2020
REMOVE (det f) IF
	(0 ub-det OR pl-det)
	(*1 pl-subst LINK NOT 0 ikke-subst LINK NOT 0 ub-ent-f-subst LINK NOT *-1 ikke-adv-adj);


# 2021
REMOVE (det f) IF
	(0 nr2-det)
	(NOT 0 %andre%)
	(NOT -1 det)
	(*1C ub-subst LINK NOT 0 ub-ent-f-subst LINK NOT *-1 ikke-adv-adj);


#
;


# 2022
REMOVE (det f) IF
	(1 %slags%)
	(NOT 1 f);


# 2017
REMOVE (det qnt pl) IF
	(0 ub-det)
	(NOT 1 komma)
	(*1 be-fl-subst BARRIER ikke-adv-adj-det);


# 2018
REMOVE (det qnt pl) IF
	(0 det-ent)
	(NOT 1 komma)
	(*1 ub-ent-subst LINK NOT 0 farlige-m-subst LINK NOT 0 farlige-nt-subst LINK NOT 0 pl LINK NOT 0 infmerke LINK NOT 0 fv LINK NOT *-1 ikke-adv-adj-det);


# 2016
REMOVE (det qnt m) IF
	(0 f-det)
	(NOT 1 komma)
	(*1 ub-ent-f-subst LINK NOT 0 m LINK NOT 0 fv LINK NOT *-1 ikke-adv-adj-det);


# 2015
REMOVE (det qnt f) IF
	(0 m-det)
	(NOT 1 komma OR det)
	(*1 ub-ent-m-subst LINK NOT 0 farlige-m-subst LINK NOT 0 f LINK NOT 0 fv LINK NOT *-1 ikke-adv-adj);


# 2014
REMOVE (det poss pl) IF
	(0 poss-det)
	(NOT 1 komma)
	(NOT -1 pl-subst)
	(*1 ub-ent-subst LINK NOT 0 pl LINK NOT *-1 ikke-adv-adj-det);


# 2013
REMOVE (det poss m) IF
	(0 poss-det)
	(NOT 1 komma OR subst-prop)
	(NOT -1 be-ent-m-subst OR ub-slektsterm)
	(*1 ub-ent-subst LINK NOT 0 m);


# 2012
REMOVE (det poss nt) IF
	(0 poss-det)
	(NOT 1 komma)
	(NOT -1 be-ent-nt-subst)
	(*1 ub-subst LINK NOT 0 ub-ent-nt-subst LINK NOT *-1 ikke-adv-adj-det);


# 2011
REMOVE (det poss f) IF
	(0 poss-det)
	(NOT 1 komma OR f-det)
	(NOT -1 be-ent-f-subst OR ub-slektsterm)
	(*1 ub-ent-subst LINK NOT 0 f);


#
;


# 1999
REMOVE (det) IF
	(0 %det/dette%)
	(1 be-ent-nt-adj)
	(NOT 1 adj-sup-be)
	(*2 subst BARRIER ikke-adv-adj)
	(*2 subst LINK NOT 0 ikke-subst LINK NOT 0 nt-ent LINK NOT *-1 komma/cnj);


# 2000
REMOVE (det) IF
	(0 %det/dette%)
	(NOT 1 adj-sup-ub OR be-ent-nt-adj)
	(*1 subst LINK NOT 0 nt-ent LINK NOT *-1 ikke-adv-adj);


# 2001
REMOVE (det) IF
	(0 %det/dette%)
	(1 pret)
	(NOT 1 adj-be OR be-ent-nt-subst);


# 2002
REMOVE (det) IF
	(0 %det/dette%)
	(1 ub-ent-nt-adj)
	(NOT 1 pret OR adj-be)
	(NOT 2 adj-sup OR adj-komp);


# 2003
REMOVE (det) IF
	(0 %det/dette%)
	(1 subst-prop)
	(2 subst-prop);


# 2004
REMOVE (det) IF
	(0 %det/dette%)
	(1 subst-prop)
	(NOT 2 %som% OR nom);


# 2005
REMOVE (det) IF
	(0 %det/dette%)
	(1 pl)
	(NOT 1 sg);


# 2006
REMOVE (det) IF
	(0 %det/dette%)
	(1C adj-sup-ub)
	(NOT 2 adj-be);


# 2007
REMOVE (det) IF
	(0 %det/dette%)
	(1C adj-komp)
	(NOT 2 subst-prop OR subst-nt);


# 2008
REMOVE (det) IF
	(0 %det/dette%)
	(1 adj-ub)
	(NOT 1 adj-be OR adj-sup)
	(NOT 1 pret OR ub-ent-nt-adj);


# 2009
REMOVE (det) IF
	(0 romertall OR pr)
	(1 tall);


# 2010
REMOVE (det) IF
	(0 romertall OR pr)
	(1 nom)
	(*1 subst BARRIER ikke-adv-adj-det);


# 1997
REMOVE (fork) IF
	(0 poss-det)
	(1 nr2-det)
	(*2 ub-ent-m-subst BARRIER ikke-adv-adj-det);


# 1998
REMOVE (fork) IF
	(0 poss-det)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj);


# 1996
REMOVE (gen) IF
	(0 vblex)
	(NOT 1 adj-be OR qnt)
	(NOT 1 adj-komp OR anf)
	(NOT 1indOR subst-prop);


# 1995
REMOVE (hoeflig) IF
	(0 det OR hoeflig)
	(NOT -1 replikk);


# 1982
REMOVE (imp) IF
	(NOT 0 pret)
	(1 fv)
	(-1 setn-gr)
	(NOT 1 %naa%);


# 1983
REMOVE (imp) IF
	(-1 %som%);


# 1984
REMOVE (imp) IF
	(-1 pr OR sbu)
	(NOT -1 ikke-pr-sbu);


# 1985
REMOVE (imp) IF
	(-1C sbu)
	(NOT -1 %at%);


# 1986
REMOVE (imp) IF
	(0 hj-vblex)
	(-1 setn-gr)
	(*1 ikke-adv-adj-det LINK 0 subst/prn/%all%/%mang%/%mange% LINK *1 ikke-poss-det LINK 0 perf-part);


# 1987
REMOVE (imp) IF
	(-1 setn-gr)
	(1C nominativ);


# 1988
REMOVE (imp) IF
	(*1C setn-gr LINK *-1C fv LINK NOT 0 imp);


# 1989
REMOVE (imp) IF
	(NOT -1 parentes)
	(*-1C setn-gr LINK *1C fv LINK NOT 0 imp);


# 1990
REMOVE (imp) IF
	(NOT -1 %ikke% OR cnj)
	(-2 >>>);


# 1991
REMOVE (imp) IF
	(NOT -1 parentes OR komma)
	(NOT -2 >>>);


# 1992
REMOVE (imp) IF
	(1C fv);


# 1993
REMOVE (imp) IF
	(0 samset);


# 1994
REMOVE (imp) IF
	(*-1 setn-gr LINK *-1 setn-gr LINK *1 fv LINK NOT 0 imp LINK *1 setn-gr LINK 0 clb-cnj LINK NOT *1 setn-gr);


# 1977
REMOVE (interj) IF
	(0 %ja-nei%)
	(-1 cnj)
	(-2 %ja-nei%);


# 1978
REMOVE (interj) IF
	(0 %ja-nei%)
	(-1 adv)
	(NOT -2 s-gr);


# 1979
REMOVE (interj) IF
	(0 %ja-nei%)
	(NOT -1 interj OR adv);


# 1980
REMOVE (interj) IF
	(NOT 0 %ja-nei%)
	(NOT -1 interj OR replikk)


;


# 1981
REMOVE (interj) IF
	(0 adv)
	(1 %saa%-pret);


# 1974
REMOVE (cnj) IF
	(0 %saa/for%)
	(1 komma);


# 1975
REMOVE (cnj) IF
	(0 %saa/for%)
	(-1C sbu/cnj);


# 1976
REMOVE (cnj) IF
	(0 %saa/for%)
	(*1C setn-gr BARRIER fv);


# 1973
REMOVE (perf-part) IF
	(0 pres/pret)
	(-1 cnj)
	(NOT -1 adv)
	(*-1 p-hj-vblex LINK 0 pres/pret LINK NOT *1 perf-part);


# 1972
REMOVE (pref) IF
	(0 %da%);


# 1953
REMOVE (prn pers) IF
	(0 det)
	(-1 pr)
	(1C adj)
	(*2 ikke-adv-adj LINK 0 subst LINK NOT 0 ikke-subst LINK NOT -1 komma/cnj)
	(*3 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK NOT 0 pres/pret);


# 1954
REMOVE (prn pers) IF
	(0 det)
	(-1 pr)
	(1C adj)
	(NOT *3 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr BARRIER setn-gr)
	(*2 ikke-adv-adj LINK 0 subst LINK NOT 0 ikke-subst LINK NOT -1 komma/cnj);


# 1955
REMOVE (prn pers) IF
	(0 det)
	(-1 pr)
	(1C subst)
	(*2 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK NOT 0 pres/pret);


# 1956
REMOVE (prn pers) IF
	(0 det)
	(-1 pr)
	(1C subst)
	(NOT *2 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr BARRIER setn-gr);


# 1957
REMOVE (prn pers) IF
	(0 det)
	(-1 pr)
	(1C subst/adj)
	(NOT 1 adj-komp OR adj-sup-ub)
	(*2 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK NOT 0 pres/pret);


# 1958
REMOVE (prn pers) IF
	(0 det)
	(-1 pr)
	(1C subst/adj)
	(NOT 1 adj-komp OR adj-sup-ub)
	(NOT *2 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr BARRIER setn-gr);


# 1959
REMOVE (prn pers) IF
	(0 be-m-det)
	(1 nr2-det-m-be)
	(NOT 2 subst/adj);


# 1960
REMOVE (prn pers) IF
	(0 be-m-det)
	(1 be-ent-m-adj)
	(-1 pr)
	(NOT 1 adv)
	(NOT 2 subst/adj OR komma/cnj);


# 1961
REMOVE (prn pers) IF
	(0 be-m-det)
	(1 be-ent-m-adj)
	(NOT 1 fv OR adv)
	(NOT -1 fv)
	(2 komma/cnj)
	(NOT 3 adj);


# 1962
REMOVE (prn pers) IF
	(0 be-m-det)
	(1 be-ent-m-adj)
	(NOT 1 fv OR adv)
	(NOT -1 fv)
	(2C clb-komma/cnj);


# 1963
REMOVE (prn pers) IF
	(0 be-m-det)
	(1 be-ent-m-adj)
	(NOT 1 fv OR adv)
	(NOT -1 fv)
	(NOT 2 subst/adj OR komma/cnj);


#
;


# 1964
REMOVE (prn pers) IF
	(0 poss-det)
	(NOT 1 komma)
	(*1 ub-ent-subst BARRIER ikke-adv-adj-det);


# 1965
REMOVE (prn pers) IF
	(0 ub-nt-det)
	(*1 ub-ent-nt-subst LINK NOT 0 farlige-nt-subst LINK NOT *-1 ikke-adv-adj)
	(*1 ub-fl-subst BARRIER ikke-adv-adj);


# 1966
REMOVE (prn pers) IF
	(0 be-m-det OR be-f-det)
	(*1 ub-ent-m-subst LINK 0 subst-gen LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-f-subst LINK 0 subst-gen LINK NOT *-1 ikke-adv-adj)
	(*1 ub-ent-f-subst LINK 1 subst/adj);


# 1967
REMOVE (prn pers) IF
	(0 be-m-det OR be-f-det)
	(1 nr2-det)
	(*2 ub-ent-m-subst BARRIER ikke-adv-adj-det)
	(*2 ub-ent-f-subst BARRIER ikke-adv-adj-det)
	(*2 ub-ent-m-subst LINK NOT 1 adj-subst-cnj)
	(*2 ub-ent-subst LINK NOT 0 pres/pret LINK NOT 0 infmerke);


# 1968
REMOVE (prn pers) IF
	(0 be-m-det OR be-f-det)
	(*1 ub-ent-m-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst BARRIER ikke-adv-adj)
	(*1 ub-ent-f-subst LINK NOT 1 adj-subst-cnj)
	(*1 ub-ent-subst LINK NOT 0 pres/pret LINK NOT 0 infmerke);


# 1969
REMOVE (prn pers) IF
	(1 %samme/neste/ene/eneste/forrige%)
	(NOT 2 nom-uten-prn);


# 1970
REMOVE (prn pers) IF
	(0 %noen%)
	(NOT -1 pres/pret)
	(*1C ub-subst LINK NOT 0 subst-prop LINK NOT *-1 ikke-adv-adj)
	(*1C subst LINK NOT -1 komma/cnj);


# 1971
REMOVE (prn pers) IF
	(0 %noen%)
	(-1 pres/pret)
	(NOT -2 replikk OR setn-gr)
	(*1C ub-subst LINK NOT 0 subst-prop LINK NOT *-1 ikke-adv-adj)
	(*1C subst LINK NOT -1 komma/cnj);


#
;


# 1944
REMOVE (prn nom) IF
	(-1C pres/pret)
	(-2C prn-nom)
	(*1 pres/pret LINK *-1 ikke-adv);


# 1945
REMOVE (prn nom) IF
	(-1C pres/pret)
	(NOT *1 pres/pret BARRIER setn-gr)
	(-2C prn-nom);


# 1946
REMOVE (prn nom) IF
	(-1C imp);


# 1947
REMOVE (prn nom) IF
	(-1 iv)
	(NOT 1 %som% OR pr)
	(NOT -1 pres/pret)
	(*-2 ikke-adv LINK 0 infmerke);


# 1948
REMOVE (prn nom) IF
	(-1 iv)
	(NOT 1 vblex OR %som%)
	(NOT 1 pr OR advblex)
	(NOT -1 pres/pret);


# 1949
REMOVE (prn nom) IF
	(-1 pres/pret)
	(NOT 1 %som% OR pr)
	(*-2 ikke-adv LINK 0 %som%);


# 1950
REMOVE (prn nom) IF
	(1 komma)
	(-1 pr)
	(*2 komma LINK *1 ikke-adv LINK NOT 0 pres/pret);


# 1951
REMOVE (prn nom) IF
	(1 komma)
	(-1 pr)
	(*2 komma LINK NOT *1 ikke-adv);


# 1952
REMOVE (prn nom) IF
	(1 komma)
	(-1 pr)
	(NOT *2 komma BARRIER setn-gr);


# 1928
REMOVE (prn akk) IF
	(0 prn-nom/%seg%)
	(1 hj-vblex OR pres/pret)
	(NOT -1 pr)
	(*2 ikke-adv LINK 0 iv);


# 1929
REMOVE (prn akk) IF
	(0 prn-nom/%seg%)
	(NOT -1 pr OR vblex)
	(*2 iv LINK *-1 ikke-adv LINK 0 pres/pret LINK 0 hj-vblex LINK NOT *-1 ikke-adv);


# 1930
REMOVE (prn akk) IF
	(0 prn-nom/%seg%)
	(1 subst/adj)
	(-1 kop-fv);


# 1931
REMOVE (prn akk) IF
	(0 prn-nom/%seg%)
	(1 kop-fv)
	(-1C setn-gr/parentes-beg);


# 1932
REMOVE (prn akk) IF
	(0 prn-nom/%seg%)
	(1 %som%)
	(-1C setn-gr);


# 1933
REMOVE (prn akk) IF
	(0 nominativ)
	(1 pres/pret)
	(-1 setn-gr)
	(2 advblexialsubst);


# 1934
REMOVE (prn akk) IF
	(0 nominativ)
	(*-1 setn-gr LINK *1 ikke-adv-adj-det LINK 0 advblexialsubst LINK *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK NOT *1 alt);


# 1935
REMOVE (prn akk) IF
	(0 nominativ)
	(*-1 setn-gr LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT 0 ikke-subst-adj-det-prn LINK *1 ikke-poss-det LINK 0 pres/pret LINK NOT 0 ikke-vblex LINK *1 ikke-adv LINK 0 iv LINK NOT 0 ikke-vblex LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT 0 ikke-subst-adj-det-prn LINK NOT *1 alt);


# 1936
REMOVE (prn akk) IF
	(0 nominativ)
	(*-1 setn-gr LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT 0 ikke-subst-adj-det-prn LINK *1 ikke-adv LINK 0 pres/pret LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT 0 ikke-subst-adj-det-prn LINK NOT *1 alt);


# 1937
REMOVE (prn akk) IF
	(0 nominativ)
	(-1 sier-vblex)
	(-2 clb-komma)
	(-3 anf)
	(*1 pres/pret LINK *-1 ikke-adv);


# 1938
REMOVE (prn akk) IF
	(0 nominativ)
	(-1 sier-vblex)
	(-2 anf)
	(-3 clb-komma)
	(*1 pres/pret LINK *-1 ikke-adv);


# 1939
REMOVE (prn akk) IF
	(0 nominativ)
	(-1 sier-vblex)
	(-2 clb-komma)
	(*1 pres/pret LINK *-1 ikke-adv);


# 1940
REMOVE (prn akk) IF
	(0 nominativ)
	(-1 sier-vblex)
	(NOT *1 pres/pret BARRIER setn-gr)
	(-2 clb-komma)
	(-3 anf);


# 1941
REMOVE (prn akk) IF
	(0 nominativ)
	(-1 sier-vblex)
	(NOT *1 pres/pret BARRIER setn-gr)
	(-2 anf)
	(-3 clb-komma);


# 1942
REMOVE (prn akk) IF
	(0 nominativ)
	(-1 sier-vblex)
	(NOT *1 pres/pret BARRIER setn-gr)
	(-2 clb-komma);


# 1943
REMOVE (prn akk) IF
	(0 prn-nom/%seg%)
	(*1C pres/pret BARRIER ikke-adv)
	(*-1C pres/pret BARRIER ikke-adv)
	(*-1C pres/pret LINK *-1 ikke-adv LINK NOT 0 %som%);


# 1925
REMOVE (prn) IF
	(NOT 0 %seg%)
	(-1 iv)
	(1C subst/adj)
	(NOT 1 advblex/komp/ub-sup/pres-part)
	(NOT -1 predik3/5-7 OR pres/pret)
	(*2 ikke-poss-det LINK NOT 0 fv);


# 1926
REMOVE (prn) IF
	(NOT 0 %seg%)
	(-1 iv)
	(1C subst/adj)
	(NOT 1 advblex/komp/ub-sup/pres-part)
	(NOT -1 predik3/5-7 OR pres/pret)
	(NOT *2 ikke-poss-det BARRIER setn-gr);


#
;


# 1927
REMOVE (prn) IF
	(1 %slags%);


# 1911
REMOVE (sbu) IF
	(0 pr)
	(NOT 0 %som%)
	(NOT -1 ikke-subst)
	(*-2C setn-gr/parentes-beg LINK *1 ikke-adv-adj-det LINK 0 subst LINK NOT 0 ikke-subst LINK NOT *1 alt);


# 1912
REMOVE (sbu) IF
	(NOT 0 %som/om% OR %at%)
	(1 pr);


# 1913
REMOVE (sbu) IF
	(NOT 0 %som/om% OR %at%)
	(1 advblex)
	(NOT 1 ikke-adv-adj)
	(2C pres/pret);


# 1914
REMOVE (sbu) IF
	(0 pr)
	(*1 clb-cnj LINK NOT 0 %saa% LINK NOT *-1 setn-gr)
	(*1 clb-cnj BARRIER pres/pret)
	(*1 clb-cnj LINK 1 pres/pret);


# 1915
REMOVE (sbu) IF
	(0 pr)
	(*1 clb-komma LINK 1 sbu)
	(*1 clb-komma BARRIER pres/pret);


# 1916
REMOVE (sbu) IF
	(0 pr)
	(-1C setn-gr)
	(*1C clb-komma LINK NOT 1 pres/pret/advblex);


# 1917
REMOVE (sbu) IF
	(*1 komma LINK 1 clb-cnj)
	(*1 komma BARRIER pres/pret);


# 1918
REMOVE (sbu) IF
	(0 pr)
	(NOT 0 %som/om/der%)
	(-1 clb-cnj);


# 1919
REMOVE (sbu) IF
	(0 pr)
	(-1 >>>)
	(NOT *1 spoersmaal-t OR ellipse)
	(*1 pres/pret LINK NOT *1 pres/pret);


# 1920
REMOVE (sbu) IF
	(0 pr)
	(NOT 0 %som/enn%)
	(1 setn-gr)
	(NOT 1 %bare%);


# 1921
REMOVE (sbu) IF
	(*1C setn-gr BARRIER pres/pret);


# 1922
REMOVE (sbu) IF
	(1 komma/setn-slutt);


# 1923
REMOVE (sbu) IF
	(*1 setn-gr LINK *-1 pres/pret LINK NOT 0 farlige-vblex)
	(*1C iv LINK *-1 ikke-poss-det LINK 0 subst/prn/%all%/%mang%/%mange% LINK NOT 0 infmerke LINK *-1 ikke-adv-adj-det LINK 0 pres/pret LINK NOT *-1 pres/pret)
	(*1C iv BARRIER iv);


# 1924
REMOVE (sbu) IF
	(NOT 0 %som%)
	(1C fv);


# 1910
REMOVE (subst appell) IF
	(0 mest-sanns-vblex-istf-subst OR pres);


# 1906
REMOVE (subst sg ind) IF
	(0 ub-fl-subst)
	(-1 adj-fl)
	(NOT 1 subst)
	(NOT -1 adj-ent OR det-ent)
	(NOT -1 gen OR sup)
	(NOT -1 fv OR subst-prop);


# 1907
REMOVE (subst sg ind) IF
	(NOT 0 advblexialsubst OR tall-subst)
	(NOT 0 gen OR tittel)
	(NOT 1 komma/cnj OR anf)
	(NOT -1 det/adj/gen/prop OR %hvilken%)
	(NOT -1 pr OR komma/cnj)
	(*-1 setn-gr BARRIER kop)
	(*1 ikke-adv-adj-det BARRIER setn-gr)
	(*1 ikke-adv-adj-det BARRIER fork/ukjent-ord)
	(*1 ikke-adv-adj-det BARRIER parentes)
	(*1 ikke-adv-adj-det LINK 0 subst LINK NOT 0 ikke-subst LINK NOT 0 advblexialsubst LINK NOT 0 subst-prop LINK NOT 0 fork);


# 1908
REMOVE (subst sg ind) IF
	(0 be-subst)
	(NOT 0 fork)
	(-1C pr)
	(*1 ikke-poss-det LINK NOT 0 cnj);


# 1909
REMOVE (subst sg ind) IF
	(0 be-subst)
	(NOT 0 fork)
	(-1C pr)
	(NOT *1 ikke-poss-det BARRIER setn-gr);


# 1903
REMOVE (subst sg) IF
	(0 pl-subst)
	(*-1 %flere% BARRIER ikke-adv-adj);


# 1904
REMOVE (subst sg) IF
	(NOT -1 komma/cnj OR gen)
	(*-1 det LINK NOT 0 sg LINK NOT 0 ikke-det LINK NOT 0 %samme/neste/ene/eneste/selve/forrige% LINK NOT *1 ikke-adv-adj);


#
;


# 1905
REMOVE (subst sg) IF
	(0 farger)
	(1 komma/cnj)
	(*3 pl-subst BARRIER ikke-adv-adj);


# 1900
REMOVE (subst ind) IF
	(NOT 0 advblexialsubst OR tall-subst)
	(NOT 0 gen OR tittel)
	(NOT 1 komma/cnj OR anf)
	(NOT -1 det/adj/gen/prop OR %hvilken%)
	(NOT -1 pr OR komma/cnj)
	(*-1 setn-gr BARRIER kop)
	(*1 ikke-adv-adj-det BARRIER setn-gr)
	(*1 ikke-adv-adj-det BARRIER fork/ukjent-ord)
	(*1 ikke-adv-adj-det BARRIER parentes);


# 1901
REMOVE (subst ind) IF
	(0 pres/pret)
	(-1 be-nt-det)
	(NOT -1 poss-det)
	(*1 setn-gr BARRIER pres/pret);


# 1902
REMOVE (subst ind) IF
	(0 pres/pret)
	(-1 be-m-det)
	(NOT -1 poss-det)
	(*1 setn-gr BARRIER pres/pret);


# 1897
REMOVE (subst def) IF
	(NOT 0 gen)
	(1C subst)
	(NOT 1 subst-prop)
	(*-1C setn-gr LINK NOT 1 advblex/komp/ub-sup)
	(*-1C setn-gr LINK NOT 1 pr)
	(*-1 fv LINK NOT -1 komma)
	(*-1 vblex LINK NOT 0 ditrans)
	(*1 setn-gr BARRIER pres/pret);


# 1898
REMOVE (subst def) IF
	(-1C adj-ub)
	(*-1C pr BARRIER ikke-adv-adj);


# 1899
REMOVE (subst def) IF
	(-1 poss-det)
	(NOT -2 be-subst);


# 1891
REMOVE (subst pl) IF
	(-1 adj-ent)
	(NOT -1 ikke-adj OR adj-fl)
	(NOT -1 adj-komp OR adj-sup);


# 1892
REMOVE (subst pl) IF
	(NOT -1 komma/cnj)
	(*-1 det LINK NOT 0 pl LINK NOT 0 ikke-det LINK NOT 0 %samme/neste/ene/eneste/selve/forrige% LINK NOT *1 ikke-adv-adj);


#
;


# 1894
REMOVE (subst pl) IF
	(NOT 0 %gang%)
	(*-1C setn-gr LINK 1 adv LINK 1 pres/pret LINK 0 kop LINK *1 ikke-adv-adj-det LINK 0 nom-ent LINK NOT 0 pl LINK NOT 0 %det/dette%-prn LINK NOT 0 %del/andel% LINK NOT *1 ikke-poss-det);


# 1895
REMOVE (subst pl) IF
	(NOT 0 %gang%)
	(*-1C setn-gr LINK *1 ikke-adv-adj-det LINK 0 nom-ent LINK NOT 0 pl LINK NOT 0 %det/dette%-prn LINK NOT 0 %del/andel% LINK *1 ikke-adv-adj-substmgen-prn-detmdem-pr LINK 0 pres/pret LINK 0 kop LINK NOT *1 ikke-adv-adj-det);


#
;


# 1896
REMOVE (subst pl) IF
	(-1 %noen/noe%)
	(NOT -1 pl)
	(-2C pr);


# 1890
REMOVE (subst m sg ind) IF
	(0 pres)
	(1 pres/pret OR subst)
	(-1 be-m-det);


# 1888
REMOVE (subst m sg) IF
	(0 adj)
	(*-1C det LINK NOT 0 m LINK NOT 0 pl LINK NOT 0 %selv% LINK NOT 0 %samme/neste/ene/eneste/selve/forrige%)
	(*-1C det BARRIER ikke-adv-adj);


# 1889
REMOVE (subst m sg) IF
	(-1 %noen/noe%)
	(NOT -1 m-ent)
	(-2C pr);


# 1885
REMOVE (subst nt sg) IF
	(NOT -1 adv OR gen)
	(*-1 det LINK NOT 1 komma)
	(*-1 det LINK NOT 0 ikke-det LINK NOT 0 %samme/neste/ene/eneste/selve/forrige% LINK NOT 0 nt-det LINK NOT 0 poss-det LINK NOT 0 %all% LINK NOT *1 ikke-adv-adj);


# 1886
REMOVE (subst nt sg) IF
	(0 adj)
	(*-1C det LINK NOT 0 nt LINK NOT 0 pl LINK NOT 0 %selv% LINK NOT 0 %samme/neste/ene/eneste/selve/forrige%)
	(*-1C det BARRIER ikke-adv-adj);


# 1887
REMOVE (subst nt sg) IF
	(-1 %noen/noe%)
	(NOT -1 nt-ent)
	(-2C pr);


# 1883
REMOVE (subst f sg) IF
	(0 adj)
	(*-1C det LINK NOT 0 f LINK NOT 0 pl LINK NOT 0 %selv% LINK NOT 0 %samme/neste/ene/eneste/selve/forrige%)
	(*-1C det BARRIER ikke-adv-adj);


# 1884
REMOVE (subst f sg) IF
	(-1 %noen/noe%)
	(NOT -1 f-ent)
	(-2C pr)


;


# 1880
REMOVE (subst prop gen) IF
	(0 subst-prop OR mf)
	(1 subst-prop);


# 1881
REMOVE (subst prop gen) IF
	(0 subst-prop)
	(NOT 1 adj OR subst)
	(NOT 1 anf OR setn-gr);


# 1882
REMOVE (subst prop gen) IF
	(0 %jesu/kristi/pauli%);


# 1879
REMOVE (subst prop) IF
	(NOT 0 ikke-subst OR be-subst)
	(-1 s#periode-beg/clb-cnj)
	(1C subst-prop)
	(NOT -1 %hver% OR pr);


#
;


# 1874
REMOVE (subst uboey) IF
	(0 farger)
	(-1 advblex)
	(-2 vblex);


# 1875
REMOVE (subst uboey) IF
	(0 farger)
	(-1 vblex);


# 1876
REMOVE (subst uboey) IF
	(0 adj-fl OR farger)
	(1 komma/cnj)
	(*3 pl-subst BARRIER ikke-adv-adj);


# 1877
REMOVE (subst uboey) IF
	(0 farger)
	(1 komma/cnj)
	(*3 ub-ent-nt-subst BARRIER ikke-adv-adj);


# 1878
REMOVE (subst uboey) IF
	(0 farger)
	(1 ub-ent-nt-subst);


# 1872
REMOVE (subst gen) IF
	(NOT 1 subst/adj/nr2-det OR setn-gr)
	(NOT 1 cnj OR parentes);


# 1873
REMOVE (subst gen) IF
	(0 adj)
	(NOT 0 samset OR adj-gen);


# 1855
REMOVE (subst) IF
	(0 adj OR mest-sanns-adj-istf-subst)
	(NOT 0 subst-prop)
	(NOT -1 ub-det);


# 1856
REMOVE (subst) IF
	(NOT 0 imp)
	(-1C be-subst)
	(NOT -1 gen)
	(*-1C setn-gr LINK NOT 1 advblex/komp/ub-sup)
	(*-1C setn-gr LINK NOT 1 pr)
	(*-1 fv LINK NOT -1 komma)
	(*-1 vblex LINK NOT 0 ditrans)
	(*1 setn-gr BARRIER pres/pret);


# 1857
REMOVE (subst) IF
	(0 adj)
	(-1 komma/cnj)
	(1C subst)
	(-2 adj);


# 1858
REMOVE (subst) IF
	(0indOR fv)
	(-1 nt OR %det%)
	(NOT 1 sbu OR cnj)
	(NOT -2 fv);


# 1859
REMOVE (subst) IF
	(0 det/adj)
	(NOT 0 farlige-adj OR samset)
	(-1 pr)
	(1C subst)
	(NOT 1 subst-prop);


# 1860
REMOVE (subst) IF
	(-1 iv)
	(*1C subst BARRIER ikke-adv-adj-det)
	(*-2 ikke-adv LINK 0 pres/pret);


# 1861
REMOVE (subst) IF
	(0 pres/pret)
	(NOT 0 advblexialsubst)
	(*-1 pr LINK *1 ikke-adv-adj LINK 0 subst LINK NOT 0 ikke-subst-prn LINK NOT 0 gen/%slags% LINK NOT 0 advblexialsubst LINK NOT *1 ikke-adv-adj)
	(*-1 subst BARRIER tegnsetting)
	(*-1 subst BARRIER cnj);


# 1862
REMOVE (subst) IF
	(0 pres/pret)
	(NOT 0 advblexialsubst)
	(*-1 sbu-ren LINK *1 ikke-adv-adj LINK 0 subst LINK NOT 0 ikke-subst-prn LINK NOT 0 gen/%slags% LINK NOT *1 ikke-adv-adj)
	(*-1 subst BARRIER tegnsetting)
	(*-1 subst BARRIER cnj);


# 1863
REMOVE (subst) IF
	(0 perf-part)
	(NOT 1 %som%-sbu)
	(*-1 ikke-adv LINK 0 %det%-prn LINK -1 kop);


# 1864
REMOVE (subst) IF
	(0 pres/pret)
	(NOT 1 pres/pret)
	(*-1 ikke-poss-det LINK 0 subst LINK *-1 ikke-adv-adj-det LINK 0 subst LINK *1 ikke-poss-det LINK 0 cnj LINK *-1 ikke-poss-det LINK *-1 ikke-adv-adj-det LINK 0 pr LINK NOT 0 ikke-pr);


# 1865
REMOVE (subst) IF
	(0 adj)
	(NOT 0 subst-prop OR gen)
	(-1C setn-gr)
	(*1 ikke-adv-adj LINK 0 subst LINK NOT 0 ikke-subst LINK NOT 0 def LINK NOT 0 subst-prop LINK NOT 0 poss-det LINK NOT 0 %selv% LINK *1 ikke-poss-det LINK 0 pres/pret);


# 1866
REMOVE (subst) IF
	(0 retning);


# 1867
REMOVE (subst) IF
	(0 spraak)
	(1 subst)
	(NOT 1 %alt%);


# 1868
REMOVE (subst) IF
	(0 poss-det)
	(1 be-ent-m-adj)
	(NOT 1 fv OR adv)
	(2C clb-komma/cnj);


# 1869
REMOVE (subst) IF
	(0 poss-det)
	(1 be-ent-m-adj)
	(NOT 1 fv OR adv)
	(NOT 2 subst/adj OR komma/cnj);


# 1870
REMOVE (subst) IF
	(0 poss-det)
	(*1 ub-ent-subst BARRIER ikke-adv-adj);


# 1871
REMOVE (subst) IF
	(0 fv)
	(-1 cnj-<adv>)
	(*1C setn-gr LINK NOT *-1C fv);


# 1854
REMOVE (vblex pres samset) IF
	(0 be-fl-subst)
	(*-1 pl-det BARRIER ikke-adv-adj);


# 1809
REMOVE (vblex pres) IF
	(0 s-vblex OR subst)
	(-1 det)
	(*1C pres/pret BARRIER setn-gr);


# 1810
REMOVE (vblex pres) IF
	(1 %siden%)
	(*-1 setn-gr LINK *1 %for% LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 1811
REMOVE (vblex pres) IF
	(-1C perf-part)
	(NOT 1 nom);


# 1812
REMOVE (vblex pres) IF
	(NOT 0 sier-vblex)
	(-1 komma)
	(NOT *-2 komma BARRIER setn-gr)
	(*-1C setn-gr LINK NOT 0 komma LINK NOT 0 strek LINK NOT *1 fv)
	(*-1C setn-gr BARRIER pr)
	(*1 pres/pret BARRIER setn-gr);


# 1813
REMOVE (vblex pres) IF
	(1 komma)
	(-1 komma/cnj)
	(NOT -1 clb)
	(2 subst)
	(-2 subst);


# 1814
REMOVE (vblex pres) IF
	(0 subst)
	(-1 cnj)
	(NOT -1 clb)
	(-2 subst);


# 1815
REMOVE (vblex pres) IF
	(-1 komma/cnj)
	(NOT -1 clb)
	(*-1 fv BARRIER setn-gr);


#
;


# 1816
REMOVE (vblex pres) IF
	(0 pl-subst)
	(1 setn-gr)
	(-1 adj-fl)
	(-2 komma);


# 1817
REMOVE (vblex pres) IF
	(1 setn-gr)
	(-1C advblex)
	(-2 komma)
	(NOT -3 fv);


# 1818
REMOVE (vblex pres) IF
	(-1 %alle%)
	(-2 pr)
	(NOT -2 %som%);


# 1819
REMOVE (vblex pres) IF
	(-1 >>>)
	(*1 setn-gr LINK *-1C fv LINK NOT *-1 ikke-adv-adj-subst-det-pr);


# 1820
REMOVE (vblex pres) IF
	(*-1 periode-beg/cnj-clb BARRIER setn-gr)
	(*-1 periode-beg/cnj-clb BARRIER komma/cnj)
	(*1C fv BARRIER ikke-adv);


# 1821
REMOVE (vblex pres) IF
	(0 pl)
	(NOT 0 pass)
	(1 pl)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1822
REMOVE (vblex pres) IF
	(0 pl)
	(NOT 0 pass)
	(-1 pl)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1823
#REMOVE (vblex pres) IF
#	(NOT 0 pass)
#	(NOT -1 adv OR parentes)
#	(2C setn-gr-u-sbu)
#	(*-1 setn-gr LINK *1C fv LINK NOT 0 trans2)
#	(*-1 setn-gr LINK NOT -1 >>>)
#	(*-1 setn-gr LINK 0 %som% LINK *-1C pres/pret);


# 1824
#REMOVE (vblex pres) IF
#	(NOT 0 pass)
#	(1C setn-gr-u-sbu)
#	(NOT -1 adv OR parentes)
#	(*-1 setn-gr LINK *1C fv LINK NOT 0 trans2)
#	(*-1 setn-gr LINK NOT -1 >>>)
#	(*-1 setn-gr LINK 0 %som%);


# 1825
REMOVE (vblex pres) IF
	(NOT 0 pass)
	(*-1 setn-gr LINK *1C fv LINK 0 trans2 LINK *1C fv);


# 1826
REMOVE (vblex pres) IF
	(NOT 0 pass)
	(-1C adv)
	(NOT -2 subst/prn)
	(*-1 setn-gr LINK *1C fv LINK NOT 0 trans2)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1827
REMOVE (vblex pres) IF
	(NOT 0 pass)
	(NOT -1 adv OR parentes)
	(*-1 setn-gr LINK *1C fv LINK 0 trans2 LINK 0 ditrans)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1828
REMOVE (vblex pres) IF
	(NOT 0 pass)
	(-1C fv)
	(*-1 setn-gr LINK *1C fv LINK 0 trans2)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1829
REMOVE (vblex pres) IF
	(NOT 0 pass)
	(-1 inf/perf-part)
	(*-1 setn-gr LINK *1C fv LINK 0 trans2)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1830
REMOVE (vblex pres) IF
	(NOT 0 pass)
	(NOT -1 adv OR parentes)
	(*-1 setn-gr LINK *1C fv LINK NOT 0 trans2)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1831
REMOVE (vblex pres) IF
	(-1 >>>)
	(*1 pres/pret BARRIER setn-gr);


# 1832
REMOVE (vblex pres) IF
	(-1 %at%)
	(NOT 1 nom);


# 1833
REMOVE (vblex pres) IF
	(-1 sbu-ren)
	(NOT -1 %der% OR adv)
	(NOT -1 %at% OR %som%);


# 1834
REMOVE (vblex pres) IF
	(-1 cnj)
	(NOT -1 clb OR adv);


# 1835
REMOVE (vblex pres) IF
	(-1C subst-gen);


# 1836
REMOVE (vblex pres) IF
	(0 ikke-vblex)
	(NOT 0 pass OR hj-vblex)
	(NOT -1 setn-gr)
	(*1 overskrift BARRIER setn-gr);


# 1837
REMOVE (vblex pres) IF
	(0 refl)
	(NOT 0 ikke-refl)
	(-1 nom/som)
	(NOT 1 prn-akk);


# 1838
REMOVE (vblex pres) IF
	(0 tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus)
	(NOT 0 ikke-tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus)
	(1 setn-gr)
	(-1 advblex)
	(NOT 1 %at% OR %saa%)
	(-2 setn-gr)
	(NOT -2 pr);


# 1839
REMOVE (vblex pres) IF
	(0 tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus)
	(NOT 0 ikke-tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus)
	(1 setn-gr)
	(-1 setn-gr)
	(NOT 1 pr OR %at%)
	(NOT 1 kolon OR overskrift)
	(NOT -1 pr);


# 1840
REMOVE (vblex pres) IF
	(1C cnj)
	(-1C setn-gr)
	(NOT 1 <adv>)
	(NOT 2 pres);


#
;


# 1842
REMOVE (vblex pres) IF
	(0 ub-subst)
	(-1C adj-pos)
	(NOT -1 adv)
	(NOT -1C nt)
	(*-2 det LINK NOT 0 dem LINK NOT *1 ikke-adv-adj-det)
	(*-1 setn-gr LINK 0 sbu LINK 0 pr);


# 1843
REMOVE (vblex pres) IF
	(1 %eller%)
	(NOT 2 pres);


# 1844
REMOVE (vblex pres) IF
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj LINK 0 fv LINK NOT 0 ikke-pres-pret LINK 0 %vaere% LINK *1 subst/prn/%all%/%mang%/%mange% LINK NOT 0 %det% LINK NOT *1 subst/prn/%all%/%mang%/%mange%);


# 1845
REMOVE (vblex pres) IF
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj LINK 0 fv LINK NOT 0 ikke-pres-pret LINK NOT 0 %vaere% LINK *1 subst/prn/%all%/%mang%/%mange% LINK NOT *1 subst/prn/%all%/%mang%/%mange%);


# 1846
REMOVE (vblex pres) IF
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj LINK 0 fv LINK NOT 0 ikke-pres-pret LINK NOT *1 subst/prn/%all%/%mang%/%mange%);


# 1847
REMOVE (vblex pres) IF
	(NOT 0 s-vblex OR pass)
	(-1C pres/pret)
	(*-1 periode-beg/cnj-clb LINK *1 nom LINK NOT *1 nom)
	(*-1 nom BARRIER %som%-sbu);


# 1848
REMOVE (vblex pres) IF
	(NOT 0 s-vblex OR pass)
	(-1C pres/pret)
	(*-1 periode-beg/cnj-clb BARRIER nom);


#
;


# 1850
REMOVE (vblex pres) IF
	(0 pret)
	(*-1 setn-gr LINK 0 %og/men% LINK *-1 setn-gr LINK *1C pres);


# 1851
REMOVE (vblex pres) IF
	(*-1C setn-gr LINK 0 cnj LINK NOT *1 setn-gr)
	(*-1C setn-gr LINK *1 ikke-adv LINK 0 fv LINK NOT 0 ikke-pres-pret LINK *1 ikke-adv LINK 0 pr LINK *1 ikke-adv-adj-det LINK NOT *1 subst/prn/%all%/%mang%/%mange%);


# 1852
REMOVE (vblex pres) IF
	(NOT 0 pass)
	(*-1C setn-gr LINK 1C pr LINK *1 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT *1 ikke-poss-det);


# 1853
REMOVE (vblex pres) IF
	(NOT 0 pass)
	(*-1C setn-gr LINK 1C pr LINK *1 ikke-adv-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT *1 ikke-poss-det);


# 1808
REMOVE (vblex inf pres) IF
	(0 s-vblex);


# 1807
REMOVE (vblex inf gen) IF
	(0 pass);


# 1787
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(*-1C setn-gr BARRIER m-hj-vblex-fv)
	(*-1C setn-gr BARRIER m-hj-vblex-perfpart)
	(*-1C setn-gr BARRIER sansevblex)
	(*-1C setn-gr BARRIER infmerke)
	(*1 periode-slutt/cnj-clb BARRIER m-hj-vblex-fv);


# 1788
REMOVE (vblex inf) IF
	(*1 overskrift BARRIER setn-gr)
	(*-1 ikke-adv LINK NOT 0 fv LINK NOT 0 infmerke);


# 1789
REMOVE (vblex inf) IF
	(NOT *-1 ikke-adv BARRIER setn-gr)
	(*1 overskrift BARRIER setn-gr);


# 1790
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(-1 komma)
	(*-2C setn-gr BARRIER inf);


# 1791
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(-1 adv)
	(-2 clb/cnj-cnj)
	(NOT -3 setn-gr)
	(*-1C setn-gr BARRIER infmerke)
	(*-1C setn-gr BARRIER m-hj-vblex)
	(*-2C setn-gr BARRIER aci);


# 1792
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(-1 clb/cnj-cnj)
	(NOT -2 pres-part)
	(*-1C setn-gr BARRIER infmerke)
	(*-1C setn-gr BARRIER m-hj-vblex)
	(*-2C setn-gr BARRIER aci);


# 1793
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(NOT -1 komma OR @adv)
	(*-1C setn-gr BARRIER infmerke)
	(*-1C setn-gr BARRIER m-hj-vblex)
	(*-2C setn-gr BARRIER aci)
	(*-1 clb/cnj-cnj BARRIER setn-gr)
	(*-1 clb/cnj-cnj LINK *1C ikke-adv);


# 1794
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(NOT -1 komma)
	(*-1 setn-gr BARRIER infmerke)
	(*-1C setn-gr BARRIER m-hj-vblex)
	(*-2C setn-gr BARRIER aci)
	(*-2C setn-gr BARRIER clb/cnj-cnj);


# 1795
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(NOT -1 komma)
	(*-1 infmerke BARRIER setn-gr)
	(*-1 infmerke LINK *1C inf)
	(*-1C setn-gr BARRIER m-hj-vblex)
	(*-2C setn-gr BARRIER aci)
	(*-1 cnj BARRIER setn-gr)
	(*-1 cnj LINK *1C ikke-adv);


# 1796
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(NOT -1 komma OR @adv)
	(*-1 infmerke BARRIER setn-gr)
	(*-1 infmerke LINK *1C inf)
	(*-1C setn-gr BARRIER m-hj-vblex)
	(*-2C setn-gr BARRIER aci)
	(*-2C setn-gr BARRIER cnj);


# 1797
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(NOT -1 komma)
	(*-1 setn-gr BARRIER infmerke)
	(*-1 m-hj-vblex-pret BARRIER setn-gr)
	(*-1C m-hj-vblex-pret LINK *1C perf-part)
	(*-2C setn-gr BARRIER aci)
	(*-2 setn-gr BARRIER cnj);


# 1798
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(*-1 aci BARRIER setn-gr)
	(*-2C aci LINK *1 pr)
	(*-2C aci BARRIER infmerke)
	(*-2C aci BARRIER m-hj-vblex)
	(*-2C setn-gr BARRIER komma/cnj);


# 1799
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(NOT -1 komma)
	(*-1 setn-gr BARRIER infmerke)
	(*-1C setn-gr BARRIER m-hj-vblex)
	(*-1 aci BARRIER setn-gr)
	(*-2 aci LINK *1C inf)
	(*-2C setn-gr BARRIER cnj);


# 1800
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(NOT -1 komma)
	(*-1 setn-gr BARRIER infmerke)
	(*-1C m-hj-vblex BARRIER setn-gr)
	(*-1C m-hj-vblex LINK *1C inf)
	(*-2C setn-gr BARRIER aci)
	(*-2 setn-gr BARRIER cnj);


# 1801
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(NOT -1 komma)
	(*-1 infmerke BARRIER setn-gr)
	(*-1 infmerke LINK *1C inf)
	(*-1C m-hj-vblex BARRIER setn-gr)
	(*-1C m-hj-vblex LINK *1C inf)
	(*-2C setn-gr BARRIER aci)
	(*-2 setn-gr BARRIER cnj);


# 1802
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(-1C vblex)
	(NOT -1 m-hj-vblex);


# 1803
REMOVE (vblex inf) IF
	(NOT 0 pass)
	(-1C ikke-adv-subst-prn-cnj-det-vblex)
	(NOT -1 @adv OR pr-intrans);


# 1804
REMOVE (vblex inf) IF
	(1 pres/pret)
	(-1 setn-gr)
	(*1 periode-slutt/cnj-clb BARRIER %gjoere%);


# 1805
REMOVE (vblex inf) IF
	(0 poss-det)
	(1 nr2-det)
	(*2 pl-subst BARRIER ikke-adv-adj-det);


# 1806
REMOVE (vblex inf) IF
	(0 poss-det)
	(*1 ub-fl-subst BARRIER ikke-adv-adj);


# 1773
REMOVE (vblex perf-part) IF
	(0 adj)
	(1C subst)
	(-1C komma/cnj)
	(NOT -1 clb)
	(-2 subst-appell)
	(*-2 setn-gr BARRIER perf-part);


# 1774
REMOVE (vblex perf-part) IF
	(NOT 0 %ta%)
	(-1 prn-akk-mfn/fl)
	(*-1C setn-gr BARRIER objpred-prn-vblex)
	(*-1C setn-gr BARRIER p-hj-vblex)
	(*-1C setn-gr BARRIER m-hj-vblex-pret)


;


# 1775
REMOVE (vblex perf-part) IF
	(-1C clb-komma)
	(*-2C setn-gr BARRIER p-hj-vblex)
	(*-2C setn-gr BARRIER m-hj-vblex-pret);


# 1776
#REMOVE (vblex perf-part) IF
#	(-1 clb/cnj-cnj)
#	(NOT -2 clb-komma OR perf-part)
#	(NOT -3 perf-part)
#	(*-2C setn-gr-u-strek BARRIER p-hj-vblex)
#	(*-2C setn-gr-u-strek BARRIER m-hj-vblex-pret);


# 1777
REMOVE (vblex perf-part) IF
	(NOT 0 %ta%)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 periode-beg/clb/strek OR %om/enn/som/hvis%)
	(NOT -1 pass OR subst)
	(NOT -1 perf-part OR cnj)
	(NOT -1 adj-komp OR prn-akk-mfn/fl)
	(*-1C setn-gr BARRIER p-hj-vblex)
	(*-1C setn-gr BARRIER m-hj-vblex-pret);


# 1778
REMOVE (vblex perf-part) IF
	(NOT 0 %ta%)
	(*-1 setn-gr BARRIER p-hj-vblex)
	(*-1 det LINK NOT 0 qnt LINK NOT *1 ikke-adv-adj);


# 1779
REMOVE (vblex perf-part) IF
	(-1 %ut%)
	(NOT -2 %fullt%);


# 1780
REMOVE (vblex perf-part) IF
	(-1 %til%)
	(-2 %og%)
	(NOT -3 %av%);


# 1781
REMOVE (vblex perf-part) IF
	(-1 %til%)
	(NOT -2 %og%);


# 1782
REMOVE (vblex perf-part) IF
	(-1 pr)
	(NOT -1 sbu OR %bla%)
	(NOT -1 %ut% OR @adv);


# 1783
REMOVE (vblex perf-part) IF
	(-1 subst-gen);


# 1784
REMOVE (vblex perf-part) IF
	(0 perf-gen);


# 1785
REMOVE (vblex perf-part) IF
	(0 veldig-farlige-part);


# 1786
REMOVE (vblex perf-part) IF
	(-1 subst)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 adj-komp)
	(*-1C setn-gr BARRIER m-hj-vblex-pret)
	(*-1C setn-gr BARRIER p-hj-vblex)
	(*-1 pr BARRIER ikke-adv-adj-det-subst)
	(*-1 pr LINK -1 subst/prn);


# 1772
REMOVE (vblex pret gen) IF
	(0 s-vblex);


# 1771
REMOVE (vblex pret samset) IF
	(0 be-ent-subst)
	(*-1 be-det BARRIER ikke-adv-adj);


# 1723
REMOVE (vblex pret) IF
	(1 %siden%)
	(*-1 setn-gr LINK *1 %for% LINK NOT *1 ikke-adv-adj-subst-prn-cnj-det);


# 1724
REMOVE (vblex pret) IF
	(NOT 0 sier-vblex)
	(-1 komma)
	(NOT *-2 komma BARRIER setn-gr)
	(*-1C setn-gr LINK NOT 0 komma LINK NOT 0 strek LINK NOT *1 fv)
	(*-1C setn-gr BARRIER pr)
	(*1 pres/pret BARRIER setn-gr);


# 1725
REMOVE (vblex pret) IF
	(1 komma)
	(-1 komma/cnj)
	(NOT -1 clb)
	(2 subst)
	(-2 subst);


# 1726
REMOVE (vblex pret) IF
	(-1 komma/cnj)
	(NOT -1 clb)
	(*-1 fv BARRIER setn-gr);


#
;


# 1727
REMOVE (vblex pret) IF
	(1 setn-gr)
	(-1C advblex)
	(-2 komma)
	(NOT -3 fv);


# 1728
REMOVE (vblex pret) IF
	(-1 >>>)
	(*1 setn-gr LINK *-1C fv LINK NOT *-1 ikke-adv-adj-subst-det-pr);


# 1729
REMOVE (vblex pret) IF
	(*-1 periode-beg/cnj-clb BARRIER setn-gr)
	(*-1 periode-beg/cnj-clb BARRIER komma/cnj)
	(*1C fv BARRIER ikke-adv);


# 1730
REMOVE (vblex pret) IF
	(0 perf-part)
	(NOT 0 %var%)
	(NOT -1 subst/prn OR adv)
	(*-1 setn-gr LINK *1C fv LINK 0 p-hj-vblex)
	(*-1 setn-gr LINK 0 %som%);


# 1731
REMOVE (vblex pret) IF
	(0 inf)
	(NOT 0 %var%)
	(NOT -1 subst/prn OR adv)
	(*-1 setn-gr LINK *1C fv LINK 0 m-hj-vblex)
	(*-1 setn-gr LINK 0 %som%);


# 1732
REMOVE (vblex pret) IF
	(0 nt)
	(NOT 0 %var%)
	(1 nt)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1733
REMOVE (vblex pret) IF
	(0 nt)
	(NOT 0 %var%)
	(-1 nt)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1734
REMOVE (vblex pret) IF
	(0 f)
	(NOT 0 %var%)
	(-1 f)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1735
REMOVE (vblex pret) IF
	(0 f)
	(NOT 0 %var%)
	(1 f)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1736
REMOVE (vblex pret) IF
	(0 m)
	(NOT 0 %var%)
	(-1 m)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1737
REMOVE (vblex pret) IF
	(0 m)
	(NOT 0 %var%)
	(1 m)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1738
REMOVE (vblex pret) IF
	(0 pl)
	(NOT 0 %var%)
	(1 pl)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1739
REMOVE (vblex pret) IF
	(0 pl)
	(NOT 0 %var%)
	(-1 pl)
	(NOT -1 subst/prn OR adv)
	(*-1C fv BARRIER setn-gr);


# 1740
#REMOVE (vblex pret) IF
#	(NOT 0 %var%)
#	(NOT -1 adv OR parentes)
#	(2C setn-gr-u-sbu)
#	(*-1 setn-gr LINK *1C fv LINK NOT 0 trans2)
#	(*-1 setn-gr LINK 0 %som%);


# 1741
#REMOVE (vblex pret) IF
#	(NOT 0 %var%)
#	(1C setn-gr-u-sbu)
#	(NOT -1 adv OR parentes)
#	(*-1 setn-gr LINK *1C fv LINK NOT 0 trans2)
#	(*-1 setn-gr LINK 0 %som%);


# 1742
REMOVE (vblex pret) IF
	(NOT 0 %var% OR imp)
	(*-1 setn-gr LINK *1C fv LINK 0 trans2 LINK *1C fv);


# 1743
REMOVE (vblex pret) IF
	(NOT 0 %var%)
	(-1C adv)
	(NOT -2 subst/prn)
	(*-1 setn-gr LINK *1C fv LINK NOT 0 trans2)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1744
REMOVE (vblex pret) IF
	(NOT 0 %var% OR imp)
	(NOT -1 adv OR parentes)
	(*-1 setn-gr LINK *1C fv LINK 0 trans2 LINK 0 ditrans)
	(*-1 setn-gr LINK NOT -1 >>>)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1745
REMOVE (vblex pret) IF
	(NOT 0 %var% OR imp)
	(-1C fv)
	(*-1 setn-gr LINK *1C fv LINK 0 trans2)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1746
REMOVE (vblex pret) IF
	(NOT 0 %var% OR imp)
	(-1 inf/perf-part)
	(*-1 setn-gr LINK *1C fv LINK 0 trans2)
	(*-1 setn-gr LINK NOT -1 >>>)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1747
REMOVE (vblex pret) IF
	(NOT 0 %var%)
	(NOT -1 adv OR parentes)
	(*-1 setn-gr LINK *1C fv LINK NOT 0 trans2)
	(*-1 setn-gr LINK NOT 0 %som%);


# 1748
REMOVE (vblex pret) IF
	(-1 >>>)
	(NOT *2 spoersmaal-t OR overskrift)
	(*1 setn-gr LINK *-1 pres/pret LINK NOT 0 prn);


# 1749
REMOVE (vblex pret) IF
	(-1 %at%)
	(NOT 1 nom);


# 1750
REMOVE (vblex pret) IF
	(NOT 0 %var%)
	(-1 sbu-ren)
	(NOT -1 %der% OR adv)
	(NOT -1 %at% OR %som%);


# 1751
REMOVE (vblex pret) IF
	(-1 cnj)
	(NOT -1 clb OR adv);


# 1752
REMOVE (vblex pret) IF
	(-1C subst-gen);


# 1753
REMOVE (vblex pret) IF
	(0 ikke-vblex)
	(NOT 0 hj-vblex)
	(NOT -1 setn-gr)
	(*1 overskrift BARRIER setn-gr);


# 1754
REMOVE (vblex pret) IF
	(0 tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus)
	(NOT 0 ikke-tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus)
	(1 setn-gr)
	(-1 advblex)
	(NOT 1 %at% OR %saa%)
	(-2 setn-gr)
	(NOT -2 pr);


# 1755
REMOVE (vblex pret) IF
	(0 refl)
	(NOT 0 ikke-refl)
	(-1 nom/som)
	(NOT 1 prn-akk);


# 1756
REMOVE (vblex pret) IF
	(0 tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus)
	(NOT 0 ikke-tr1/tr4-10/tr14/dtr1-9/refl/pr1/pr3-10/adv2/adv6-11/adv13-14/kaus)
	(1 setn-gr)
	(-1 setn-gr)
	(NOT 1 pr OR %at%)
	(NOT 1 kolon OR overskrift)
	(NOT -1 pr);


# 1757
REMOVE (vblex pret) IF
	(1C cnj)
	(-1C setn-gr)
	(NOT 1 <adv>)
	(NOT 2 pret);


# 1758
REMOVE (vblex pret) IF
	(0 ikke-vblex)
	(*-1 setn-gr LINK 1 subst/adj/prn/det LINK *1 ikke-subst-adj-det-prn LINK 0 %naa/da/her/der% LINK NOT 0 ikke-adv LINK 1 pr LINK NOT *1 ikke-adv-adj-det-subst);


#
;


# 1759
REMOVE (vblex pret) IF
	(0 ub-subst)
	(-1C adj-pos)
	(NOT -1 adv)
	(NOT -1C nt)
	(*-2 det LINK NOT 0 dem LINK NOT *1 ikke-adv-adj-det)
	(*-1 setn-gr LINK 0 sbu LINK 0 pr);


# 1760
REMOVE (vblex pret) IF
	(1 %eller%)
	(NOT 2 pret);


# 1761
REMOVE (vblex pret) IF
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj LINK 0 fv LINK NOT 0 ikke-pres-pret LINK 0 %vaere% LINK *1 subst/prn/%all%/%mang%/%mange% LINK NOT 0 %det% LINK NOT *1 subst/prn/%all%/%mang%/%mange%);


# 1762
REMOVE (vblex pret) IF
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj LINK 0 fv LINK NOT 0 ikke-pres-pret LINK NOT 0 %vaere% LINK *1 subst/prn/%all%/%mang%/%mange% LINK NOT *1 subst/prn/%all%/%mang%/%mange%);


# 1763
REMOVE (vblex pret) IF
	(*-1 setn-gr LINK 0 spoerreadv LINK *1 ikke-adv-adj LINK 0 fv LINK NOT 0 ikke-pres-pret LINK NOT *1 subst/prn/%all%/%mang%/%mange%);


# 1764
REMOVE (vblex pret) IF
	(-1C pres/pret)
	(*-1 periode-beg/cnj-clb LINK *1 nom LINK NOT *1 nom)
	(*-1 nom BARRIER %som%-sbu);


# 1765
REMOVE (vblex pret) IF
	(NOT 0 %gjoere%)
	(-1C pres/pret)
	(*-1 periode-beg/cnj-clb BARRIER nom);


# 1766
REMOVE (vblex pret) IF
	(0 pres)
	(*1 setn-gr LINK 0 %og/men% LINK *1 setn-gr LINK *-1C pres);


# 1767
REMOVE (vblex pret) IF
	(0 pres)
	(*-1 setn-gr LINK 0 %og/men% LINK *-1 setn-gr LINK *1C pres);


# 1768
REMOVE (vblex pret) IF
	(*-1C setn-gr LINK 0 cnj LINK NOT *1 setn-gr)
	(*-1C setn-gr LINK *1 ikke-adv LINK 0 fv LINK NOT 0 ikke-pres-pret LINK *1 ikke-adv LINK 0 pr LINK *1 ikke-adv-adj-det LINK NOT *1 subst/prn/%all%/%mang%/%mange%);


# 1769
REMOVE (vblex pret) IF
	(*-1C setn-gr LINK 1C pr LINK *1 ikke-adv-adj-det LINK 0 nom LINK *1 ikke-poss-det LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT *1 ikke-poss-det);


# 1770
REMOVE (vblex pret) IF
	(*-1C setn-gr LINK 1C pr LINK *1 ikke-adv-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK *1 ikke-adv-adj-det LINK 0 nom LINK NOT *1 ikke-poss-det);


# 1722
REMOVE (vblex imp) IF
	(0 ikke-vblex)
	(NOT -1 setn-gr)
	(*1 overskrift BARRIER setn-gr);


# 1720
REMOVE (vblex gen) IF
	(NOT 1 ub-subst)
	(*-1 f-subj BARRIER setn-gr);


# 1721
REMOVE (vblex gen) IF
	(0 pres/pret);


# 1709
REMOVE (vblex) IF
	(0 fv)
	(-1 det)
	(NOT -1 tall OR %hvert%)
	(-2C pr);


# 1710
REMOVE (vblex) IF
	(0 fv)
	(-1C pr)
	(NOT -1 @adv)
	(-2 %som%);


# 1711
REMOVE (vblex) IF
	(0 fv)
	(-1C pr)
	(NOT -1 %foer% OR pr-intrans)
	(NOT -1 %som% OR @adv)
	(-2 setn-gr);


# 1712
REMOVE (vblex) IF
	(0 fv)
	(1 setn-gr)
	(-1C pr)
	(NOT -1 pr-intrans);


# 1713
REMOVE (vblex) IF
	(0 fv)
	(-1 pr)
	(NOT -1 ikke-pr-sbu OR %som%)
	(NOT -1 pr-intrans OR @adv)
	(NOT -2 setn-gr OR adj)
	(NOT -2 cnj OR pr);


# 1714
REMOVE (vblex) IF
	(0 fv)
	(-1C pr)
	(NOT -1 pr-intrans)
	(NOT -2 setn-gr OR adj)
	(NOT -2 cnj OR pr);


# 1715
REMOVE (vblex) IF
	(0 fv)
	(1C pres/pret)
	(NOT *-1 %som% BARRIER setn-gr);


# 1716
REMOVE (vblex) IF
	(0 fv)
	(-1 poss-det)
	(NOT -2 subst);


# 1717
REMOVE (vblex) IF
	(0 fv)
	(-1C %en/ei/et%);


# 1718
REMOVE (vblex) IF
	(0 sbu)
	(*1 pres/pret LINK *-1 ikke-poss-det LINK NOT *-1 ikke-adv-adj-det);


# 1719
REMOVE (vblex) IF
	(0 fv OR adj)
	(1C subst)
	(NOT 1 subst-prop)
	(2C pres/pret)
	(*-1C setn-gr LINK NOT 0 sbu);


# 1682
SELECT (clb cnj) IF
	(0 %for%)
	(-1 komma)
	(*1 subst/prn/%all%/%mang%/%mange% LINK NOT 0 %hvem/hva% LINK NOT 0 akk LINK NOT *-1 ikke-adv-adj-det)
	(*1 subst/prn/%all%/%mang%/%mange% LINK 1C pr LINK *1 ikke-adv-adj-det LINK 0 nom LINK 1C pres/pret);


# 1683
SELECT (clb cnj) IF
	(0 %saa%)
	(-1 komma)
	(NOT 1 adj)
	(*1 subst/prn/%all%/%mang%/%mange% LINK NOT 0 %hvem/hva% LINK NOT *-1 ikke-adv-adj-det)
	(*1 subst/prn/%all%/%mang%/%mange% LINK 1C pr LINK *1 ikke-adv-adj-det LINK 0 nom LINK 1C pres/pret);


# 1684
SELECT (clb cnj) IF
	(NOT 0 %saa% OR %for%)
	(-1 komma)
	(*1 subst/prn/%all%/%mang%/%mange% LINK NOT 0 %hvem/hva% LINK NOT *-1 ikke-adv-adj-det)
	(*1 subst/prn/%all%/%mang%/%mange% LINK 1C pr LINK *1 ikke-adv-adj-det LINK 0 nom LINK 1C pres/pret);


# 1685
SELECT (clb cnj) IF
	(0 %for%)
	(-1 komma)
	(*1 subst/prn/%all%/%mang%/%mange% LINK NOT 0 %hvem/hva% LINK NOT 0 akk LINK NOT *-1 ikke-adv-adj-det)
	(*1 subst/prn/%all%/%mang%/%mange% LINK 1C pres/pret);


# 1686
SELECT (clb cnj) IF
	(0 %saa%)
	(-1 komma)
	(NOT 1 adj)
	(*1 subst/prn/%all%/%mang%/%mange% LINK NOT 0 %hvem/hva% LINK NOT *-1 ikke-adv-adj-det)
	(*1 subst/prn/%all%/%mang%/%mange% LINK 1C pres/pret);


# 1687
SELECT (clb cnj) IF
	(NOT 0 %saa% OR %for%)
	(-1 komma)
	(*1 subst/prn/%all%/%mang%/%mange% LINK NOT 0 %hvem/hva% LINK NOT *-1 ikke-adv-adj-det)
	(*1 subst/prn/%all%/%mang%/%mange% LINK 1C pres/pret);


# 1688
SELECT (clb cnj) IF
	(NOT 0 %saa%)
	(1 nom)
	(-1 komma)
	(*-1C pres/pret BARRIER setn-gr)
	(*1C pres/pret BARRIER setn-gr)
	(*1 setn-gr LINK 0 pr LINK NOT 0 %som% LINK NOT *-1 ikke-adv-adj-subst-prn-det);


# 1689
SELECT (clb cnj) IF
	(NOT 0 %saa%)
	(-1 komma)
	(*-1C pres/pret BARRIER setn-gr)
	(*1C pres/pret BARRIER setn-gr);


# 1690
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 pres/pret BARRIER setn-gr)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK -1 pr-intrans)
	(*-1 pres/pret BARRIER setn-gr);


#
;


# 1691
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 setn-gr/parentes-beg LINK *-1 pres/pret)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
	(*1 pres/pret LINK NOT -1 subst-gen)
	(*1 pres/pret LINK NOT -1 subst/prn)
	(*1 pres/pret LINK -1 adv LINK -1 subst/prn LINK NOT -1 subst/prn)
	(*-1C setn-gr LINK 0 sbu LINK *1 pres/pret LINK NOT *1 adv-cnj)
	(*-1C setn-gr LINK NOT -1 setn-gr);


# 1692
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 setn-gr/parentes-beg LINK *-1 pres/pret)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
	(*1 pres/pret LINK NOT -1 subst-gen)
	(*1 pres/pret LINK NOT -1 subst/prn)
	(*1 pres/pret LINK -1 adv LINK NOT -1 subst/prn)
	(*-1C setn-gr LINK 0 sbu LINK *1 pres/pret LINK NOT *1 adv-cnj)
	(*-1C setn-gr LINK NOT -1 setn-gr);


# 1693
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 setn-gr/parentes-beg LINK *-1 pres/pret)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
	(*1 pres/pret LINK NOT -1 subst-gen)
	(*1 pres/pret LINK -1 subst/prn LINK NOT -1 subst/prn)
	(*-1C setn-gr LINK 0 sbu LINK *1 pres/pret LINK NOT *1 adv-cnj)
	(*-1C setn-gr LINK NOT -1 setn-gr);


# 1694
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 setn-gr/parentes-beg LINK *-1 pres/pret)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
	(*1 pres/pret LINK NOT -1 subst-gen)
	(*1 pres/pret LINK NOT -1 subst/prn)
	(*1 pres/pret LINK NOT -1 adv)
	(*-1C setn-gr LINK 0 sbu LINK *1 pres/pret LINK NOT *1 adv-cnj)
	(*-1C setn-gr LINK NOT -1 setn-gr);


# 1695
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 setn-gr/parentes-beg LINK *-1 pres/pret)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
	(*1 pres/pret LINK NOT -1 subst-gen)
	(*1 pres/pret LINK NOT -1 subst/prn)
	(*1 pres/pret LINK -1 adv LINK -1 subst/prn LINK NOT -1 subst/prn)
	(*-1C setn-gr LINK NOT 0 sbu LINK *1 pres/pret LINK NOT *1 adv-cnj);


# 1696
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 setn-gr/parentes-beg LINK *-1 pres/pret)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
	(*1 pres/pret LINK NOT -1 subst-gen)
	(*1 pres/pret LINK NOT -1 subst/prn)
	(*1 pres/pret LINK -1 adv LINK NOT -1 subst/prn)
	(*-1C setn-gr LINK NOT 0 sbu LINK *1 pres/pret LINK NOT *1 adv-cnj);


# 1697
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 setn-gr/parentes-beg LINK *-1 pres/pret)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
	(*1 pres/pret LINK NOT -1 subst-gen)
	(*1 pres/pret LINK -1 subst/prn LINK NOT -1 subst/prn)
	(*-1C setn-gr LINK NOT 0 sbu LINK *1 pres/pret LINK NOT *1 adv-cnj);


# 1698
SELECT (clb cnj) IF
	(0 clb/cnj-cnj)
	(*1 setn-gr/parentes-beg LINK *-1 pres/pret)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma)
	(*1 pres/pret LINK NOT -1 subst-gen)
	(*1 pres/pret LINK NOT -1 subst/prn)
	(*1 pres/pret LINK NOT -1 adv)
	(*-1C setn-gr LINK NOT 0 sbu LINK *1 pres/pret LINK NOT *1 adv-cnj);


# 1699
SELECT (clb cnj) IF
	(-1 tegnsetting)
	(NOT -2 >>>)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret BARRIER subst/prn/%all%/%mang%/%mange%);


# 1700
SELECT (clb cnj) IF
	(1 subst/prn/%all%/%mang%/%mange%)
	(*2 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret)
	(*-1C setn-gr LINK *1 ikke-adv-adj-det/%all%/%mang%/%mange% LINK 0 nom LINK *1 ikke-adv-adj-det LINK 0 subst-prop)
	(*-1C setn-gr LINK *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK 1 pr LINK NOT *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr);


# 1701
SELECT (clb cnj) IF
	(1 subst/prn/%all%/%mang%/%mange%)
	(*2 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret)
	(*-1C setn-gr LINK *1 ikke-adv-adj-det/%all%/%mang%/%mange% LINK 0 premod-subst/prop)
	(*-1C setn-gr LINK *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK 1 pr LINK NOT *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr);


# 1702
SELECT (clb cnj) IF
	(1 subst/prn/%all%/%mang%/%mange%)
	(*2 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret)
	(*-1C setn-gr LINK *1 ikke-adv-adj-det/%all%/%mang%/%mange% LINK 0 nom LINK *1 ikke-adv-adj-det LINK NOT 0 nom)
	(*-1C setn-gr LINK *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret LINK 1 pr LINK NOT *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)


;


# 1703
SELECT (clb cnj) IF
	(NOT 0 %saa%)
	(1 subst/prn/%all%/%mang%/%mange%)
	(-1 subst/prn/%all%/%mang%/%mange%)
	(*-1C vblex LINK NOT 0 trans2 LINK NOT *1 vblex)
	(*-1C vblex BARRIER setn-gr)
	(*-1C vblex LINK *1 subst/prn LINK 0 premod-subst/prop)
	(*1C pres/pret BARRIER vblex)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 1704
SELECT (clb cnj) IF
	(NOT 0 %saa%)
	(1 subst/prn/%all%/%mang%/%mange%)
	(-1 subst/prn/%all%/%mang%/%mange%)
	(*-1C vblex LINK NOT 0 trans2 LINK NOT *1 vblex)
	(*-1C vblex BARRIER setn-gr)
	(*-1C vblex LINK *1 subst/prn LINK NOT *1 subst/prn)
	(*1C pres/pret BARRIER vblex)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 1705
SELECT (clb cnj) IF
	(NOT 0 %saa%)
	(1 subst/prn/%all%/%mang%/%mange%)
	(-1 subst/prn/%all%/%mang%/%mange%)
	(*-1C vblex LINK NOT 0 trans2 LINK NOT *1 vblex)
	(*-1C vblex BARRIER setn-gr)
	(*-1C vblex BARRIER subst/prn)
	(*1C pres/pret BARRIER vblex)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 1706
SELECT (clb cnj) IF
	(NOT 0 %saa%)
	(1 subst/prn/%all%/%mang%/%mange%)
	(-1 subst/prn/%all%/%mang%/%mange%)
	(*-1C vblex LINK 0 kop LINK NOT *1 vblex)
	(*-1C vblex BARRIER setn-gr)
	(*-1C vblex LINK *1 subst/prn LINK 0 premod-subst/prop)
	(*1C pres/pret BARRIER vblex)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 1707
SELECT (clb cnj) IF
	(1 subst/prn/%all%/%mang%/%mange%)
	(-1 subst/prn/%all%/%mang%/%mange%)
	(*-1C vblex LINK 0 kop LINK NOT *1 vblex)
	(*-1C vblex BARRIER setn-gr)
	(*-1C vblex LINK *1 subst/prn LINK NOT *1 subst/prn)
	(*1C pres/pret BARRIER vblex)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 1708
SELECT (clb cnj) IF
	(NOT 0 %saa%)
	(1 subst/prn/%all%/%mang%/%mange%)
	(-1 subst/prn/%all%/%mang%/%mange%)
	(*-1C vblex LINK 0 kop LINK NOT *1 vblex)
	(*-1C vblex BARRIER setn-gr)
	(*-1C vblex BARRIER subst/prn)
	(*1C pres/pret BARRIER vblex)
	(*1C pres/pret BARRIER setn-gr)
	(*1C pres/pret LINK *-1 ikke-poss-det LINK 0 nom LINK NOT *-1 ikke-adv-adj-det);


# 1667
SELECT (clb) IF
	(0 komma)
	(*1 setn-gr LINK *-1C pres/pret LINK -1 nom LINK NOT -1 nom)
	(*-1 pres/pret BARRIER setn-gr);


# 1668
SELECT (clb) IF
	(0 komma)
	(*1 setn-gr LINK *-1C pres/pret LINK NOT -1 nom)
	(*-1 pres/pret BARRIER setn-gr);


# 1669
SELECT (clb) IF
	(0 komma)
	(1C pres/pret)
	(*-1 pres/pret BARRIER setn-gr);


# 1670
SELECT (clb) IF
	(0 komma)
	(1 pres/pret)
	(NOT 1 farlige-vblex)
	(*-1C setn-gr LINK *1 pres/pret LINK *1 clb-cnj LINK NOT -1 komma);


# 1671
SELECT (clb) IF
	(0 komma)
	(NOT 1 cnj-<adv> OR pres/pret)
	(*1 pres/pret BARRIER setn-gr)
	(*-1C setn-gr LINK *1 pres/pret LINK *1 clb-cnj LINK NOT -1 komma)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma);


# 1672
SELECT (clb) IF
	(0 komma)
	(1 sier-vblex)
	(2 nom)
	(*-1 fv BARRIER setn-gr);


# 1673
SELECT (clb) IF
	(0 komma)
	(1 pres/pret)
	(NOT 1 inf OR farlige-vblex)
	(NOT -1 adj)
	(*-1C setn-gr LINK *1 pres/pret LINK 0 m-hj-vblex LINK NOT *1 clb-cnj);


# 1674
SELECT (clb) IF
	(0 komma)
	(1 pres/pret)
	(NOT 1 farlige-vblex OR perf-part)
	(NOT -1 adj)
	(*-1C setn-gr LINK *1 pres/pret LINK 0 p-hj-vblex LINK NOT *1 clb-cnj);


# 1675
SELECT (clb) IF
	(0 komma)
	(1 pres/pret)
	(NOT 1 farlige-vblex)
	(NOT -1 adj)
	(*-1C setn-gr LINK *1 pres/pret LINK NOT 0 hj-vblex LINK NOT *1 clb-cnj);


# 1676
SELECT (clb) IF
	(0 komma)
	(NOT 1 pr OR cnj)
	(2 pres/pret)
	(NOT 2 farlige-vblex OR perf-part)
	(*-1C setn-gr LINK *1 pres/pret LINK NOT *1 clb-cnj);


# 1677
SELECT (clb) IF
	(0 komma)
	(1 pres/pret)
	(NOT 1 farlige-vblex OR perf-part)
	(*-1C setn-gr LINK *1 pres/pret LINK NOT *1 clb-cnj);


# 1678
SELECT (clb) IF
	(0 komma)
	(NOT 1 setn-gr OR cnj-<adv>)
	(*1 pres/pret BARRIER setn-gr)
	(*-1C setn-gr LINK *1 pres/pret LINK NOT *1 clb-cnj)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK -1 nom LINK NOT -1 nom)
	(*1 pres/pret LINK NOT -1 cnj);


# 1679
SELECT (clb) IF
	(0 komma)
	(NOT 1 setn-gr OR cnj-<adv>)
	(*1 pres/pret BARRIER setn-gr)
	(*-1C setn-gr LINK *1 pres/pret LINK NOT *1 clb-cnj)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma LINK NOT 0 nom)
	(*1 pres/pret LINK NOT -1 cnj);


# 1680
SELECT (clb) IF
	(0 clb/cnj-cnj)
	(-1 strek)
	(*-1 fv BARRIER setn-gr)
	(*1 pres/pret BARRIER setn-gr)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma);


# 1681
SELECT (clb) IF
	(0 clb/cnj-cnj)
	(NOT -1 replikk OR clb)
	(-2 strek)
	(*-1 fv BARRIER setn-gr)
	(*1 pres/pret BARRIER setn-gr)
	(*1 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 perf-part LINK NOT -1 pr/komma);


# 1665
SELECT (imp) IF
	(NOT 0 pr OR subst)
	(-1 replikk)
	(NOT *1 overskrift BARRIER setn-gr)
	(*1 setn-gr BARRIER pres/pret);


# 1666
SELECT (imp) IF
	(-1 clb-cnj)
	(*-2 setn-gr LINK 1C imp LINK NOT *1 pres/pret);


# 1620
SELECT (sbu) IF
	(-1 cnj)
	(-2 komma)
	(*1 ikke-adv-adj-det LINK 0 subst/prn/%all%/%mang%/%mange% LINK *1 ikke-adv LINK 0 pres/pret LINK *1 ikke-adv LINK 0 iv);


# 1621
SELECT (sbu) IF
	(0 %som%)
	(NOT -1 >>>)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT *-1 ikke-adv-adj-subst-det-pr)
	(*2 pres/pret LINK *1 komma LINK 1 pres/pret)
	(*-1C setn-gr BARRIER pres/pret)
	(*-1C setn-gr LINK 0 >>>);


# 1622
SELECT (sbu) IF
	(0 %som%)
	(-1 pres/pret)
	(1C subst/prn)
	(2 pres/pret);


# 1623
SELECT (sbu) IF
	(0 %som%)
	(1C subst/prn)
	(2C advblex)
	(NOT -2 sbu)
	(3 pres/pret)
	(NOT 3 farlige-vblex);


# 1624
SELECT (sbu) IF
	(0 %som%)
	(1 pres/pret)
	(NOT 1 farlige-vblex OR subst-gen)
	(2 pres/pret)
	(*-1C setn-gr BARRIER pres/pret);


# 1625
SELECT (sbu) IF
	(0 %som%)
	(1 pres/pret)
	(NOT 1 farlige-vblex OR subst-gen)
	(NOT 2 pres/pret);


# 1626
SELECT (sbu) IF
	(0 %som%)
	(1 advblex)
	(NOT 1 subst)
	(NOT -1 >>>)
	(2 pres/pret)
	(NOT 2 farlige-vblex)
	(NOT -2 >>>);


# 1627
SELECT (sbu) IF
	(0 %som%)
	(-1 cnj)
	(NOT -1 clb)
	(*1 clb-komma BARRIER setn-gr)
	(*1 clb-komma LINK *-1 pres/pret)
	(*1 clb-komma LINK 1 pres/pret)
	(*1 clb-komma LINK NOT 1 farlige-vblex)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst-gen LINK NOT -1 pr/komma);


# 1628
SELECT (sbu) IF
	(0 %som%)
	(-1 cnj)
	(-2 >>>)
	(*1 clb-komma BARRIER setn-gr)
	(*1 clb-komma LINK *-1 pres/pret)
	(*1 clb-komma LINK 1 pres/pret)
	(*1 clb-komma LINK NOT 1 farlige-vblex)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst-gen LINK NOT -1 pr/komma);


# 1629
SELECT (sbu) IF
	(0 %som%)
	(-1 >>>)
	(*1 clb-komma BARRIER setn-gr)
	(*1 clb-komma LINK *-1 pres/pret)
	(*1 clb-komma LINK 1 pres/pret)
	(*1 clb-komma LINK NOT 1 farlige-vblex)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst-gen LINK NOT -1 pr/komma);


# 1630
SELECT (sbu) IF
	(1 subst-prop)
	(2 subst-prop)
	(NOT *-2 sbu BARRIER setn-gr)
	(3 subst-prop)
	(4 pres/pret)
	(NOT 4 farlige-vblex)
	(*-1C fv BARRIER setn-gr);


# 1631
SELECT (sbu) IF
	(1 subst-prop)
	(2 subst-prop)
	(NOT *-2 sbu BARRIER setn-gr)
	(3 cnj)
	(NOT 3 clb)
	(4 subst-prop)
	(5 subst-prop)
	(6 pres/pret)
	(NOT 6 farlige-vblex)
	(*-1C fv BARRIER setn-gr);


# 1632
SELECT (sbu) IF
	(1 subst-prop)
	(2 cnj)
	(NOT 2 clb)
	(NOT *-2 sbu BARRIER setn-gr)
	(3 subst-prop)
	(4 pres/pret)
	(NOT 4 farlige-vblex)
	(*-1C fv BARRIER setn-gr);


# 1633
SELECT (sbu) IF
	(1 subst-prop)
	(2 subst-prop)
	(NOT *-2 sbu BARRIER setn-gr)
	(3 pres/pret)
	(NOT 3 farlige-vblex)
	(*-1C fv BARRIER setn-gr);


# 1634
SELECT (sbu) IF
	(NOT *-2 sbu BARRIER setn-gr)
	(*1 pr LINK NOT 0 sbu LINK 1 subst/prn LINK 1 pres/pret LINK NOT 0 farlige-vblex)
	(*1 pr BARRIER ikke-adv-adj-subst-det-pr)
	(*-1C fv BARRIER setn-gr);


# 1635
SELECT (sbu) IF
	(1 subst/prn)
	(2 cnj)
	(3 subst/prn)
	(4 pres/pret)
	(NOT 4 farlige-vblex)
	(*-1 sbu LINK *1C fv)
	(*-1 sbu LINK *-1 pres/pret);


# 1636
SELECT (sbu) IF
	(1 subst/prn)
	(2 cnj)
	(3 subst/prn)
	(4 pres/pret)
	(NOT 4 farlige-vblex)
	(*-1 sbu LINK *1C fv LINK *1 fv)
	(*-1 sbu LINK NOT *-1 fv);


# 1637
SELECT (sbu) IF
	(1 subst/prn)
	(2 cnj)
	(3 subst/prn)
	(4 pres/pret)
	(NOT 4 farlige-vblex)
	(*-1 sbu LINK *1C fv LINK NOT *1 fv)
	(*-1 sbu LINK NOT *-1 fv);


# 1638
SELECT (sbu) IF
	(1 subst/prn)
	(2 cnj)
	(NOT *-2 sbu BARRIER setn-gr)
	(3 subst/prn)
	(4 advblex)
	(5 pres/pret)
	(NOT 5 farlige-vblex)
	(*-1C fv BARRIER setn-gr);


# 1639
SELECT (sbu) IF
	(1 subst/prn)
	(2 cnj)
	(NOT *-2 sbu BARRIER setn-gr)
	(3 subst/prn)
	(4 pres/pret)
	(NOT 4 farlige-vblex)
	(*-1C fv BARRIER setn-gr);


#
;


# 1640
SELECT (sbu) IF
	(NOT 0 %som%)
	(NOT 1 pres/pret)
	(*1 pres/pret BARRIER setn-gr)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst-gen LINK -1 det-etterstilt LINK -1 subst/prn);


# 1641
SELECT (sbu) IF
	(NOT 0 %som% OR %bare%)
	(-1 komma)
	(NOT 1 pres/pret)
	(*1 pres/pret BARRIER setn-gr)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst-gen LINK NOT -1 pr/komma);


# 1642
SELECT (sbu) IF
	(NOT 0 %som%)
	(-1 cnj)
	(NOT 1 pres/pret)
	(-2 >>>)
	(*1 clb-komma LINK *-1 pres/pret)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst-gen LINK NOT -1 pr/komma);


# 1643
SELECT (sbu) IF
	(NOT 0 %som%)
	(-1 >>>)
	(NOT 1 pres/pret)
	(*1 clb-komma LINK *-1 pres/pret)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst-gen LINK NOT -1 pr/komma)
	(*1 clb-komma LINK 1 advblex/komp/ub-sup LINK 1 pres/pret LINK NOT 0 farlige-vblex)
	(*1 clb-komma LINK 1 advblex/komp/ub-sup LINK NOT 0 %saa/og/selv%)
	(*1 clb-komma LINK NOT -1 komma);


# 1644
SELECT (sbu) IF
	(NOT 0 %som%)
	(-1 >>>)
	(NOT 1 pres/pret)
	(*1 clb-komma LINK *-1 pres/pret)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst-gen LINK NOT -1 pr/komma)
	(*1 clb-komma LINK 1 pres/pret LINK NOT 0 farlige-vblex);


# 1645
SELECT (sbu) IF
	(NOT 1 sbu OR pres/pret)
	(NOT -1 clb)
	(*-1 sbu LINK *1C fv)
	(*-1 sbu LINK *-1 pres/pret)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst/adj-gen LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 subst LINK NOT *-1 subst/prn/pr);


# 1646
SELECT (sbu) IF
	(NOT 1 sbu OR pres/pret)
	(NOT -1 clb)
	(*-1 sbu LINK *1C fv)
	(*-1 sbu LINK *-1 pres/pret)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst/adj-gen LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 prn LINK NOT *-1 subst/prn/pr);


# 1647
SELECT (sbu) IF
	(NOT 1 pres/pret)
	(*-1 sbu LINK *1C fv LINK *1 fv)
	(*-1 sbu LINK NOT *-1 fv)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst/adj-gen LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 subst LINK NOT *-1 subst/prn);


# 1648
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret)
	(*-1 sbu LINK *1C fv LINK *1 fv)
	(*-1 sbu LINK NOT *-1 fv)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst/adj-gen LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 prn LINK NOT *-1 subst/prn);


# 1649
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret)
	(*-1 sbu LINK *1C fv LINK NOT *1 fv)
	(*-1 sbu LINK NOT *-1 fv)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst/adj-gen LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 subst LINK NOT *-1 subst/prn)
	(*2 pres/pret LINK *1 pres/pret LINK NOT *-1 sbu);


# 1650
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret)
	(*-1 sbu LINK *1C fv LINK NOT *1 fv)
	(*-1 sbu LINK NOT *-1 fv)
	(*2 pres/pret LINK NOT 0 farlige-vblex LINK NOT 0 subst/adj-gen LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 prn LINK NOT *-1 subst/prn)
	(*2 pres/pret LINK *1 pres/pret LINK NOT *-1 sbu);


# 1651
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT -1 clb-cnj)
	(NOT -2 clb-cnj)
	(*1 pres/pret BARRIER setn-gr)
	(*3 pres/pret LINK NOT 0 subst/adj-gen LINK NOT 0 farlige-vblex LINK -1 subst/prn LINK NOT -1 subst/prn)
	(*3 pres/pret LINK *-1 komma/cnj LINK NOT 0 clb)
	(*3 pres/pret BARRIER ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*-1C fv BARRIER setn-gr)
	(*-1C setn-gr BARRIER setn-gr);


# 1652
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT -1 clb-cnj)
	(*1 pres/pret BARRIER setn-gr)
	(*3 pres/pret LINK NOT 0 subst/adj-gen LINK NOT 0 farlige-vblex LINK -1 subst/prn LINK NOT -1 subst/prn)
	(*3 pres/pret LINK *-1 komma/cnj LINK NOT 0 clb)
	(*3 pres/pret BARRIER ikke-adv-adj-subst-prn-cnj-det2)
	(*-1C fv BARRIER setn-gr);


# 1653
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret)
	(NOT -1 clb-cnj)
	(NOT *-2 sbu BARRIER setn-gr)
	(*1 pres/pret BARRIER setn-gr)
	(*2 pres/pret LINK NOT 0 subst/adj-gen LINK NOT 0 farlige-vblex LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 advblex/komp LINK -1 advblex LINK -1 subst/prn LINK NOT *-1 subst/prn)
	(*-1C fv BARRIER setn-gr);


# 1654
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret)
	(NOT -1 clb-cnj)
	(NOT *-2 sbu BARRIER setn-gr)
	(*1 pres/pret BARRIER setn-gr)
	(*2 pres/pret LINK NOT 0 subst/adj-gen LINK NOT 0 farlige-vblex LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 advblex LINK -1 subst LINK NOT *-1 subst/prn)
	(*-1C fv BARRIER setn-gr);


# 1655
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret OR pr)
	(NOT -1 clb-cnj)
	(NOT *-2 sbu BARRIER setn-gr)
	(*1 pres/pret BARRIER setn-gr)
	(*2 pres/pret LINK NOT 0 subst/adj-gen LINK NOT 0 farlige-vblex LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 advblex LINK -1 prn LINK NOT *-1 subst/prn)
	(*-1C fv BARRIER setn-gr);


# 1656
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret OR pr)
	(NOT -1 clb-cnj)
	(NOT *-2 sbu BARRIER setn-gr)
	(*1 pres/pret BARRIER setn-gr)
	(*2 pres/pret LINK NOT 0 subst/adj-gen LINK NOT 0 farlige-vblex LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 det-etterstilt LINK -1 subst/prn)
	(*-1C fv BARRIER setn-gr);


# 1657
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret)
	(NOT -1 clb-cnj)
	(NOT -2 clb-cnj)
	(NOT *-2 sbu BARRIER setn-gr)
	(*1 pres/pret BARRIER setn-gr)
	(*2 pres/pret LINK NOT 0 subst-gen LINK NOT 0 farlige-vblex LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 subst LINK NOT *-1 subst/prn)
	(*-1C fv BARRIER setn-gr);


# 1658
SELECT (sbu) IF
	(NOT 0 %bare%)
	(NOT 1 pres/pret OR pr)
	(NOT -1 clb-cnj)
	(NOT *-2 sbu BARRIER setn-gr)
	(*1 pres/pret BARRIER setn-gr)
	(*2 pres/pret LINK NOT 0 subst/adj-gen LINK NOT 0 farlige-vblex LINK NOT -1 pr-tall)
	(*2 pres/pret BARRIER komma/cnj)
	(*2 pres/pret LINK -1 prn LINK NOT *-1 subst/prn)
	(*-1C fv BARRIER setn-gr);


# 1659
SELECT (sbu) IF
	(*-1 setn-gr LINK NOT 0 sbu)
	(*1C pres/pret BARRIER ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)
	(*1C pres/pret LINK 1 pr LINK *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 clb-komma LINK 1C pres/pret);


# 1660
SELECT (sbu) IF
	(*-1 setn-gr LINK NOT 0 sbu)
	(*1C pres/pret BARRIER ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)
	(*1C pres/pret LINK 1 pr LINK *1 ikke-adv-adj-substmgen-prn-cnj-detmdem-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret);


# 1661
SELECT (sbu) IF
	(*-1 setn-gr LINK NOT 0 sbu)
	(*1C pres/pret BARRIER ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)
	(*1C pres/pret LINK *1 ikke-adv-adj-det LINK 0 nom LINK 1 clb-komma LINK 1C pres/pret);


# 1662
SELECT (sbu) IF
	(*-1 setn-gr LINK NOT 0 sbu)
	(*1C pres/pret BARRIER ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)
	(*1C pres/pret LINK *1 ikke-adv-adj-det LINK 0 nom LINK 1C pres/pret);


# 1663
SELECT (sbu) IF
	(*-1 setn-gr LINK NOT 0 sbu)
	(*1C pres/pret BARRIER ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)
	(*1C pres/pret LINK *1 ikke-adv-pr LINK 0 clb-komma LINK 1C pres/pret);


# 1664
SELECT (sbu) IF
	(*-1 setn-gr LINK NOT 0 sbu)
	(*1C pres/pret BARRIER ikke-adv-adj-substmgen-prn-cnj-detmdem-pr)
	(*1C pres/pret LINK *1 ikke-adv-pr LINK 0 pres/pret LINK NOT 0 ikke-pres-pret);


# 1619
SELECT (subst prop) IF
	(NOT 0 %i/aa%)
	(1 subst-prop)
	(NOT 1 %i/aa%);


# 1618
SELECT (subst) IF
	(NOT 0 farlige-adj-subst OR ikke-adj-subst)
	(-1C pr)
	(NOT 1 subst/adj OR komma/cnj);


# 1616
SELECT (vblex pres) IF
	(NOT 0 pret OR subst-gen)
	(-1 clb-komma/cnj)
	(NOT 1 kolon)
	(NOT *1 overskrift BARRIER setn-gr)
	(*-1C setn-gr BARRIER fv)
	(*1C setn-gr BARRIER fv);


# 1617
SELECT (vblex pres) IF
	(NOT 0 farlige-vblex OR subst-gen)
	(NOT 1 kolon)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 komma/cnj OR sbu)
	(NOT -1 parentes OR >>>)
	(NOT -1 overskrift OR inf)
	(*-1C setn-gr BARRIER pres/pret)
	(*1C setn-gr BARRIER pres/pret);


# 1614
SELECT (vblex perf-part) IF
	(NOT 0 farlige-part)
	(1C pr)
	(-1C subst)
	(*1C pres/pret BARRIER ikke-adv-adj-subst-prn-cnj-det2-pr)
	(*1C pres/pret LINK -1C subst/prn LINK -1 subst/prn);


# 1615
SELECT (vblex perf-part) IF
	(NOT 0 hj-vblex)
	(*-1 fv LINK 0 %ha% LINK NOT *1 setn-gr)
	(*1 inf LINK *-1 ikke-poss-det LINK 0 subst/prn/%all%/%mang%/%mange% LINK NOT 0 infmerke LINK NOT *-1 ikke-adv-adj-det);


# 1612
SELECT (vblex pret) IF
	(NOT 0 farlige-vblex OR pres)
	(NOT 0 imp OR subst-gen)
	(-1 clb-komma/cnj)
	(NOT 1 kolon)
	(NOT *1 overskrift BARRIER setn-gr)
	(*-1C setn-gr BARRIER fv)
	(*1C setn-gr BARRIER fv);


# 1613
SELECT (vblex pret) IF
	(NOT 0 imp OR subst-gen)
	(NOT 1 kolon)
	(NOT *1 overskrift BARRIER setn-gr)
	(NOT -1 komma/cnj OR sbu)
	(NOT -1 parentes OR inf)
	(NOT -1 >>> OR overskrift)
	(*-1C setn-gr BARRIER pres/pret)
	(*1C setn-gr BARRIER pres/pret);


# 1608
REMOVE (adj def sg) IF
	(0 pl)
	(NOT 0 %syvende%)
	(NOT *1 subst/prn BARRIER setn-gr)
	(NOT *-1 det-ent/prn-ent BARRIER setn-gr);


# 1609
REMOVE (adj def sg) IF
	(0 pl)
	(NOT 0 %syvende% OR %tiltalte%)
	(NOT *1 subst/prn BARRIER setn-gr)
	(*-1 ikke-adv-adj-det-prn LINK NOT 0 det-ent/prn-ent LINK NOT 1 det-ent/prn-ent);


# 1610
REMOVE (adj def sg) IF
	(0 pl)
	(NOT 0 %syvende% OR %tiltalte%)
	(NOT *-1 det-ent/prn-ent BARRIER setn-gr)
	(*1 subst/prn LINK *-1 ikke-adv-adj-det);


# 1611
REMOVE (adj def sg) IF
	(0 pl)
	(NOT 0 %syvende% OR %tiltalte%)
	(*1 subst/prn LINK *-1 ikke-adv-adj-det)
	(*-1 ikke-adv-adj-det-prn LINK NOT 0 det-ent/prn-ent LINK NOT 1 det-ent/prn-ent);


# 1607
REMOVE (adj mf ind) IF
	(1 iv)
	(*1C fv BARRIER ikke-adv);


# 1586
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(-1 %meste%)
#	(1C clb-komma/cnj)
#	(NOT -3 %for%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1587
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(-1 %minste%)
#	(1C clb-komma/cnj)
#	(NOT -3 %i%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1588
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(-1 adj-be)
#	(1C clb-komma/cnj)
#	(NOT -1 %meste/minste% OR %mye/lite%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1589
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(-1 %mest/minst%)
#	(1C clb-komma/cnj)
#	(*-1 vblex LINK NOT 0 kop)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1590
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(-1 %mest/minst%)
#	(1C clb-komma/cnj)
#	(*1 vblex LINK NOT 0 kop LINK NOT *-1 setn-gr)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1591
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(-1 adj-ub-ent/%bare%)
#	(1C clb-komma/cnj)
#	(*-2 pr BARRIER ikke-adv-adj)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1592
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(-1 adj-ub-ent)
#	(1C clb-komma/cnj)
#	(NOT -1 %mye/lite% OR nt-ent-adj)
#	(NOT -1 vblex OR %mest/minst%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1593
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(1 komma/cnj)
#	(-1 %meste%)
#	(NOT 2 adj)
#	(NOT -3 %for%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1594
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(1 komma/cnj)
#	(-1 %minste%)
#	(NOT 2 adj)
#	(NOT -3 %i%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1595
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(1 komma/cnj)
#	(-1 adj-be)
#	(NOT -1 %meste/minste% OR %mye/lite%)
#	(NOT 2 adj)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1596
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(1 komma/cnj)
#	(-1 %mest/minst%)
#	(NOT 2 adj)
#	(*-1 vblex LINK NOT 0 kop)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1597
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(1 komma/cnj)
#	(-1 %mest/minst%)
#	(NOT 2 adj)
#	(*1 vblex LINK NOT 0 kop LINK NOT *-1 setn-gr)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1598
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(1 komma/cnj)
#	(-1 adj-ub-ent/%bare%)
#	(NOT 2 adj)
#	(*-2 pr BARRIER ikke-adv-adj)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1599
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(1 komma/cnj)
#	(-1 adj-ub-ent)
#	(NOT -1 %mye/lite% OR nt-ent-adj)
#	(NOT -1 vblex OR %mest/minst%)
#	(NOT 2 adj)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1600
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(-1 %meste%)
#	(NOT 1 subst/adj OR komma/cnj)
#	(NOT -3 %for%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1601
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(-1 %minste%)
#	(NOT 1 subst/adj OR komma/cnj)
#	(NOT -3 %i%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1602
#REMOVE (adj) IF
#	(0 be-subst)
#	(NOT 0 farlige-adj-subst)
#	(-1 adj-be)
#	(NOT 1 subst/adj OR komma/cnj)
#	(NOT -1 %meste/minste% OR %mye/lite%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1603
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(-1 %mest/minst%)
#	(NOT 1 subst/adj OR komma/cnj)
#	(*-1 vblex LINK NOT 0 kop)
#	(*-1 setn-gr/vblex BARRIER %noe%)
#
#;


# 1604
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(-1 %mest/minst%)
#	(NOT 1 subst/adj OR komma/cnj)
#	(*1 vblex LINK NOT 0 kop LINK NOT *-1 setn-gr)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1605
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(-1 adj-ub-ent/%bare%)
#	(NOT 1 subst/adj OR komma/cnj)
#	(*-2 pr BARRIER ikke-adv-adj)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1606
#REMOVE (adj) IF
#	(0 subst)
#	(NOT 0 be-subst OR pl)
#	(-1 adj-ub-ent)
#	(NOT 1 subst/adj OR komma/cnj)
#	(NOT -1 %mye/lite% OR nt-ent-adj)
#	(NOT -1 vblex OR %mest/minst%)
#	(*-1 setn-gr/vblex BARRIER %noe%);


# 1582
REMOVE (clb cnj) IF
	(0 %og/eller%)
	(1 be-det-ent/fl)
	(-1 be-subst)
	(2 be-subst)
	(-2 be-det-ent/fl);


#
;


# 1581
REMOVE (clb) IF
	(0 cnj)
	(1 det)
	(-1 %en/ei/et%);


# 1579
REMOVE (det m) IF
	(0 %en%)
	(1 advblex)
	(NOT 1 m)
	(NOT 2 m);


# 1580
REMOVE (det m) IF
	(0 %en%)
	(NOT 0 gen)
	(NOT 1 m OR advblex)
	(NOT 1 adj-sup OR adj-komp)
	(NOT 1 %av% OR pl-det)
	(NOT 1 komma/cnj OR anf);


# 1578
REMOVE (imp) IF
	(0 adj)
	(1 infmerke);


# 1577
REMOVE (perf-part) IF
	(0 samset OR subst);


# 1572
REMOVE (subst) IF
	(0 adj)
	(NOT 0 nt)
	(1 infmerke)
	(-1C nt-ent-adj);


# 1573
REMOVE (subst) IF
	(0 adj)
	(1 infmerke)
	(NOT -1 det/adj)
	(*-1 vblex LINK NOT 0 kop);


# 1574
REMOVE (subst) IF
	(0 adj)
	(1 infmerke)
	(NOT -1 det/adj)
	(NOT *-1 vblex BARRIER setn-gr);


# 1575
REMOVE (subst) IF
	(0 %siden%)
	(-1 pr)
	(1C nom)
	(NOT -1 be-m-det OR be-ent-m-adj);


# 1576
REMOVE (subst) IF
	(0 %siden%)
	(-1 pr)
	(1C setn-gr)
	(NOT -1 be-m-det OR be-ent-m-adj);


# 1570
REMOVE (vblex pres) IF
	(NOT 0 m-hj-vblex)
	(*-1 setn-gr LINK 0 %og/men%)
	(*1 pres/pret BARRIER setn-gr)
	(*-1 >>> LINK NOT 1 sbu LINK *1 fv LINK NOT 0 pres LINK NOT 0 m-hj-vblex);


# 1571
REMOVE (vblex pres) IF
	(NOT 0 m-hj-vblex)
	(*-1 setn-gr LINK 0 %og/men%)
	(*-1 pres/pret BARRIER setn-gr)
	(*-1 >>> LINK NOT 1 sbu LINK *1 fv LINK NOT 0 pres LINK NOT 0 m-hj-vblex);


# 1569
REMOVE (vblex perf-part) IF
	(NOT 0 farlige-part)
	(1C pr)
	(-1C subst)
	(*1C pres/pret LINK *-1 ikke-adv-adj-subst-prn-cnj-det2-pr);


# 1567
REMOVE (vblex pret) IF
	(NOT 0 m-hj-vblex)
	(*-1 setn-gr LINK 0 %og/men%)
	(*1 pres/pret BARRIER setn-gr)
	(*-1 >>> LINK NOT 1 sbu LINK *1 fv LINK NOT 0 pret LINK NOT 0 m-hj-vblex);


# 1568
REMOVE (vblex pret) IF
	(NOT 0 m-hj-vblex)
	(*-1 setn-gr LINK 0 %og/men%)
	(*-1 pres/pret BARRIER setn-gr)
	(*-1 >>> LINK NOT 1 sbu LINK *1 fv LINK NOT 0 pret LINK NOT 0 m-hj-vblex);


# 1564
REMOVE (vblex) IF
	(0 veldig-farlige-vblex)
	(*-1 pres/pret BARRIER setn-gr);


# 1565
REMOVE (vblex) IF
	(0 veldig-farlige-vblex)
	(*1 pres/pret BARRIER setn-gr);


# 1566
REMOVE (vblex) IF
	(NOT 0 ikke-subst-vblex)
	(-1C tall)
	(NOT -1 ikke-tall)


END
