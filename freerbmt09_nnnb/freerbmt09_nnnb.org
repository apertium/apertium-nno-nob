#+TITLE: Reuse of Free Resources in Machine Translation between Norwegian Nynorsk and Bokmål
#+OPTIONS: skip:nil num:nil author:nil
#+EMAIL: unhammer at gmail dot com
#+LANGUAGE: en
#+TAGS: ROTETE(r)
#+SEQ_TODO: SKRIV FERDIG
#+EXPORT_EXCLUDE_TAGS: ROTETE
#+LaTeX_CLASS: freerbmt
#+LaTeX_HEADER: \usepackage{hyperref}
#+LaTeX_HEADER: \author{Jane Doe\\  Department of Computer Science \\  Nonesuch State University \\  Utopia, NS 12345 \\  {\tt jane.doe@cs.nsu.edu} \And  John Smith \\  Department of Linguistics \\  Another State University \\  Collegetown, AS 98765 \\    {\tt jsmith@ling.asu.edu}}

#+BEGIN_LaTeX
\begin{abstract}
This article has a very long title, which should probably be snappier
  and more enticing since we want people to read the abstract to find
  out what it's really all about.
\end{abstract}
#+END_LaTeX

* Introduction
The term /Norwegian/ covers a variety of related spoken dialects. Up
until the 1800's, Danish was the only written standard used in
Norway. Bokmål emerged through various reforms which brought the
written language closer to the spoken; Nynorsk however, was created
from the ground up with the purpose of representing all the spoken
dialects of Norway. As it is, certain dialects (especially around the
Oslo area) correspond more with Bokmål, while others are closer to
Nynorsk. Nynorsk is "in a minority position in Norway, with
approximately 12% of the users" \citep{everson2000sln}, or around
450,000 people. 

Although Nynorsk is in a minority position, there are quite good
linguistic resources available under Free licences, compared to many
languages with the same amount of speakers.  We describe the creation
of a machine translation system between Nynorsk and Bokmål[fn:4] built
using these resources with the free and open source Apertium platform
\citep{corbi05oss}. In the following section we give an overview of
the Apertium platform and Constraint Grammar. Section
\ref{SEC:development} describes how the available resources were
integrated into Apertium, and how we dealt with lexical and syntactic
transfer (for which we did not have freely available resources). In
the next two sections we give an evaluation of the translation quality
and a discussion of the lessons learnt and how the system may be
further improved.

* Design
  \label{SEC:design}

The nn-nb language pair follows the design of the Apertium system
\citep{corbi05oss}, a highly modular, shallow-transfer pipeline
machine translation system. Dictionaries written in XML are compiled
into reversible finite state transducers, so that word-for-word
translations are possible in both directions using only two
monolingual (morphological analysis/generation) and one translational
(transfer) dictionary. First order hidden Markov models are used after
analysis for part-of-speech disambiguation[fn:7]. The transfer module
is finite state based and allows three-stage chunking transfer
(although nn-nb only uses one-stage transfer). De-/reformatters
applied to the beginning and end of the pipeline lets one preserve
formatting of various document types.

The nn-nb language pair differs from most of the other Apertium pairs
in using a Constraint Grammar module[fn:3] as a pre-disambiguator
(before the statistical tagger). Constraint Grammars
\citep{karlsson1990cgf} are hand-written rules which, given
ambiguously tagged input (eg. 'read' tagged both as a past and present
tense verb), may SELECT one reading/analysis over all the others, or
REMOVE a certain reading from the set of analyses. The last reading is
never removed, although we may end up with several readings if the
input was in fact ambiguous or the grammar didn't manage to remove
what it should. Constraint Grammars may also MAP (add) new tags to
readings, typically syntactic function labels. Rules may check in
either direction for the existence of tags or even specific words,
over absolute or undefined distances.

In the next section we describe the development and use of these
modules in nn-nb.

* Development
  \label{SEC:development}
** Resources
We used Norsk Ordbank[fn:2], a $>100,000$ lemma GPL-ed full form
dictionary, as our basis for the morphological analysis and
generation. We also used the morphological disambiguator of the
Oslo-Bergen Tagger \citep{hagen2000cbt}, a high quality GPL Constraint
Grammar. These were converted into Apertium formats and tag
schemes. We found no freely available bilingual dictionary, so this
was created using various both manual and automatic methods, along
with transfer rules to cope with syntactic differences and agreement.
*** SKRIV mention KDE4 and bitextor web sites?
** Analysis and generation
Norsk Ordbank is a full form dictionary with morphological
information. Most Apertium language pairs use /lttoolbox/ for
morphological analysis and generation, which compiles XML entries into
fast finite state transducers and allow generalisations to be made
across eg. common suffix paradigms. The full form dictionary was
semi-automatically transformed into the lttoolbox format 
*** SKRIV example of an entry?

** Disambiguation
The Oslo-Bergen tagger and Norsk Ordbank use a different tagset from
Apertium. We want the resources used in nn-nb to be useful in creating
new Apertium language pairs, so we converted the tags to ones which
conform as much as possible to other Apertium dictionaries. Most tags
could be replaced one-to-one, although some were replaced with
Constraint Grammar sets. The Oslo-Bergen tagger gives the tags
<subst><appell> and <subst><prop> where Apertium uses <n> and <np>
respectively, so rules working on the single tag subst were changed to
work on the set consisting of the tags n and np. Most of this was done
automatically using simple shell scripts.


** Lexical transfer
The transfer lexicon, or translational dictionary, was created using
three main methods. 

First, exact matches were added where the morphology was the same for
both languages. Eg., if a noun lemma was the same in both languages,
and both languages had the same forms (singular/plural,
definite/indefinite) for the noun, we added it as a translation. This
method got us around 36,000 entries. There are two problems with this
method. One is that it may introduce a lot of false friends. However,
for closely related languages, the benefit outweighs the risk (and
lists of common false friends are not hard to come by in
grammars). The other problem is that we add many "radical forms",
eg. Bokmål words which exist in the Nynorsk dictionary but are far
from being the most natural sounding Nynorsk translation. We can
easily put restrictions on such forms so that they are only analysed,
but not generated, but finding all such pairs involves some work.

We also added entries where there were predictable changes, eg. the
Bokmål adjective suffix /-lig/ will typically be /-leg/ in Nynorsk,
etc. This process, also used by \citet[p.~4]{tyers2009dpm}, simply
consists of
1. finding Bokmål entries without translations
2. running string replacements on these for typical differences in
   substrings
3. checking whether the altered entries actually exist in the Nynorsk
   analyser

Finally, we added some entries using automatic word alignments. We
used two resources here: the KDE4 corpus of software translations, and
text gathered with the bitextor web crawler tool[fn:5]. 

The KDE4 translations are in the /gettext/ (.po-file) format, for
which there are a lot of available tools. We first used the Translate
Toolkit[fn:6] tool /poswap/ to turn the English-Nynorsk and
English-Bokmål .po-files into Nynorsk-Bokmål files, then we ran
/poterminology/, a terminology extraction tool which gathers simple
phrase pairs (all subphrases which appear together over a certain
threshold), taking advantage of the amount of repetition in software
translations. 

We next ran Giza++ \citep{och2003scv} to create word alignments, which
we then fed into the tool ReTraTos \citep{caseli2006aib}.

*** SKRIV wikipedia!
*** SKRIV noe om at nn-nb.po kan nyttast som TMX med Apertium?


*** SKRIV URL til KDE4

- Giza++ (I guess I could do a diff on the bidix from before and after
  I started working on Giza++ stuff)
- Anything about regression testing and that stuff? (Ie. whenever we
  fix a certain transfer construction or disambiguation problem, we
  add a regression test to make sure we don't have to fix it again.)

** Syntactic transfer
- what are the relevant patterns which need transfer?
- how did we solve it?
- how didn't we solve it? (or, what are the problems)


* Evaluation
  \label{SEC:eval}
We define naïve coverage as the proportion of words in a corpus which
are given at least one analysis by our monolingual
dictionaries. Testing on Nynorsk Wikipedia (5116174 words) and Bokmål
Wikipedia (27529115 words), we have 89.6% and 88.2% coverage,
respectively.

The Word Error Rate (WER) on a 3750 word Wikipedia article on
linguistics in the Bokmål to Nynorsk direction was 22.06% when
including unknown words, although since 64.93% of these were
free-rides (ie. the same in Bokmål and Nynorsk) anyway, the final WER
was 10.71%. Typical free-rides include names, loan-words and special
terminology.

- Qualitative assessment...
  - Error types:
    - lexical selection
    - disambiguation
    - transfer (eg. word order, "mannen sin hest")

- Anything about Nyno? (Their web page says 74000 words, don't know
  about WER but the cool thing about Nyno is the interface, ie. the
  freedom of choice with variants and how the user can do the lexical
  selection. 
** outdated..							     :ROTETE:
   The examples from
   http://www.hf.uio.no/tekstlab/Presseklipp/Spr%E5knytt%203-2001.htm
   ("Nyno i bruk") seem to indicate that the OBT is a bit better at
   disambiguating though (underline meaning wrong translation):
   - Original: Når det iverksettes arbeidskamp, er det partene i den
     enkelte tvist som har ansvaret for de konsekvenser arbeidskamp
     påfører tredjemann.
   - Nyno: Når _den iverksettes arbeidskampen_, er _dei_ partane i den
     enkelte tvist som har ansvaret for dei konsekvensane arbeidskamp
     påfører tredjemann.
   - Apertium: Når det blir iverksett *arbeidskamp, er det partane i
     den einskilde tvisten som har ansvaret for dei konsekvensane
     *arbeidskamp påfører tredjemann.

* Discussion
- We don't have any sort of compound handling, probably we could
  analyse a whole lot more with a trie or whatever, but there's also a
  compound handler in OBT that might be possible to integrate.
  - *menneskehandel.
  - menneske. handel.
- "Well-written" nynorsk uses lots of periphrasis and MWE's, eg. particle
  verbs; we don't generate any such thing. A syntactic analysis might
  be useful here, although without being quite certain of where the
  relevant phrase ends, it'll be safer to stick with non-discontinuous
  target language translations.

On the Scandinavian language group, and expanding it for Apertium:
#+BEGIN_QUOTE 
Morphologically, these four languages are equally distant from each
other, but the terminological differences are smaller between Nynorsk
and Bokmål than between the other two. \\
\citep{everson2000sln}
#+END_QUOTE

* SKRIV Acknowledgements should be section* 			     :ROTETE:
* Acknowledgements 
Development was funded as part of the Google Summer of Code[fn:1]
programme. Thanks to mentors and OBT people.

\bibliographystyle{apalike}
\bibliography{apertium}


* Footnotes

[fn:1] http://code.google.com/soc/

[fn:2] http://www.edd.uio.no/prosjekt/ordbanken/

[fn:3] Running on VISL CG-3, available from
http://beta.visl.sdu.dk/cg3.html

[fn:4] Available from http://apertium.org

[fn:5] Available from http://websvn.kde.org/trunk/l10n-kde4/ and
http://bitextor.sourceforge.net/ respectively.

[fn:6] Available from
http://translate.sourceforge.net/wiki/toolkit/index

[fn:7] Although we now have the capability for second order HMM's,
\citep{todo_or_remove}.





